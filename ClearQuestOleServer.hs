-- Automatically generated by HaskellDirect (ihc.exe), version 0.21
-- Created: 07:46 CET, Monday 25 March, 2013
-- Command line: -fno-export-list -d -dshow-passes --verbose -fvariant-enum-instances cqole.IDL

module ClearQuestOleServer where

import Prelude (fromEnum, toEnum)
import qualified Prelude
import qualified Automation (IDispatch, outIDispatch, propertyGet, 
                             inIDispatch, propertySet, outBool, function1, outVariant, 
                             inString, method0, inInt32, outString, Variant, inVariant, 
                             outInt32, method3, inBool, VARIANT, inInt16, outIUnknown, 
                             inIUnknown, outInt16, method6)
import qualified Com (LIBID, mkLIBID, IID, mkIID, CLSID, mkCLSID, 
                      IUnknown)
import qualified ComServ (ComVTable)
import qualified Int (Int32, Int16)
import qualified StdDispatch (createStdDispatchVTBL2, 
                              mkDispMethod, apply_1, retVal, inArg, apply_0)

libidClearQuestOleServer :: Com.LIBID
libidClearQuestOleServer =
  Com.mkLIBID "{B805FDF6-BEA8-11D1-B36D-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdSession
-- 
-- --------------------------------------------------
data IOAdSession_ a = IOAdSession__ 
type IOAdSession a = Automation.IDispatch (IOAdSession_ a)
iidIOAdSession :: Com.IID (IOAdSession ())
iidIOAdSession = Com.mkIID "{94773111-72E8-11D0-A42E-00A024DED613}"

getQueryDefs :: IOAdSession a0
             -> Prelude.IO (Automation.IDispatch ())
getQueryDefs =
  Automation.propertyGet "QueryDefs"
                         []
                         Automation.outIDispatch

setQueryDefs :: Automation.IDispatch a0
             -> IOAdSession a1
             -> Prelude.IO ()
setQueryDefs prop =
  Automation.propertySet "QueryDefs"
                         [Automation.inIDispatch prop]

isMetadataReadonly :: IOAdSession a0
                   -> Prelude.IO Prelude.Bool
isMetadataReadonly =
  Automation.function1 "IsMetadataReadonly"
                       []
                       Automation.outBool

getAuxEntityDefNames :: IOAdSession a0
                     -> Prelude.IO a1
getAuxEntityDefNames =
  Automation.function1 "GetAuxEntityDefNames"
                       []
                       Automation.outVariant

getReqEntityDefNames :: IOAdSession a0
                     -> Prelude.IO a1
getReqEntityDefNames =
  Automation.function1 "GetReqEntityDefNames"
                       []
                       Automation.outVariant

getEntityDefNames :: IOAdSession a0
                  -> Prelude.IO a1
getEntityDefNames =
  Automation.function1 "GetEntityDefNames"
                       []
                       Automation.outVariant

getSubmitEntityDefNames :: IOAdSession a0
                        -> Prelude.IO a1
getSubmitEntityDefNames =
  Automation.function1 "GetSubmitEntityDefNames"
                       []
                       Automation.outVariant

getQueryEntityDefNames :: IOAdSession a0
                       -> Prelude.IO a1
getQueryEntityDefNames =
  Automation.function1 "GetQueryEntityDefNames"
                       []
                       Automation.outVariant

buildEntity :: Prelude.String
            -> IOAdSession a0
            -> Prelude.IO (Automation.IDispatch ())
buildEntity entity_def_name =
  Automation.function1 "BuildEntity"
                       [Automation.inString entity_def_name]
                       Automation.outIDispatch

editEntity :: Automation.IDispatch a1
           -> Prelude.String
           -> IOAdSession a0
           -> Prelude.IO ()
editEntity entity edit_action_name =
  Automation.method0 "EditEntity"
                     [ Automation.inIDispatch entity
                     , Automation.inString edit_action_name
                     ]

buildResultSet :: Automation.IDispatch a1
               -> IOAdSession a0
               -> Prelude.IO (Automation.IDispatch ())
buildResultSet query_def =
  Automation.function1 "BuildResultSet"
                       [Automation.inIDispatch query_def]
                       Automation.outIDispatch

openQueryDef :: Prelude.String
             -> IOAdSession a0
             -> Prelude.IO (Automation.IDispatch ())
openQueryDef filename =
  Automation.function1 "OpenQueryDef"
                       [Automation.inString filename]
                       Automation.outIDispatch

getEntity :: Prelude.String
          -> Prelude.String
          -> IOAdSession a0
          -> Prelude.IO (Automation.IDispatch ())
getEntity entity_def_name display_name =
  Automation.function1 "GetEntity"
                       [ Automation.inString entity_def_name
                       , Automation.inString display_name
                       ]
                       Automation.outIDispatch

getEntityByDbId :: Prelude.String
                -> Int.Int32
                -> IOAdSession a0
                -> Prelude.IO (Automation.IDispatch ())
getEntityByDbId entity_def_name db_id =
  Automation.function1 "GetEntityByDbId"
                       [ Automation.inString entity_def_name
                       , Automation.inInt32 db_id
                       ]
                       Automation.outIDispatch

testingThrowException :: Int.Int32
                      -> IOAdSession a0
                      -> Prelude.IO ()
testingThrowException exception_code =
  Automation.method0 "TestingThrowException"
                     [Automation.inInt32 exception_code]

getEntityDef :: Prelude.String
             -> IOAdSession a0
             -> Prelude.IO (Automation.IDispatch ())
getEntityDef entity_def_name =
  Automation.function1 "GetEntityDef"
                       [Automation.inString entity_def_name]
                       Automation.outIDispatch

markEntityAsDuplicate :: Automation.IDispatch a1
                      -> Automation.IDispatch a2
                      -> Prelude.String
                      -> IOAdSession a0
                      -> Prelude.IO ()
markEntityAsDuplicate entity_to_mark entity_it_duplicates duplicate_action_name =
  Automation.method0 "MarkEntityAsDuplicate"
                     [ Automation.inIDispatch entity_to_mark
                     , Automation.inIDispatch entity_it_duplicates
                     , Automation.inString duplicate_action_name
                     ]

unmarkEntityAsDuplicate :: Automation.IDispatch a1
                        -> Prelude.String
                        -> IOAdSession a0
                        -> Prelude.IO ()
unmarkEntityAsDuplicate entity unduplicate_action_name =
  Automation.method0 "UnmarkEntityAsDuplicate"
                     [ Automation.inIDispatch entity
                     , Automation.inString unduplicate_action_name
                     ]

getServerInfo :: IOAdSession a0
              -> Prelude.IO Prelude.String
getServerInfo =
  Automation.function1 "GetServerInfo"
                       []
                       Automation.outString

outputDebugString :: Prelude.String
                  -> IOAdSession a0
                  -> Prelude.IO ()
outputDebugString the_string =
  Automation.method0 "OutputDebugString"
                     [Automation.inString the_string]

outputTextMessage :: Prelude.String
                  -> IOAdSession a0
                  -> Prelude.IO ()
outputTextMessage the_message =
  Automation.method0 "OutputTextMessage"
                     [Automation.inString the_message]

userLogon :: Prelude.String
          -> Prelude.String
          -> Prelude.String
          -> Int.Int32
          -> Prelude.String
          -> IOAdSession a0
          -> Prelude.IO ()
userLogon login_name password database_name session_type database_set =
  Automation.method0 "UserLogon"
                     [ Automation.inString login_name
                     , Automation.inString password
                     , Automation.inString database_name
                     , Automation.inInt32 session_type
                     , Automation.inString database_set
                     ]

getUserLoginName :: IOAdSession a0
                 -> Prelude.IO Prelude.String
getUserLoginName =
  Automation.function1 "GetUserLoginName"
                       []
                       Automation.outString

getUserFullName :: IOAdSession a0
                -> Prelude.IO Prelude.String
getUserFullName =
  Automation.function1 "GetUserFullName"
                       []
                       Automation.outString

getUserEmail :: IOAdSession a0
             -> Prelude.IO Prelude.String
getUserEmail =
  Automation.function1 "GetUserEmail"
                       []
                       Automation.outString

getUserPhone :: IOAdSession a0
             -> Prelude.IO Prelude.String
getUserPhone =
  Automation.function1 "GetUserPhone"
                       []
                       Automation.outString

getUserMiscInfo :: IOAdSession a0
                -> Prelude.IO Prelude.String
getUserMiscInfo =
  Automation.function1 "GetUserMiscInfo"
                       []
                       Automation.outString

getUserGroups :: IOAdSession a0
              -> Prelude.IO a1
getUserGroups =
  Automation.function1 "GetUserGroups"
                       []
                       Automation.outVariant

getAccessibleDatabases :: Prelude.String
                       -> Prelude.String
                       -> Prelude.String
                       -> IOAdSession a0
                       -> Prelude.IO a1
getAccessibleDatabases master_db_name user_login_name db_set_name =
  Automation.function1 "GetAccessibleDatabases"
                       [ Automation.inString master_db_name
                       , Automation.inString user_login_name
                       , Automation.inString db_set_name
                       ]
                       Automation.outVariant

buildSQLQuery :: Prelude.String
              -> IOAdSession a0
              -> Prelude.IO (Automation.IDispatch ())
buildSQLQuery sql_string =
  Automation.function1 "BuildSQLQuery"
                       [Automation.inString sql_string]
                       Automation.outIDispatch

buildQuery :: Prelude.String
           -> IOAdSession a0
           -> Prelude.IO (Automation.IDispatch ())
buildQuery primary_entitydef_name =
  Automation.function1 "BuildQuery"
                       [Automation.inString primary_entitydef_name]
                       Automation.outIDispatch

getSessionDatabase :: IOAdSession a0
                   -> Prelude.IO (Automation.IDispatch ())
getSessionDatabase =
  Automation.function1 "GetSessionDatabase"
                       []
                       Automation.outIDispatch

getInstalledMasters :: (Automation.Variant a1, Automation.Variant a2)
                    => a1
                    -> a2
                    -> IOAdSession a0
                    -> Prelude.IO ()
getInstalledMasters dbSets masterDbs =
  Automation.method0 "GetInstalledMasters"
                     [ Automation.inVariant dbSets
                     , Automation.inVariant masterDbs
                     ]

getDefaultEntityDef :: IOAdSession a0
                    -> Prelude.IO (Automation.IDispatch ())
getDefaultEntityDef =
  Automation.function1 "GetDefaultEntityDef"
                       []
                       Automation.outIDispatch

hasValue :: Prelude.String
         -> IOAdSession a0
         -> Prelude.IO Prelude.Bool
hasValue name =
  Automation.function1 "HasValue"
                       [Automation.inString name]
                       Automation.outBool

getListDefNames :: IOAdSession a0
                -> Prelude.IO a1
getListDefNames =
  Automation.function1 "GetListDefNames"
                       []
                       Automation.outVariant

getListMembers :: Prelude.String
               -> IOAdSession a0
               -> Prelude.IO a1
getListMembers listName =
  Automation.function1 "GetListMembers"
                       [Automation.inString listName]
                       Automation.outVariant

setListMembers :: Prelude.String
               -> a1
               -> IOAdSession a0
               -> Prelude.IO ()
setListMembers listName members =
  Automation.method0 "SetListMembers"
                     [ Automation.inString listName
                     , Automation.inVariant members
                     ]

addListMember :: Prelude.String
              -> Prelude.String
              -> IOAdSession a0
              -> Prelude.IO ()
addListMember listName member =
  Automation.method0 "AddListMember"
                     [ Automation.inString listName
                     , Automation.inString member
                     ]

deleteListMember :: Prelude.String
                 -> Prelude.String
                 -> IOAdSession a0
                 -> Prelude.IO ()
deleteListMember listName member =
  Automation.method0 "DeleteListMember"
                     [ Automation.inString listName
                     , Automation.inString member
                     ]

getUserEncryptedPassword :: IOAdSession a0
                         -> Prelude.IO Prelude.String
getUserEncryptedPassword =
  Automation.function1 "GetUserEncryptedPassword"
                       []
                       Automation.outString

deleteEntity :: Automation.IDispatch a1
             -> Prelude.String
             -> IOAdSession a0
             -> Prelude.IO Prelude.String
deleteEntity entity deleteActionName =
  Automation.function1 "DeleteEntity"
                       [ Automation.inIDispatch entity
                       , Automation.inString deleteActionName
                       ]
                       Automation.outString

getNameValue :: Prelude.String
             -> IOAdSession a0
             -> Prelude.IO a1
getNameValue name =
  Automation.propertyGet "NameValue"
                         [Automation.inString name]
                         Automation.outVariant

setNameValue :: Prelude.String
             -> a1
             -> IOAdSession a0
             -> Prelude.IO ()
setNameValue name rhs =
  Automation.propertySet "NameValue"
                         [ Automation.inString name
                         , Automation.inVariant rhs
                         ]

getWorkSpace :: IOAdSession a0
             -> Prelude.IO (Automation.IDispatch ())
getWorkSpace =
  Automation.function1 "GetWorkSpace"
                       []
                       Automation.outIDispatch

clearNameValues :: IOAdSession a0
                -> Prelude.IO ()
clearNameValues =
  Automation.method0 "ClearNameValues"
                     []

fireRecordScriptAlias :: Automation.IDispatch a1
                      -> Prelude.String
                      -> IOAdSession a0
                      -> Prelude.IO Prelude.String
fireRecordScriptAlias entity editActionName =
  Automation.function1 "FireRecordScriptAlias"
                       [ Automation.inIDispatch entity
                       , Automation.inString editActionName
                       ]
                       Automation.outString

registerSchemaRepoFromFile :: Prelude.String
                           -> IOAdSession a0
                           -> Prelude.IO Prelude.String
registerSchemaRepoFromFile filePath =
  Automation.function1 "RegisterSchemaRepoFromFile"
                       [Automation.inString filePath]
                       Automation.outString

getEntityDefFamilyNames :: IOAdSession a0
                        -> Prelude.IO a1
getEntityDefFamilyNames =
  Automation.function1 "GetEntityDefFamilyNames"
                       []
                       Automation.outVariant

getEntityDefFamily :: Prelude.String
                   -> IOAdSession a0
                   -> Prelude.IO (Automation.IDispatch ())
getEntityDefFamily familyName =
  Automation.function1 "GetEntityDefFamily"
                       [Automation.inString familyName]
                       Automation.outIDispatch

getEntityDefOrFamily :: Prelude.String
                     -> IOAdSession a0
                     -> Prelude.IO (Automation.IDispatch ())
getEntityDefOrFamily familyName =
  Automation.function1 "GetEntityDefOrFamily"
                       [Automation.inString familyName]
                       Automation.outIDispatch

getQueryEntityDefFamilyNames :: IOAdSession a0
                             -> Prelude.IO a1
getQueryEntityDefFamilyNames =
  Automation.function1 "GetQueryEntityDefFamilyNames"
                       []
                       Automation.outVariant

isEmailEnabled :: IOAdSession a0
               -> Prelude.IO Prelude.Bool
isEmailEnabled =
  Automation.function1 "IsEmailEnabled"
                       []
                       Automation.outBool

getEnabledPackageRevs :: IOAdSession a0
                      -> Prelude.IO (Automation.IDispatch ())
getEnabledPackageRevs =
  Automation.function1 "GetEnabledPackageRevs"
                       []
                       Automation.outIDispatch

getEnabledEntityDefs :: Prelude.String
                     -> Prelude.String
                     -> IOAdSession a0
                     -> Prelude.IO (Automation.IDispatch ())
getEnabledEntityDefs package rev =
  Automation.function1 "GetEnabledEntityDefs"
                       [ Automation.inString package
                       , Automation.inString rev
                       ]
                       Automation.outIDispatch

signOff :: IOAdSession a0
        -> Prelude.IO Prelude.Bool
signOff =
  Automation.function1 "SignOff"
                       []
                       Automation.outBool

emitMessage :: Prelude.String
            -> Int.Int32
            -> IOAdSession a0
            -> Prelude.IO ()
emitMessage message kind =
  Automation.method0 "EmitMessage"
                     [ Automation.inString message
                     , Automation.inInt32 kind
                     ]

getNextMessage :: IOAdSession a0
               -> Prelude.IO (Prelude.String, Int.Int32, Prelude.Bool)
getNextMessage =
  Automation.method3 "GetNextMessage"
                     []
                     Automation.outString
                     Automation.outInt32
                     Automation.outBool

getMessageCount :: IOAdSession a0
                -> Prelude.IO Int.Int32
getMessageCount =
  Automation.function1 "GetMessageCount"
                       []
                       Automation.outInt32

clearMessages :: IOAdSession a0
              -> Prelude.IO ()
clearMessages =
  Automation.method0 "ClearMessages"
                     []

checkHeartbeat :: IOAdSession a0
               -> Prelude.IO Prelude.Bool
checkHeartbeat =
  Automation.function1 "CheckHeartbeat"
                       []
                       Automation.outBool

setRestrictedUser :: IOAdSession a0
                  -> Prelude.IO Prelude.Bool
setRestrictedUser =
  Automation.function1 "SetRestrictedUser"
                       []
                       Automation.outBool

isRestrictedUser :: IOAdSession a0
                 -> Prelude.IO Prelude.Bool
isRestrictedUser =
  Automation.function1 "IsRestrictedUser"
                       []
                       Automation.outBool

getNextEmission :: IOAdSession a0
                -> Prelude.IO Prelude.String
getNextEmission =
  Automation.function1 "GetNextEmission"
                       []
                       Automation.outString

isUserAppBuilder :: IOAdSession a0
                 -> Prelude.IO Prelude.Bool
isUserAppBuilder =
  Automation.function1 "IsUserAppBuilder"
                       []
                       Automation.outBool

isUserSuperUser :: IOAdSession a0
                -> Prelude.IO Prelude.Bool
isUserSuperUser =
  Automation.function1 "IsUserSuperUser"
                       []
                       Automation.outBool

getLocalReplica :: IOAdSession a0
                -> Prelude.IO (Automation.IDispatch ())
getLocalReplica =
  Automation.function1 "GetLocalReplica"
                       []
                       Automation.outIDispatch

getSiteExtendedNames :: Prelude.String
                     -> Prelude.String
                     -> IOAdSession a0
                     -> Prelude.IO a1
getSiteExtendedNames lpszEDefName lpszDisplayName =
  Automation.function1 "GetSiteExtendedNames"
                       [ Automation.inString lpszEDefName
                       , Automation.inString lpszDisplayName
                       ]
                       Automation.outVariant

isSiteExtendedName :: Prelude.String
                   -> IOAdSession a0
                   -> Prelude.IO Prelude.Bool
isSiteExtendedName name =
  Automation.function1 "IsSiteExtendedName"
                       [Automation.inString name]
                       Automation.outBool

parseSiteExtendedName :: (Automation.Variant a1, Automation.Variant a2)
                      => Prelude.String
                      -> a1
                      -> a2
                      -> IOAdSession a0
                      -> Prelude.IO Prelude.Bool
parseSiteExtendedName name display_name replica_dbid =
  Automation.function1 "ParseSiteExtendedName"
                       [ Automation.inString name
                       , Automation.inVariant display_name
                       , Automation.inVariant replica_dbid
                       ]
                       Automation.outBool

getUnextendedName :: Prelude.String
                  -> IOAdSession a0
                  -> Prelude.IO Prelude.String
getUnextendedName name =
  Automation.function1 "GetUnextendedName"
                       [Automation.inString name]
                       Automation.outString

getSiteExtension :: Prelude.String
                 -> IOAdSession a0
                 -> Prelude.IO Int.Int32
getSiteExtension name =
  Automation.function1 "GetSiteExtension"
                       [Automation.inString name]
                       Automation.outInt32

getDisplayNamesNeedingSiteExtension :: Prelude.String
                                    -> IOAdSession a0
                                    -> Prelude.IO a1
getDisplayNamesNeedingSiteExtension edefname =
  Automation.function1 "GetDisplayNamesNeedingSiteExtension"
                       [Automation.inString edefname]
                       Automation.outVariant

getSessionFeatureLevel :: IOAdSession a0
                       -> Prelude.IO Int.Int32
getSessionFeatureLevel =
  Automation.function1 "GetSessionFeatureLevel"
                       []
                       Automation.outInt32

getMinCompatibleFeatureLevel :: IOAdSession a0
                             -> Prelude.IO Int.Int32
getMinCompatibleFeatureLevel =
  Automation.function1 "GetMinCompatibleFeatureLevel"
                       []
                       Automation.outInt32

getMaxCompatibleFeatureLevel :: IOAdSession a0
                             -> Prelude.IO Int.Int32
getMaxCompatibleFeatureLevel =
  Automation.function1 "GetMaxCompatibleFeatureLevel"
                       []
                       Automation.outInt32

hasUserPrivilege :: Int.Int32
                 -> IOAdSession a0
                 -> Prelude.IO Prelude.Bool
hasUserPrivilege priv_mask =
  Automation.function1 "HasUserPrivilege"
                       [Automation.inInt32 priv_mask]
                       Automation.outBool

loadEntity :: Prelude.String
           -> Prelude.String
           -> IOAdSession a0
           -> Prelude.IO (Automation.IDispatch ())
loadEntity entity_def_name display_name =
  Automation.function1 "LoadEntity"
                       [ Automation.inString entity_def_name
                       , Automation.inString display_name
                       ]
                       Automation.outIDispatch

loadEntityByDbId :: Prelude.String
                 -> Int.Int32
                 -> IOAdSession a0
                 -> Prelude.IO (Automation.IDispatch ())
loadEntityByDbId entity_def_name db_id =
  Automation.function1 "LoadEntityByDbId"
                       [ Automation.inString entity_def_name
                       , Automation.inInt32 db_id
                       ]
                       Automation.outIDispatch

isReplicated :: IOAdSession a0
             -> Prelude.IO Prelude.Bool
isReplicated =
  Automation.function1 "IsReplicated"
                       []
                       Automation.outBool

getProductVersion :: IOAdSession a0
                  -> Prelude.IO Prelude.String
getProductVersion =
  Automation.function1 "GetProductVersion"
                       []
                       Automation.outString

getSuiteVersion :: IOAdSession a0
                -> Prelude.IO Prelude.String
getSuiteVersion =
  Automation.function1 "GetSuiteVersion"
                       []
                       Automation.outString

getStageLabel :: IOAdSession a0
              -> Prelude.IO Prelude.String
getStageLabel =
  Automation.function1 "GetStageLabel"
                       []
                       Automation.outString

entityExistsByDbId :: Prelude.String
                   -> Int.Int32
                   -> IOAdSession a0
                   -> Prelude.IO Prelude.Bool
entityExistsByDbId entity_def_name db_id =
  Automation.function1 "EntityExistsByDbId"
                       [ Automation.inString entity_def_name
                       , Automation.inInt32 db_id
                       ]
                       Automation.outBool

entityExists :: Prelude.String
             -> Prelude.String
             -> IOAdSession a0
             -> Prelude.IO Prelude.Bool
entityExists entity_def_name display_name =
  Automation.function1 "EntityExists"
                       [ Automation.inString entity_def_name
                       , Automation.inString display_name
                       ]
                       Automation.outBool

isMultisiteActivated :: IOAdSession a0
                     -> Prelude.IO Prelude.Bool
isMultisiteActivated =
  Automation.function1 "IsMultisiteActivated"
                       []
                       Automation.outBool

registerSchemaRepoFromFileByDbSet :: Prelude.String
                                  -> Prelude.String
                                  -> IOAdSession a0
                                  -> Prelude.IO Prelude.String
registerSchemaRepoFromFileByDbSet dbset filePath =
  Automation.function1 "RegisterSchemaRepoFromFileByDbSet"
                       [ Automation.inString dbset
                       , Automation.inString filePath
                       ]
                       Automation.outString

isPackageUpgradeNeeded :: (Automation.Variant a1, Automation.Variant a2)
                       => Prelude.String
                       -> a1
                       -> a2
                       -> IOAdSession a0
                       -> Prelude.IO Prelude.Bool
isPackageUpgradeNeeded package_name current_rev highest_rev =
  Automation.function1 "IsPackageUpgradeNeeded"
                       [ Automation.inString package_name
                       , Automation.inVariant current_rev
                       , Automation.inVariant highest_rev
                       ]
                       Automation.outBool

stringIdToDbId :: Prelude.String
               -> IOAdSession a0
               -> Prelude.IO Int.Int32
stringIdToDbId string_id =
  Automation.function1 "StringIdToDbId"
                       [Automation.inString string_id]
                       Automation.outInt32

dbIdToStringId :: Prelude.String
               -> IOAdSession a0
               -> Prelude.IO Prelude.String
dbIdToStringId db_id =
  Automation.function1 "DbIdToStringId"
                       [Automation.inString db_id]
                       Automation.outString

isStringInCQDataCodePage :: Prelude.String
                         -> IOAdSession a0
                         -> Prelude.IO Prelude.Bool
isStringInCQDataCodePage string =
  Automation.function1 "IsStringInCQDataCodePage"
                       [Automation.inString string]
                       Automation.outBool

cQDataCodePageIsSet :: IOAdSession a0
                    -> Prelude.IO Prelude.Bool
cQDataCodePageIsSet =
  Automation.function1 "CQDataCodePageIsSet"
                       []
                       Automation.outBool

isUnsupportedClientCodePage :: IOAdSession a0
                            -> Prelude.IO Prelude.Bool
isUnsupportedClientCodePage =
  Automation.function1 "IsUnsupportedClientCodePage"
                       []
                       Automation.outBool

isClientCodePageCompatibleWithCQDataCodePage :: IOAdSession a0
                                             -> Prelude.IO Prelude.Bool
isClientCodePageCompatibleWithCQDataCodePage =
  Automation.function1 "IsClientCodePageCompatibleWithCQDataCodePage"
                       []
                       Automation.outBool

getCQDataCodePage :: IOAdSession a0
                  -> Prelude.IO Prelude.String
getCQDataCodePage =
  Automation.function1 "GetCQDataCodePage"
                       []
                       Automation.outString

getClientCodePage :: IOAdSession a0
                  -> Prelude.IO Prelude.String
getClientCodePage =
  Automation.function1 "GetClientCodePage"
                       []
                       Automation.outString

validateStringInCQDataCodePage :: Prelude.String
                               -> IOAdSession a0
                               -> Prelude.IO Prelude.String
validateStringInCQDataCodePage string =
  Automation.function1 "ValidateStringInCQDataCodePage"
                       [Automation.inString string]
                       Automation.outString

getSuiteProductVersion :: IOAdSession a0
                       -> Prelude.IO Prelude.String
getSuiteProductVersion =
  Automation.function1 "GetSuiteProductVersion"
                       []
                       Automation.outString

canSubmit :: Prelude.String
          -> IOAdSession a0
          -> Prelude.IO Prelude.Bool
canSubmit entDefName =
  Automation.function1 "CanSubmit"
                       [Automation.inString entDefName]
                       Automation.outBool

getEntityDefNamesForSubmit :: IOAdSession a0
                           -> Prelude.IO a1
getEntityDefNamesForSubmit =
  Automation.function1 "GetEntityDefNamesForSubmit"
                       []
                       Automation.outVariant

validateUserCredentials :: Prelude.String
                        -> Prelude.String
                        -> IOAdSession a0
                        -> Prelude.IO Prelude.String
validateUserCredentials login pw =
  Automation.function1 "ValidateUserCredentials"
                       [ Automation.inString login
                       , Automation.inString pw
                       ]
                       Automation.outString

getAuthenticationLoginName :: IOAdSession a0
                           -> Prelude.IO Prelude.String
getAuthenticationLoginName =
  Automation.function1 "GetAuthenticationLoginName"
                       []
                       Automation.outString

getUserAuthenticationMode :: IOAdSession a0
                          -> Prelude.IO Int.Int32
getUserAuthenticationMode =
  Automation.function1 "GetUserAuthenticationMode"
                       []
                       Automation.outInt32

getBasicReturnStringMode :: IOAdSession a0
                         -> Prelude.IO Int.Int32
getBasicReturnStringMode =
  Automation.function1 "GetBasicReturnStringMode"
                       []
                       Automation.outInt32

setBasicReturnStringMode :: Int.Int32
                         -> IOAdSession a0
                         -> Prelude.IO ()
setBasicReturnStringMode mode =
  Automation.method0 "SetBasicReturnStringMode"
                     [Automation.inInt32 mode]

echoString :: Prelude.String
           -> IOAdSession a0
           -> Prelude.IO Prelude.String
echoString toEcho =
  Automation.function1 "EchoString"
                       [Automation.inString toEcho]
                       Automation.outString

getFullProductVersion :: IOAdSession a0
                      -> Prelude.IO Prelude.String
getFullProductVersion =
  Automation.function1 "GetFullProductVersion"
                       []
                       Automation.outString

getPatchVersion :: IOAdSession a0
                -> Prelude.IO Prelude.String
getPatchVersion =
  Automation.function1 "GetPatchVersion"
                       []
                       Automation.outString

getLicenseVersion :: IOAdSession a0
                  -> Prelude.IO Prelude.String
getLicenseVersion =
  Automation.function1 "GetLicenseVersion"
                       []
                       Automation.outString

getLicenseFeature :: IOAdSession a0
                  -> Prelude.IO Prelude.String
getLicenseFeature =
  Automation.function1 "GetLicenseFeature"
                       []
                       Automation.outString

getWebLicenseVersion :: IOAdSession a0
                     -> Prelude.IO Prelude.String
getWebLicenseVersion =
  Automation.function1 "GetWebLicenseVersion"
                       []
                       Automation.outString

getCompanyName :: IOAdSession a0
               -> Prelude.IO Prelude.String
getCompanyName =
  Automation.function1 "GetCompanyName"
                       []
                       Automation.outString

getCompanyFullName :: IOAdSession a0
                   -> Prelude.IO Prelude.String
getCompanyFullName =
  Automation.function1 "GetCompanyFullName"
                       []
                       Automation.outString

getCompanyEmailAddress :: IOAdSession a0
                       -> Prelude.IO Prelude.String
getCompanyEmailAddress =
  Automation.function1 "GetCompanyEmailAddress"
                       []
                       Automation.outString

getCompanyWebAddress :: IOAdSession a0
                     -> Prelude.IO Prelude.String
getCompanyWebAddress =
  Automation.function1 "GetCompanyWebAddress"
                       []
                       Automation.outString

getBuildNumber :: IOAdSession a0
               -> Prelude.IO Prelude.String
getBuildNumber =
  Automation.function1 "GetBuildNumber"
                       []
                       Automation.outString

getDefaultDbSetName :: IOAdSession a0
                    -> Prelude.IO Prelude.String
getDefaultDbSetName =
  Automation.function1 "GetDefaultDbSetName"
                       []
                       Automation.outString

getClearQuestAPIVersionMajor :: IOAdSession a0
                             -> Prelude.IO Prelude.String
getClearQuestAPIVersionMajor =
  Automation.function1 "GetClearQuestAPIVersionMajor"
                       []
                       Automation.outString

getClearQuestAPIVersionMinor :: IOAdSession a0
                             -> Prelude.IO Prelude.String
getClearQuestAPIVersionMinor =
  Automation.function1 "GetClearQuestAPIVersionMinor"
                       []
                       Automation.outString

getSuiteBuildId :: IOAdSession a0
                -> Prelude.IO Prelude.String
getSuiteBuildId =
  Automation.function1 "GetSuiteBuildId"
                       []
                       Automation.outString

getEntityDefOfName :: Prelude.String
                   -> a1
                   -> Int.Int32
                   -> IOAdSession a0
                   -> Prelude.IO (Automation.IDispatch ())
getEntityDefOfName displayName entDefNames entityDefType =
  Automation.function1 "GetEntityDefOfName"
                       [ Automation.inString displayName
                       , Automation.inVariant entDefNames
                       , Automation.inInt32 entityDefType
                       ]
                       Automation.outIDispatch

getEntityDefOfDbId :: Prelude.String
                   -> a1
                   -> Int.Int32
                   -> IOAdSession a0
                   -> Prelude.IO (Automation.IDispatch ())
getEntityDefOfDbId dbid entDefNames entityDefType =
  Automation.function1 "GetEntityDefOfDbId"
                       [ Automation.inString dbid
                       , Automation.inVariant entDefNames
                       , Automation.inInt32 entityDefType
                       ]
                       Automation.outIDispatch

buildPermission :: IOAdSession a0
                -> Prelude.IO (Automation.IDispatch ())
buildPermission =
  Automation.function1 "BuildPermission"
                       []
                       Automation.outIDispatch

buildPermissions :: IOAdSession a0
                 -> Prelude.IO (Automation.IDispatch ())
buildPermissions =
  Automation.function1 "BuildPermissions"
                       []
                       Automation.outIDispatch

getEveryoneGroupName :: IOAdSession a0
                     -> Prelude.IO Prelude.String
getEveryoneGroupName =
  Automation.function1 "GetEveryoneGroupName"
                       []
                       Automation.outString

getAllGroups :: Int.Int32
             -> IOAdSession a0
             -> Prelude.IO a1
getAllGroups extend_option =
  Automation.function1 "GetAllGroups"
                       [Automation.inInt32 extend_option]
                       Automation.outVariant

getAllUsers :: Int.Int32
            -> IOAdSession a0
            -> Prelude.IO a1
getAllUsers extend_option =
  Automation.function1 "GetAllUsers"
                       [Automation.inInt32 extend_option]
                       Automation.outVariant

getHookSeesAllUsers :: IOAdSession a0
                    -> Prelude.IO Prelude.Bool
getHookSeesAllUsers =
  Automation.function1 "GetHookSeesAllUsers"
                       []
                       Automation.outBool

setHookSeesAllUsers :: Prelude.Bool
                    -> IOAdSession a0
                    -> Prelude.IO ()
setHookSeesAllUsers bHookSeesAllUsers =
  Automation.method0 "SetHookSeesAllUsers"
                     [Automation.inBool bHookSeesAllUsers]

getHookSeesAllRecords :: IOAdSession a0
                      -> Prelude.IO Prelude.Bool
getHookSeesAllRecords =
  Automation.function1 "GetHookSeesAllRecords"
                       []
                       Automation.outBool

setHookSeesAllRecords :: Prelude.Bool
                      -> IOAdSession a0
                      -> Prelude.IO ()
setHookSeesAllRecords bHookSeesAllRecords =
  Automation.method0 "SetHookSeesAllRecords"
                     [Automation.inBool bHookSeesAllRecords]

getConvertToLocalTime :: IOAdSession a0
                      -> Prelude.IO Prelude.Bool
getConvertToLocalTime =
  Automation.function1 "GetConvertToLocalTime"
                       []
                       Automation.outBool

setConvertToLocalTime :: Prelude.Bool
                      -> IOAdSession a0
                      -> Prelude.IO ()
setConvertToLocalTime bNewVal =
  Automation.method0 "SetConvertToLocalTime"
                     [Automation.inBool bNewVal]

getMasterPropertyValue :: Prelude.String
                       -> IOAdSession a0
                       -> Prelude.IO Prelude.String
getMasterPropertyValue property_name =
  Automation.function1 "GetMasterPropertyValue"
                       [Automation.inString property_name]
                       Automation.outString

entityVisible :: Prelude.String
              -> Prelude.String
              -> IOAdSession a0
              -> Prelude.IO Int.Int32
entityVisible entity_def_name display_name =
  Automation.function1 "EntityVisible"
                       [ Automation.inString entity_def_name
                       , Automation.inString display_name
                       ]
                       Automation.outInt32

entityVisibleByDbId :: Prelude.String
                    -> Int.Int32
                    -> IOAdSession a0
                    -> Prelude.IO Int.Int32
entityVisibleByDbId entity_def_name db_id =
  Automation.function1 "EntityVisibleByDbId"
                       [ Automation.inString entity_def_name
                       , Automation.inInt32 db_id
                       ]
                       Automation.outInt32

-- --------------------------------------------------
-- 
-- coclass Session
-- 
--   implements: IOAdSession
-- --------------------------------------------------
clsidSession :: Com.CLSID
clsidSession = Com.mkCLSID "{94773112-72E8-11D0-A42E-00A024DED613}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdEntity
-- 
-- --------------------------------------------------
data IOAdEntity_ a = IOAdEntity__ 
type IOAdEntity a = Automation.IDispatch (IOAdEntity_ a)
iidIOAdEntity :: Com.IID (IOAdEntity ())
iidIOAdEntity = Com.mkIID "{E9F82951-73A9-11D0-A42E-00A024DED613}"

getHistoryFields :: IOAdEntity a0
                 -> Prelude.IO (Automation.IDispatch ())
getHistoryFields =
  Automation.propertyGet "HistoryFields"
                         []
                         Automation.outIDispatch

setHistoryFields :: Automation.IDispatch a0
                 -> IOAdEntity a1
                 -> Prelude.IO ()
setHistoryFields prop =
  Automation.propertySet "HistoryFields"
                         [Automation.inIDispatch prop]

getAttachmentFields :: IOAdEntity a0
                    -> Prelude.IO (Automation.IDispatch ())
getAttachmentFields =
  Automation.propertyGet "AttachmentFields"
                         []
                         Automation.outIDispatch

setAttachmentFields :: Automation.IDispatch a0
                    -> IOAdEntity a1
                    -> Prelude.IO ()
setAttachmentFields prop =
  Automation.propertySet "AttachmentFields"
                         [Automation.inIDispatch prop]

getEntityDefName :: IOAdEntity a0
                 -> Prelude.IO Prelude.String
getEntityDefName =
  Automation.function1 "GetEntityDefName"
                       []
                       Automation.outString

getFieldNames :: IOAdEntity a0
              -> Prelude.IO a1
getFieldNames =
  Automation.function1 "GetFieldNames"
                       []
                       Automation.outVariant

isEditable :: IOAdEntity a0
           -> Prelude.IO Prelude.Bool
isEditable =
  Automation.function1 "IsEditable"
                       []
                       Automation.outBool

revert :: IOAdEntity a0
       -> Prelude.IO ()
revert =
  Automation.method0 "Revert"
                     []

getFieldType :: Prelude.String
             -> IOAdEntity a0
             -> Prelude.IO Int.Int32
getFieldType fieldname =
  Automation.function1 "GetFieldType"
                       [Automation.inString fieldname]
                       Automation.outInt32

getFieldRequiredness :: Prelude.String
                     -> IOAdEntity a0
                     -> Prelude.IO Int.Int32
getFieldRequiredness fieldname =
  Automation.function1 "GetFieldRequiredness"
                       [Automation.inString fieldname]
                       Automation.outInt32

setFieldValue :: Prelude.String
              -> a1
              -> IOAdEntity a0
              -> Prelude.IO Prelude.String
setFieldValue fieldname new_value =
  Automation.function1 "SetFieldValue"
                       [ Automation.inString fieldname
                       , Automation.inVariant new_value
                       ]
                       Automation.outString

getFieldChoiceList :: Prelude.String
                   -> IOAdEntity a0
                   -> Prelude.IO a1
getFieldChoiceList fieldname =
  Automation.function1 "GetFieldChoiceList"
                       [Automation.inString fieldname]
                       Automation.outVariant

getDisplayName :: IOAdEntity a0
               -> Prelude.IO Prelude.String
getDisplayName =
  Automation.function1 "GetDisplayName"
                       []
                       Automation.outString

getType :: IOAdEntity a0
        -> Prelude.IO Int.Int32
getType =
  Automation.function1 "GetType"
                       []
                       Automation.outInt32

lookupStateName :: IOAdEntity a0
                -> Prelude.IO Prelude.String
lookupStateName =
  Automation.function1 "LookupStateName"
                       []
                       Automation.outString

getDbId :: IOAdEntity a0
        -> Prelude.IO Int.Int32
getDbId =
  Automation.function1 "GetDbId"
                       []
                       Automation.outInt32

isDuplicate :: IOAdEntity a0
            -> Prelude.IO Prelude.Bool
isDuplicate =
  Automation.function1 "IsDuplicate"
                       []
                       Automation.outBool

getOriginal :: IOAdEntity a0
            -> Prelude.IO (Automation.IDispatch ())
getOriginal =
  Automation.function1 "GetOriginal"
                       []
                       Automation.outIDispatch

getOriginalId :: IOAdEntity a0
              -> Prelude.IO Prelude.String
getOriginalId =
  Automation.function1 "GetOriginalId"
                       []
                       Automation.outString

getLegalActionDefNames :: IOAdEntity a0
                       -> Prelude.IO a1
getLegalActionDefNames =
  Automation.function1 "GetLegalActionDefNames"
                       []
                       Automation.outVariant

getActionDefForm :: Prelude.String
                 -> IOAdEntity a0
                 -> Prelude.IO (Automation.IDispatch ())
getActionDefForm action_def_name =
  Automation.function1 "GetActionDefForm"
                       [Automation.inString action_def_name]
                       Automation.outIDispatch

getSession :: IOAdEntity a0
           -> Prelude.IO (Automation.IDispatch ())
getSession =
  Automation.function1 "GetSession"
                       []
                       Automation.outIDispatch

hasDuplicates :: IOAdEntity a0
              -> Prelude.IO Prelude.Bool
hasDuplicates =
  Automation.function1 "HasDuplicates"
                       []
                       Automation.outBool

isOriginal :: IOAdEntity a0
           -> Prelude.IO Prelude.Bool
isOriginal =
  Automation.function1 "IsOriginal"
                       []
                       Automation.outBool

getDuplicates :: IOAdEntity a0
              -> Prelude.IO a1
getDuplicates =
  Automation.function1 "GetDuplicates"
                       []
                       Automation.outVariant

getAllDuplicates :: IOAdEntity a0
                 -> Prelude.IO a1
getAllDuplicates =
  Automation.function1 "GetAllDuplicates"
                       []
                       Automation.outVariant

commit :: IOAdEntity a0
       -> Prelude.IO Prelude.String
commit =
  Automation.function1 "Commit"
                       []
                       Automation.outString

validate :: IOAdEntity a0
         -> Prelude.IO Prelude.String
validate =
  Automation.function1 "Validate"
                       []
                       Automation.outString

addFieldValue :: Prelude.String
              -> a1
              -> IOAdEntity a0
              -> Prelude.IO Prelude.String
addFieldValue fieldname new_value =
  Automation.function1 "AddFieldValue"
                       [ Automation.inString fieldname
                       , Automation.inVariant new_value
                       ]
                       Automation.outString

deleteFieldValue :: Prelude.String
                 -> a1
                 -> IOAdEntity a0
                 -> Prelude.IO Prelude.String
deleteFieldValue fieldname new_value =
  Automation.function1 "DeleteFieldValue"
                       [ Automation.inString fieldname
                       , Automation.inVariant new_value
                       ]
                       Automation.outString

getFieldValue :: Prelude.String
              -> IOAdEntity a0
              -> Prelude.IO (Automation.IDispatch ())
getFieldValue fieldname =
  Automation.function1 "GetFieldValue"
                       [Automation.inString fieldname]
                       Automation.outIDispatch

getFieldOriginalValue :: Prelude.String
                      -> IOAdEntity a0
                      -> Prelude.IO (Automation.IDispatch ())
getFieldOriginalValue fieldname =
  Automation.function1 "GetFieldOriginalValue"
                       [Automation.inString fieldname]
                       Automation.outIDispatch

getAllFieldValues :: IOAdEntity a0
                  -> Prelude.IO a1
getAllFieldValues =
  Automation.function1 "GetAllFieldValues"
                       []
                       Automation.outVariant

getInvalidFieldValues :: IOAdEntity a0
                      -> Prelude.IO a1
getInvalidFieldValues =
  Automation.function1 "GetInvalidFieldValues"
                       []
                       Automation.outVariant

getFieldsUpdatedThisSetValue :: IOAdEntity a0
                             -> Prelude.IO a1
getFieldsUpdatedThisSetValue =
  Automation.function1 "GetFieldsUpdatedThisSetValue"
                       []
                       Automation.outVariant

getFieldsUpdatedThisGroup :: IOAdEntity a0
                          -> Prelude.IO a1
getFieldsUpdatedThisGroup =
  Automation.function1 "GetFieldsUpdatedThisGroup"
                       []
                       Automation.outVariant

getFieldsUpdatedThisAction :: IOAdEntity a0
                           -> Prelude.IO a1
getFieldsUpdatedThisAction =
  Automation.function1 "GetFieldsUpdatedThisAction"
                       []
                       Automation.outVariant

beginNewFieldUpdateGroup :: IOAdEntity a0
                         -> Prelude.IO ()
beginNewFieldUpdateGroup =
  Automation.method0 "BeginNewFieldUpdateGroup"
                     []

getHistoryFieldValue :: IOAdEntity a0
                     -> Prelude.IO (Automation.IDispatch ())
getHistoryFieldValue =
  Automation.function1 "GetHistoryFieldValue"
                       []
                       Automation.outIDispatch

getHistoryDisplayNameHeader :: IOAdEntity a0
                            -> Prelude.IO a1
getHistoryDisplayNameHeader =
  Automation.function1 "GetHistoryDisplayNameHeader"
                       []
                       Automation.outVariant

addAttachmentFieldValue :: Prelude.String
                        -> Prelude.String
                        -> Prelude.String
                        -> IOAdEntity a0
                        -> Prelude.IO Prelude.String
addAttachmentFieldValue attachment_fieldname filename description =
  Automation.function1 "AddAttachmentFieldValue"
                       [ Automation.inString attachment_fieldname
                       , Automation.inString filename
                       , Automation.inString description
                       ]
                       Automation.outString

deleteAttachmentFieldValue :: Prelude.String
                           -> Prelude.String
                           -> IOAdEntity a0
                           -> Prelude.IO Prelude.String
deleteAttachmentFieldValue attachment_fieldname element_displayname =
  Automation.function1 "DeleteAttachmentFieldValue"
                       [ Automation.inString attachment_fieldname
                       , Automation.inString element_displayname
                       ]
                       Automation.outString

editAttachmentFieldDescription :: Prelude.String
                               -> Prelude.String
                               -> Prelude.String
                               -> IOAdEntity a0
                               -> Prelude.IO Prelude.String
editAttachmentFieldDescription attachment_fieldname element_displayname new_description =
  Automation.function1 "EditAttachmentFieldDescription"
                       [ Automation.inString attachment_fieldname
                       , Automation.inString element_displayname
                       , Automation.inString new_description
                       ]
                       Automation.outString

loadAttachment :: Prelude.String
               -> Prelude.String
               -> Prelude.String
               -> IOAdEntity a0
               -> Prelude.IO Int.Int32
loadAttachment attachment_fieldname element_displayname destination_filename =
  Automation.function1 "LoadAttachment"
                       [ Automation.inString attachment_fieldname
                       , Automation.inString element_displayname
                       , Automation.inString destination_filename
                       ]
                       Automation.outInt32

getAttachmentDisplayNameHeader :: Prelude.String
                               -> IOAdEntity a0
                               -> Prelude.IO a1
getAttachmentDisplayNameHeader attachment_fieldname =
  Automation.function1 "GetAttachmentDisplayNameHeader"
                       [Automation.inString attachment_fieldname]
                       Automation.outVariant

getFieldChoiceType :: Prelude.String
                   -> IOAdEntity a0
                   -> Prelude.IO Int.Int32
getFieldChoiceType fieldname =
  Automation.function1 "GetFieldChoiceType"
                       [Automation.inString fieldname]
                       Automation.outInt32

fireNamedHook :: Prelude.String
              -> a1
              -> IOAdEntity a0
              -> Prelude.IO Prelude.String
fireNamedHook hookName parameter =
  Automation.function1 "FireNamedHook"
                       [ Automation.inString hookName
                       , Automation.inVariant parameter
                       ]
                       Automation.outString

setFieldRequirednessForCurrentAction :: Prelude.String
                                     -> Int.Int32
                                     -> IOAdEntity a0
                                     -> Prelude.IO ()
setFieldRequirednessForCurrentAction fieldname newValue =
  Automation.method0 "SetFieldRequirednessForCurrentAction"
                     [ Automation.inString fieldname
                     , Automation.inInt32 newValue
                     ]

getFieldMaxLength :: Prelude.String
                  -> IOAdEntity a0
                  -> Prelude.IO Int.Int32
getFieldMaxLength fieldname =
  Automation.function1 "GetFieldMaxLength"
                       [Automation.inString fieldname]
                       Automation.outInt32

getActionName :: IOAdEntity a0
              -> Prelude.IO Prelude.String
getActionName =
  Automation.function1 "GetActionName"
                       []
                       Automation.outString

getActionType :: IOAdEntity a0
              -> Prelude.IO Int.Int32
getActionType =
  Automation.function1 "GetActionType"
                       []
                       Automation.outInt32

getDefaultActionName :: IOAdEntity a0
                     -> Prelude.IO Prelude.String
getDefaultActionName =
  Automation.function1 "GetDefaultActionName"
                       []
                       Automation.outString

getFieldReferencedEntityDefName :: Prelude.String
                                -> IOAdEntity a0
                                -> Prelude.IO Prelude.String
getFieldReferencedEntityDefName fieldname =
  Automation.function1 "GetFieldReferencedEntityDefName"
                       [Automation.inString fieldname]
                       Automation.outString

setFieldChoiceList :: Prelude.String
                   -> a1
                   -> IOAdEntity a0
                   -> Prelude.IO ()
setFieldChoiceList fieldname choiceList =
  Automation.method0 "SetFieldChoiceList"
                     [ Automation.inString fieldname
                     , Automation.inVariant choiceList
                     ]

invalidateFieldChoiceList :: Prelude.String
                          -> IOAdEntity a0
                          -> Prelude.IO ()
invalidateFieldChoiceList fieldname =
  Automation.method0 "InvalidateFieldChoiceList"
                     [Automation.inString fieldname]

reload :: IOAdEntity a0
       -> Prelude.IO ()
reload =
  Automation.method0 "Reload"
                     []

siteHasMastership :: IOAdEntity a0
                  -> Prelude.IO Prelude.Bool
siteHasMastership =
  Automation.function1 "SiteHasMastership"
                       []
                       Automation.outBool

editEntity0 :: Automation.IDispatch a1
            -> Prelude.String
            -> IOAdEntity a0
            -> Prelude.IO ()
editEntity0 entity edit_action_name =
  Automation.method0 "EditEntity"
                     [ Automation.inIDispatch entity
                     , Automation.inString edit_action_name
                     ]

getAttachmentDisplayName :: Prelude.String
                         -> Prelude.String
                         -> IOAdEntity a0
                         -> Prelude.IO Prelude.String
getAttachmentDisplayName fieldname attachDBID =
  Automation.function1 "GetAttachmentDisplayName"
                       [ Automation.inString fieldname
                       , Automation.inString attachDBID
                       ]
                       Automation.outString

getFieldStringValue :: Prelude.String
                    -> IOAdEntity a0
                    -> Prelude.IO Prelude.String
getFieldStringValue fieldname =
  Automation.function1 "GetFieldStringValue"
                       [Automation.inString fieldname]
                       Automation.outString

getFieldStringValueAsList :: Prelude.String
                          -> IOAdEntity a0
                          -> Prelude.IO a1
getFieldStringValueAsList fieldname =
  Automation.function1 "GetFieldStringValueAsList"
                       [Automation.inString fieldname]
                       Automation.outVariant

setFieldValues :: a2
               -> a3
               -> IOAdEntity a0
               -> Prelude.IO a1
setFieldValues varfieldNames varvalues =
  Automation.function1 "SetFieldValues"
                       [ Automation.inVariant varfieldNames
                       , Automation.inVariant varvalues
                       ]
                       Automation.outVariant

getFieldStringValues :: a2
                     -> IOAdEntity a0
                     -> Prelude.IO a1
getFieldStringValues varfieldNames =
  Automation.function1 "GetFieldStringValues"
                       [Automation.inVariant varfieldNames]
                       Automation.outVariant

getFieldsUpdatedThisEntireAction :: IOAdEntity a0
                                 -> Prelude.IO a1
getFieldsUpdatedThisEntireAction =
  Automation.function1 "GetFieldsUpdatedThisEntireAction"
                       []
                       Automation.outVariant

getLegalAccessibleActionDefNames :: IOAdEntity a0
                                 -> Prelude.IO a1
getLegalAccessibleActionDefNames =
  Automation.function1 "GetLegalAccessibleActionDefNames"
                       []
                       Automation.outVariant

setFieldValueWithoutValidatingFields :: Prelude.String
                                     -> a1
                                     -> IOAdEntity a0
                                     -> Prelude.IO Prelude.String
setFieldValueWithoutValidatingFields fieldname new_value =
  Automation.function1 "SetFieldValueWithoutValidatingFields"
                       [ Automation.inString fieldname
                       , Automation.inVariant new_value
                       ]
                       Automation.outString

addFieldValueWithoutValidatingFields :: Prelude.String
                                     -> a1
                                     -> IOAdEntity a0
                                     -> Prelude.IO Prelude.String
addFieldValueWithoutValidatingFields fieldname new_value =
  Automation.function1 "AddFieldValueWithoutValidatingFields"
                       [ Automation.inString fieldname
                       , Automation.inVariant new_value
                       ]
                       Automation.outString

addFieldValues :: Prelude.String
               -> a1
               -> Prelude.Bool
               -> IOAdEntity a0
               -> Prelude.IO Prelude.String
addFieldValues fieldname new_values bDoValidation =
  Automation.function1 "AddFieldValues"
                       [ Automation.inString fieldname
                       , Automation.inVariant new_values
                       , Automation.inBool bDoValidation
                       ]
                       Automation.outString

deleteFieldValues :: Prelude.String
                  -> a1
                  -> Prelude.Bool
                  -> IOAdEntity a0
                  -> Prelude.IO Prelude.String
deleteFieldValues fieldname old_values bDoValidation =
  Automation.function1 "DeleteFieldValues"
                       [ Automation.inString fieldname
                       , Automation.inVariant old_values
                       , Automation.inBool bDoValidation
                       ]
                       Automation.outString

lockRecord :: Int.Int32
           -> IOAdEntity a0
           -> Prelude.IO ()
lockRecord wait_seconds =
  Automation.method0 "LockRecord"
                     [Automation.inInt32 wait_seconds]

unlockRecord :: IOAdEntity a0
             -> Prelude.IO ()
unlockRecord =
  Automation.method0 "UnlockRecord"
                     []

getLockOwner :: IOAdEntity a0
             -> Prelude.IO Prelude.String
getLockOwner =
  Automation.function1 "GetLockOwner"
                       []
                       Automation.outString

getDisplayNameAsList :: IOAdEntity a0
                     -> Prelude.IO a1
getDisplayNameAsList =
  Automation.function1 "GetDisplayNameAsList"
                       []
                       Automation.outVariant

-- --------------------------------------------------
-- 
-- dispinterface IOAdEntityActionHookEvents
-- 
-- --------------------------------------------------
data IOAdEntityActionHookEvents_ a = IOAdEntityActionHookEvents__ 
type IOAdEntityActionHookEvents a = Automation.IDispatch (IOAdEntityActionHookEvents_ a)
iidIOAdEntityActionHookEvents :: Com.IID (IOAdEntityActionHookEvents ())
iidIOAdEntityActionHookEvents =
  Com.mkIID "{E9F82951-73A9-11D0-A42E-10A024DED613}"

mkIOAdEntityActionHookEvents_vtbl :: (Prelude.String -> Int.Int32 -> Prelude.String -> objState -> Prelude.IO Prelude.Bool)
                                  -> (Prelude.String -> Int.Int32 -> objState -> Prelude.IO ())
                                  -> (Prelude.String -> Int.Int32 -> objState -> Prelude.IO Prelude.String)
                                  -> (Prelude.String -> Int.Int32 -> objState -> Prelude.IO ())
                                  -> (Prelude.String -> Int.Int32 -> objState -> Prelude.IO ())
                                  -> (Prelude.String -> Prelude.String -> Automation.IDispatch a0 -> objState -> Prelude.IO ())
                                  -> Prelude.IO (ComServ.ComVTable (IOAdEntityActionHookEvents ()) objState)
mkIOAdEntityActionHookEvents_vtbl accessControl initialization validation commit0 notification namedHook =
  let
   meth_arg0 = StdDispatch.mkDispMethod "AccessControl" 0x1 (prim_accessControl accessControl)
   meth_arg1 = StdDispatch.mkDispMethod "Initialization" 0x2 (prim_initialization initialization)
   meth_arg2 = StdDispatch.mkDispMethod "Validation" 0x3 (prim_validation validation)
   meth_arg3 = StdDispatch.mkDispMethod "Commit" 0x4 (prim_commit0 commit0)
   meth_arg4 = StdDispatch.mkDispMethod "Notification" 0x5 (prim_notification notification)
   meth_arg5 = StdDispatch.mkDispMethod "NamedHook" 0x6 (prim_namedHook namedHook)
  in
  StdDispatch.createStdDispatchVTBL2 [ meth_arg0
                                     , meth_arg1
                                     , meth_arg2
                                     , meth_arg3
                                     , meth_arg4
                                     , meth_arg5
                                     ]

prim_accessControl :: (Prelude.String -> Int.Int32 -> Prelude.String -> objState -> Prelude.IO Prelude.Bool)
                   -> [Automation.VARIANT]
                   -> objState
                   -> Prelude.IO (Prelude.Maybe Automation.VARIANT)
prim_accessControl accessControl_meth =
  StdDispatch.inArg Prelude.$ \ actionname ->
  StdDispatch.inArg Prelude.$ \ actiontype ->
  StdDispatch.inArg Prelude.$ \ username ->
  StdDispatch.retVal Prelude.$ \ the_res ->
  StdDispatch.apply_1 (accessControl_meth actionname actiontype username)
                      the_res

prim_initialization :: (Prelude.String -> Int.Int32 -> objState -> Prelude.IO ())
                    -> [Automation.VARIANT]
                    -> objState
                    -> Prelude.IO (Prelude.Maybe Automation.VARIANT)
prim_initialization initialization_meth =
  StdDispatch.inArg Prelude.$ \ actionname ->
  StdDispatch.inArg Prelude.$ \ actiontype ->
  StdDispatch.apply_0 (initialization_meth actionname actiontype)

prim_validation :: (Prelude.String -> Int.Int32 -> objState -> Prelude.IO Prelude.String)
                -> [Automation.VARIANT]
                -> objState
                -> Prelude.IO (Prelude.Maybe Automation.VARIANT)
prim_validation validation_meth =
  StdDispatch.inArg Prelude.$ \ actionname ->
  StdDispatch.inArg Prelude.$ \ actiontype ->
  StdDispatch.retVal Prelude.$ \ the_res ->
  StdDispatch.apply_1 (validation_meth actionname actiontype)
                      the_res

prim_commit0 :: (Prelude.String -> Int.Int32 -> objState -> Prelude.IO ())
             -> [Automation.VARIANT]
             -> objState
             -> Prelude.IO (Prelude.Maybe Automation.VARIANT)
prim_commit0 commit0_meth =
  StdDispatch.inArg Prelude.$ \ actionname ->
  StdDispatch.inArg Prelude.$ \ actiontype ->
  StdDispatch.apply_0 (commit0_meth actionname actiontype)

prim_notification :: (Prelude.String -> Int.Int32 -> objState -> Prelude.IO ())
                  -> [Automation.VARIANT]
                  -> objState
                  -> Prelude.IO (Prelude.Maybe Automation.VARIANT)
prim_notification notification_meth =
  StdDispatch.inArg Prelude.$ \ actionname ->
  StdDispatch.inArg Prelude.$ \ actiontype ->
  StdDispatch.apply_0 (notification_meth actionname actiontype)

prim_namedHook :: (Prelude.String -> Prelude.String -> Automation.IDispatch a0 -> objState -> Prelude.IO ())
               -> [Automation.VARIANT]
               -> objState
               -> Prelude.IO (Prelude.Maybe Automation.VARIANT)
prim_namedHook namedHook_meth =
  StdDispatch.inArg Prelude.$ \ hookName ->
  StdDispatch.inArg Prelude.$ \ parm ->
  StdDispatch.inArg Prelude.$ \ pDispEntity ->
  StdDispatch.apply_0 (namedHook_meth hookName parm pDispEntity)

-- --------------------------------------------------
-- 
-- coclass OAdEntity
-- 
--   implements: IOAdEntity , [source]IOAdEntityActionHookEvents
-- --------------------------------------------------
clsidOAdEntity :: Com.CLSID
clsidOAdEntity =
  Com.mkCLSID "{E9F82952-73A9-11D0-A42E-00A024DED613}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdQueryDef
-- 
-- --------------------------------------------------
data IOAdQueryDef_ a = IOAdQueryDef__ 
type IOAdQueryDef a = Automation.IDispatch (IOAdQueryDef_ a)
iidIOAdQueryDef :: Com.IID (IOAdQueryDef ())
iidIOAdQueryDef =
  Com.mkIID "{14BE7431-785A-11D0-A431-00A024DED613}"

getIsSQLGenerated :: IOAdQueryDef a0
                  -> Prelude.IO Prelude.Bool
getIsSQLGenerated =
  Automation.propertyGet "IsSQLGenerated"
                         []
                         Automation.outBool

setIsSQLGenerated :: Prelude.Bool
                  -> IOAdQueryDef a0
                  -> Prelude.IO ()
setIsSQLGenerated prop =
  Automation.propertySet "IsSQLGenerated"
                         [Automation.inBool prop]

getIsMultiType :: IOAdQueryDef a0
               -> Prelude.IO Prelude.Bool
getIsMultiType =
  Automation.propertyGet "IsMultiType"
                         []
                         Automation.outBool

setIsMultiType :: Prelude.Bool
               -> IOAdQueryDef a0
               -> Prelude.IO ()
setIsMultiType prop =
  Automation.propertySet "IsMultiType"
                         [Automation.inBool prop]

getName :: IOAdQueryDef a0
        -> Prelude.IO Prelude.String
getName =
  Automation.propertyGet "Name"
                         []
                         Automation.outString

setName :: Prelude.String
        -> IOAdQueryDef a0
        -> Prelude.IO ()
setName prop =
  Automation.propertySet "Name"
                         [Automation.inString prop]

getIsAggregated :: IOAdQueryDef a0
                -> Prelude.IO Prelude.Bool
getIsAggregated =
  Automation.propertyGet "IsAggregated"
                         []
                         Automation.outBool

setIsAggregated :: Prelude.Bool
                -> IOAdQueryDef a0
                -> Prelude.IO ()
setIsAggregated prop =
  Automation.propertySet "IsAggregated"
                         [Automation.inBool prop]

getQueryFieldDefs :: IOAdQueryDef a0
                  -> Prelude.IO (Automation.IDispatch ())
getQueryFieldDefs =
  Automation.propertyGet "QueryFieldDefs"
                         []
                         Automation.outIDispatch

setQueryFieldDefs :: Automation.IDispatch a0
                  -> IOAdQueryDef a1
                  -> Prelude.IO ()
setQueryFieldDefs prop =
  Automation.propertySet "QueryFieldDefs"
                         [Automation.inIDispatch prop]

getQueryFilter :: IOAdQueryDef a0
               -> Prelude.IO (Automation.IDispatch ())
getQueryFilter =
  Automation.propertyGet "QueryFilter"
                         []
                         Automation.outIDispatch

setQueryFilter :: Automation.IDispatch a0
               -> IOAdQueryDef a1
               -> Prelude.IO ()
setQueryFilter prop =
  Automation.propertySet "QueryFilter"
                         [Automation.inIDispatch prop]

getIsDirty :: IOAdQueryDef a0
           -> Prelude.IO Prelude.Bool
getIsDirty =
  Automation.propertyGet "IsDirty"
                         []
                         Automation.outBool

setIsDirty :: Prelude.Bool
           -> IOAdQueryDef a0
           -> Prelude.IO ()
setIsDirty prop =
  Automation.propertySet "IsDirty"
                         [Automation.inBool prop]

getSQL :: IOAdQueryDef a0
       -> Prelude.IO Prelude.String
getSQL =
  Automation.propertyGet "SQL"
                         []
                         Automation.outString

setSQL :: Prelude.String
       -> IOAdQueryDef a0
       -> Prelude.IO ()
setSQL prop =
  Automation.propertySet "SQL"
                         [Automation.inString prop]

getQueryType :: IOAdQueryDef a0
             -> Prelude.IO Int.Int32
getQueryType =
  Automation.propertyGet "QueryType"
                         []
                         Automation.outInt32

setQueryType :: Int.Int32
             -> IOAdQueryDef a0
             -> Prelude.IO ()
setQueryType prop =
  Automation.propertySet "QueryType"
                         [Automation.inInt32 prop]

save :: Prelude.String
     -> IOAdQueryDef a0
     -> Prelude.IO Prelude.Bool
save filename =
  Automation.function1 "Save"
                       [Automation.inString filename]
                       Automation.outBool

buildField :: Prelude.String
           -> IOAdQueryDef a0
           -> Prelude.IO ()
buildField field_path =
  Automation.method0 "BuildField"
                     [Automation.inString field_path]

buildFilterOperator :: Int.Int32
                    -> IOAdQueryDef a0
                    -> Prelude.IO (Automation.IDispatch ())
buildFilterOperator bool_op =
  Automation.function1 "BuildFilterOperator"
                       [Automation.inInt32 bool_op]
                       Automation.outIDispatch

buildUniqueKeyField :: IOAdQueryDef a0
                    -> Prelude.IO (Automation.IDispatch ())
buildUniqueKeyField =
  Automation.function1 "BuildUniqueKeyField"
                       []
                       Automation.outIDispatch

buildUniqueKeyFilter :: Automation.IDispatch a1
                     -> Int.Int16
                     -> IOAdQueryDef a0
                     -> Prelude.IO (Automation.IDispatch ())
buildUniqueKeyFilter parent op =
  Automation.function1 "BuildUniqueKeyFilter"
                       [ Automation.inIDispatch parent
                       , Automation.inInt16 op
                       ]
                       Automation.outIDispatch

getFieldByPosition :: Int.Int16
                   -> IOAdQueryDef a0
                   -> Prelude.IO (Automation.IDispatch ())
getFieldByPosition position =
  Automation.function1 "GetFieldByPosition"
                       [Automation.inInt16 position]
                       Automation.outIDispatch

isFieldLegalForQuery :: Prelude.String
                     -> IOAdQueryDef a0
                     -> Prelude.IO Prelude.Bool
isFieldLegalForQuery fieldname =
  Automation.function1 "IsFieldLegalForQuery"
                       [Automation.inString fieldname]
                       Automation.outBool

isFieldLegalForFilter :: Prelude.String
                      -> IOAdQueryDef a0
                      -> Prelude.IO Prelude.Bool
isFieldLegalForFilter fieldname =
  Automation.function1 "IsFieldLegalForFilter"
                       [Automation.inString fieldname]
                       Automation.outBool

getPrimaryEntityDefName :: IOAdQueryDef a0
                        -> Prelude.IO Prelude.String
getPrimaryEntityDefName =
  Automation.function1 "GetPrimaryEntityDefName"
                       []
                       Automation.outString

createTopNode :: Int.Int32
              -> IOAdQueryDef a0
              -> Prelude.IO (Automation.IDispatch ())
createTopNode bool_op =
  Automation.function1 "CreateTopNode"
                       [Automation.inInt32 bool_op]
                       Automation.outIDispatch

-- --------------------------------------------------
-- 
-- coclass OAdQuerydef
-- 
--   implements: IOAdQueryDef
-- --------------------------------------------------
clsidOAdQuerydef :: Com.CLSID
clsidOAdQuerydef =
  Com.mkCLSID "{14BE7432-785A-11D0-A431-00A024DED613}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdResultSet
-- 
-- --------------------------------------------------
data IOAdResultSet_ a = IOAdResultSet__ 
type IOAdResultSet a = Automation.IDispatch (IOAdResultSet_ a)
iidIOAdResultSet :: Com.IID (IOAdResultSet ())
iidIOAdResultSet =
  Com.mkIID "{14BE7434-785A-11D0-A431-00A024DED613}"

getMaxResultSetRows :: IOAdResultSet a0
                    -> Prelude.IO Int.Int32
getMaxResultSetRows =
  Automation.propertyGet "MaxResultSetRows"
                         []
                         Automation.outInt32

setMaxResultSetRows :: Int.Int32
                    -> IOAdResultSet a0
                    -> Prelude.IO ()
setMaxResultSetRows prop =
  Automation.propertySet "MaxResultSetRows"
                         [Automation.inInt32 prop]

getMaxMultiLineTextLength :: IOAdResultSet a0
                          -> Prelude.IO Int.Int32
getMaxMultiLineTextLength =
  Automation.propertyGet "MaxMultiLineTextLength"
                         []
                         Automation.outInt32

setMaxMultiLineTextLength :: Int.Int32
                          -> IOAdResultSet a0
                          -> Prelude.IO ()
setMaxMultiLineTextLength prop =
  Automation.propertySet "MaxMultiLineTextLength"
                         [Automation.inInt32 prop]

getBufferSize :: IOAdResultSet a0
              -> Prelude.IO Int.Int32
getBufferSize =
  Automation.propertyGet "BufferSize"
                         []
                         Automation.outInt32

setBufferSize :: Int.Int32
              -> IOAdResultSet a0
              -> Prelude.IO ()
setBufferSize prop =
  Automation.propertySet "BufferSize"
                         [Automation.inInt32 prop]

getColumnType :: Int.Int32
              -> IOAdResultSet a0
              -> Prelude.IO Int.Int32
getColumnType ordinal_column_number =
  Automation.function1 "GetColumnType"
                       [Automation.inInt32 ordinal_column_number]
                       Automation.outInt32

getColumnLabel :: Int.Int32
               -> IOAdResultSet a0
               -> Prelude.IO Prelude.String
getColumnLabel ordinal_column_number =
  Automation.function1 "GetColumnLabel"
                       [Automation.inInt32 ordinal_column_number]
                       Automation.outString

getNumberOfColumns :: IOAdResultSet a0
                   -> Prelude.IO Int.Int32
getNumberOfColumns =
  Automation.function1 "GetNumberOfColumns"
                       []
                       Automation.outInt32

getColumnValue :: Int.Int32
               -> IOAdResultSet a0
               -> Prelude.IO a1
getColumnValue ordinal_column_number =
  Automation.function1 "GetColumnValue"
                       [Automation.inInt32 ordinal_column_number]
                       Automation.outVariant

moveNext :: IOAdResultSet a0
         -> Prelude.IO Int.Int32
moveNext =
  Automation.function1 "MoveNext"
                       []
                       Automation.outInt32

execute :: IOAdResultSet a0
        -> Prelude.IO ()
execute =
  Automation.method0 "Execute"
                     []

getNumberOfParams :: IOAdResultSet a0
                  -> Prelude.IO Int.Int32
getNumberOfParams =
  Automation.function1 "GetNumberOfParams"
                       []
                       Automation.outInt32

getParamPrompt :: Int.Int32
               -> IOAdResultSet a0
               -> Prelude.IO Prelude.String
getParamPrompt param_number =
  Automation.function1 "GetParamPrompt"
                       [Automation.inInt32 param_number]
                       Automation.outString

getParamFieldType :: Int.Int32
                  -> IOAdResultSet a0
                  -> Prelude.IO Int.Int32
getParamFieldType param_number =
  Automation.function1 "GetParamFieldType"
                       [Automation.inInt32 param_number]
                       Automation.outInt32

getParamLabel :: Int.Int32
              -> IOAdResultSet a0
              -> Prelude.IO Prelude.String
getParamLabel param_number =
  Automation.function1 "GetParamLabel"
                       [Automation.inInt32 param_number]
                       Automation.outString

getParamChoiceList :: Int.Int32
                   -> IOAdResultSet a0
                   -> Prelude.IO a1
getParamChoiceList param_number =
  Automation.function1 "GetParamChoiceList"
                       [Automation.inInt32 param_number]
                       Automation.outVariant

addParamValue :: Int.Int32
              -> a1
              -> IOAdResultSet a0
              -> Prelude.IO ()
addParamValue param_number value =
  Automation.method0 "AddParamValue"
                     [ Automation.inInt32 param_number
                     , Automation.inVariant value
                     ]

clearParamValues :: Int.Int32
                 -> IOAdResultSet a0
                 -> Prelude.IO ()
clearParamValues param_number =
  Automation.method0 "ClearParamValues"
                     [Automation.inInt32 param_number]

getParamComparisonOperator :: Int.Int32
                           -> IOAdResultSet a0
                           -> Prelude.IO Int.Int32
getParamComparisonOperator param_number =
  Automation.function1 "GetParamComparisonOperator"
                       [Automation.inInt32 param_number]
                       Automation.outInt32

getSQL0 :: IOAdResultSet a0
        -> Prelude.IO Prelude.String
getSQL0 =
  Automation.function1 "GetSQL"
                       []
                       Automation.outString

lookupPrimaryEntityDefName :: IOAdResultSet a0
                           -> Prelude.IO Prelude.String
lookupPrimaryEntityDefName =
  Automation.function1 "LookupPrimaryEntityDefName"
                       []
                       Automation.outString

setMaxRowsInMemory :: Int.Int32
                   -> IOAdResultSet a0
                   -> Prelude.IO ()
setMaxRowsInMemory rhs =
  Automation.propertySet "MaxRowsInMemory"
                         [Automation.inInt32 rhs]

getMaxRowsInMemory :: IOAdResultSet a0
                   -> Prelude.IO Int.Int32
getMaxRowsInMemory =
  Automation.propertyGet "MaxRowsInMemory"
                         []
                         Automation.outInt32

moveAbsolute :: Int.Int32
             -> IOAdResultSet a0
             -> Prelude.IO Int.Int32
moveAbsolute row =
  Automation.function1 "MoveAbsolute"
                       [Automation.inInt32 row]
                       Automation.outInt32

executeAndCountRecords :: IOAdResultSet a0
                       -> Prelude.IO Int.Int32
executeAndCountRecords =
  Automation.function1 "ExecuteAndCountRecords"
                       []
                       Automation.outInt32

getRecordCount :: IOAdResultSet a0
               -> Prelude.IO Int.Int32
getRecordCount =
  Automation.propertyGet "RecordCount"
                         []
                         Automation.outInt32

getRowEntityDefName :: IOAdResultSet a0
                    -> Prelude.IO Prelude.String
getRowEntityDefName =
  Automation.function1 "GetRowEntityDefName"
                       []
                       Automation.outString

enableRecordCount :: IOAdResultSet a0
                  -> Prelude.IO ()
enableRecordCount =
  Automation.method0 "EnableRecordCount"
                     []

setParamComparisonOperator :: Int.Int32
                           -> Int.Int32
                           -> IOAdResultSet a0
                           -> Prelude.IO ()
setParamComparisonOperator param_number param =
  Automation.method0 "SetParamComparisonOperator"
                     [ Automation.inInt32 param_number
                     , Automation.inInt32 param
                     ]

getAllColumnValues :: Prelude.Bool
                   -> IOAdResultSet a0
                   -> Prelude.IO a1
getAllColumnValues bMoveNext =
  Automation.function1 "GetAllColumnValues"
                       [Automation.inBool bMoveNext]
                       Automation.outVariant

getQueryLimit :: Int.Int32
              -> IOAdResultSet a0
              -> Prelude.IO Int.Int32
getQueryLimit queryLimitType =
  Automation.function1 "GetQueryLimit"
                       [Automation.inInt32 queryLimitType]
                       Automation.outInt32

resultSetIsLimited :: IOAdResultSet a0
                   -> Prelude.IO Int.Int32
resultSetIsLimited =
  Automation.function1 "ResultSetIsLimited"
                       []
                       Automation.outInt32

executeAndSave :: Prelude.String
               -> Prelude.String
               -> Prelude.String
               -> IOAdResultSet a0
               -> Prelude.IO ()
executeAndSave filename delimiter options =
  Automation.method0 "ExecuteAndSave"
                     [ Automation.inString filename
                     , Automation.inString delimiter
                     , Automation.inString options
                     ]

-- --------------------------------------------------
-- 
-- coclass OAdResultset
-- 
--   implements: IOAdResultSet
-- --------------------------------------------------
clsidOAdResultset :: Com.CLSID
clsidOAdResultset =
  Com.mkCLSID "{14BE7435-785A-11D0-A431-00A024DED613}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdQueryFieldDef
-- 
-- --------------------------------------------------
data IOAdQueryFieldDef_ a = IOAdQueryFieldDef__ 
type IOAdQueryFieldDef a = Automation.IDispatch (IOAdQueryFieldDef_ a)
iidIOAdQueryFieldDef :: Com.IID (IOAdQueryFieldDef ())
iidIOAdQueryFieldDef =
  Com.mkIID "{14BE7437-785A-11D0-A431-00A024DED613}"

getDescription :: IOAdQueryFieldDef a0
               -> Prelude.IO Prelude.String
getDescription =
  Automation.propertyGet "Description"
                         []
                         Automation.outString

setDescription :: Prelude.String
               -> IOAdQueryFieldDef a0
               -> Prelude.IO ()
setDescription prop =
  Automation.propertySet "Description"
                         [Automation.inString prop]

getIsLegalForFilter :: IOAdQueryFieldDef a0
                    -> Prelude.IO Prelude.Bool
getIsLegalForFilter =
  Automation.propertyGet "IsLegalForFilter"
                         []
                         Automation.outBool

setIsLegalForFilter :: Prelude.Bool
                    -> IOAdQueryFieldDef a0
                    -> Prelude.IO ()
setIsLegalForFilter prop =
  Automation.propertySet "IsLegalForFilter"
                         [Automation.inBool prop]

getChoiceList :: IOAdQueryFieldDef a1
              -> Prelude.IO a0
getChoiceList =
  Automation.propertyGet "choiceList"
                         []
                         Automation.outVariant

setChoiceList :: a0
              -> IOAdQueryFieldDef a1
              -> Prelude.IO ()
setChoiceList prop =
  Automation.propertySet "choiceList"
                         [Automation.inVariant prop]

getIsGroupBy :: IOAdQueryFieldDef a0
             -> Prelude.IO Prelude.Bool
getIsGroupBy =
  Automation.propertyGet "IsGroupBy"
                         []
                         Automation.outBool

setIsGroupBy :: Prelude.Bool
             -> IOAdQueryFieldDef a0
             -> Prelude.IO ()
setIsGroupBy prop =
  Automation.propertySet "IsGroupBy"
                         [Automation.inBool prop]

getSortOrder :: IOAdQueryFieldDef a0
             -> Prelude.IO Int.Int32
getSortOrder =
  Automation.propertyGet "SortOrder"
                         []
                         Automation.outInt32

setSortOrder :: Int.Int32
             -> IOAdQueryFieldDef a0
             -> Prelude.IO ()
setSortOrder prop =
  Automation.propertySet "SortOrder"
                         [Automation.inInt32 prop]

getSortType :: IOAdQueryFieldDef a0
            -> Prelude.IO Int.Int32
getSortType =
  Automation.propertyGet "SortType"
                         []
                         Automation.outInt32

setSortType :: Int.Int32
            -> IOAdQueryFieldDef a0
            -> Prelude.IO ()
setSortType prop =
  Automation.propertySet "SortType"
                         [Automation.inInt32 prop]

getLabel :: IOAdQueryFieldDef a0
         -> Prelude.IO Prelude.String
getLabel =
  Automation.propertyGet "Label"
                         []
                         Automation.outString

setLabel :: Prelude.String
         -> IOAdQueryFieldDef a0
         -> Prelude.IO ()
setLabel prop =
  Automation.propertySet "Label"
                         [Automation.inString prop]

getIsShown :: IOAdQueryFieldDef a0
           -> Prelude.IO Prelude.Bool
getIsShown =
  Automation.propertyGet "IsShown"
                         []
                         Automation.outBool

setIsShown :: Prelude.Bool
           -> IOAdQueryFieldDef a0
           -> Prelude.IO ()
setIsShown prop =
  Automation.propertySet "IsShown"
                         [Automation.inBool prop]

getAggregateFunction :: IOAdQueryFieldDef a0
                     -> Prelude.IO Int.Int32
getAggregateFunction =
  Automation.propertyGet "AggregateFunction"
                         []
                         Automation.outInt32

setAggregateFunction :: Int.Int32
                     -> IOAdQueryFieldDef a0
                     -> Prelude.IO ()
setAggregateFunction prop =
  Automation.propertySet "AggregateFunction"
                         [Automation.inInt32 prop]

getFunction :: IOAdQueryFieldDef a0
            -> Prelude.IO Int.Int32
getFunction =
  Automation.propertyGet "Function"
                         []
                         Automation.outInt32

setFunction :: Int.Int32
            -> IOAdQueryFieldDef a0
            -> Prelude.IO ()
setFunction prop =
  Automation.propertySet "Function"
                         [Automation.inInt32 prop]

getFieldType0 :: IOAdQueryFieldDef a0
              -> Prelude.IO Int.Int32
getFieldType0 =
  Automation.propertyGet "FieldType"
                         []
                         Automation.outInt32

setFieldType :: Int.Int32
             -> IOAdQueryFieldDef a0
             -> Prelude.IO ()
setFieldType prop =
  Automation.propertySet "FieldType"
                         [Automation.inInt32 prop]

getDataType :: IOAdQueryFieldDef a0
            -> Prelude.IO Int.Int32
getDataType =
  Automation.propertyGet "DataType"
                         []
                         Automation.outInt32

setDataType :: Int.Int32
            -> IOAdQueryFieldDef a0
            -> Prelude.IO ()
setDataType prop =
  Automation.propertySet "DataType"
                         [Automation.inInt32 prop]

getFieldPathName :: IOAdQueryFieldDef a0
                 -> Prelude.IO Prelude.String
getFieldPathName =
  Automation.propertyGet "FieldPathName"
                         []
                         Automation.outString

setFieldPathName :: Prelude.String
                 -> IOAdQueryFieldDef a0
                 -> Prelude.IO ()
setFieldPathName prop =
  Automation.propertySet "FieldPathName"
                         [Automation.inString prop]

-- --------------------------------------------------
-- 
-- coclass OAdQueryFieldDef
-- 
--   implements: IOAdQueryFieldDef
-- --------------------------------------------------
clsidOAdQueryFieldDef :: Com.CLSID
clsidOAdQueryFieldDef =
  Com.mkCLSID "{14BE7438-785A-11D0-A431-00A024DED613}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdField
-- 
-- --------------------------------------------------
data IOAdField_ a = IOAdField__ 
type IOAdField a = Automation.IDispatch (IOAdField_ a)
iidIOAdField :: Com.IID (IOAdField ())
iidIOAdField = Com.mkIID "{754F0160-B0EF-11D0-A475-00A024DED613}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdFieldHookEvents
-- 
-- --------------------------------------------------
data IOAdFieldHookEvents_ a = IOAdFieldHookEvents__ 
type IOAdFieldHookEvents a = Automation.IDispatch (IOAdFieldHookEvents_ a)
iidIOAdFieldHookEvents :: Com.IID (IOAdFieldHookEvents ())
iidIOAdFieldHookEvents =
  Com.mkIID "{754F0160-B0EF-11D0-A475-10A024DED613}"

mkIOAdFieldHookEvents_vtbl :: (Prelude.String -> objState -> Prelude.IO ())
                           -> (Prelude.String -> Prelude.String -> objState -> Prelude.IO Int.Int32)
                           -> (Prelude.String -> Automation.IDispatch a0 -> objState -> Prelude.IO ())
                           -> (Prelude.String -> objState -> Prelude.IO ())
                           -> (Prelude.String -> objState -> Prelude.IO Prelude.String)
                           -> Prelude.IO (ComServ.ComVTable (IOAdFieldHookEvents ()) objState)
mkIOAdFieldHookEvents_vtbl defaultValue permission choiceList valueChanged validation0 =
  let
   meth_arg0 = StdDispatch.mkDispMethod "DefaultValue" 0x1 (prim_defaultValue defaultValue)
   meth_arg1 = StdDispatch.mkDispMethod "Permission" 0x2 (prim_permission permission)
   meth_arg2 = StdDispatch.mkDispMethod "choiceList" 0x3 (prim_choiceList choiceList)
   meth_arg3 = StdDispatch.mkDispMethod "ValueChanged" 0x4 (prim_valueChanged valueChanged)
   meth_arg4 = StdDispatch.mkDispMethod "Validation" 0x5 (prim_validation0 validation0)
  in
  StdDispatch.createStdDispatchVTBL2 [ meth_arg0
                                     , meth_arg1
                                     , meth_arg2
                                     , meth_arg3
                                     , meth_arg4
                                     ]

prim_defaultValue :: (Prelude.String -> objState -> Prelude.IO ())
                  -> [Automation.VARIANT]
                  -> objState
                  -> Prelude.IO (Prelude.Maybe Automation.VARIANT)
prim_defaultValue defaultValue_meth =
  StdDispatch.inArg Prelude.$ \ fieldname ->
  StdDispatch.apply_0 (defaultValue_meth fieldname)

prim_permission :: (Prelude.String -> Prelude.String -> objState -> Prelude.IO Int.Int32)
                -> [Automation.VARIANT]
                -> objState
                -> Prelude.IO (Prelude.Maybe Automation.VARIANT)
prim_permission permission_meth =
  StdDispatch.inArg Prelude.$ \ fieldname ->
  StdDispatch.inArg Prelude.$ \ username ->
  StdDispatch.retVal Prelude.$ \ the_res ->
  StdDispatch.apply_1 (permission_meth fieldname username)
                      the_res

prim_choiceList :: (Prelude.String -> Automation.IDispatch a0 -> objState -> Prelude.IO ())
                -> [Automation.VARIANT]
                -> objState
                -> Prelude.IO (Prelude.Maybe Automation.VARIANT)
prim_choiceList choiceList_meth =
  StdDispatch.inArg Prelude.$ \ fieldname ->
  StdDispatch.inArg Prelude.$ \ listobject ->
  StdDispatch.apply_0 (choiceList_meth fieldname listobject)

prim_valueChanged :: (Prelude.String -> objState -> Prelude.IO ())
                  -> [Automation.VARIANT]
                  -> objState
                  -> Prelude.IO (Prelude.Maybe Automation.VARIANT)
prim_valueChanged valueChanged_meth =
  StdDispatch.inArg Prelude.$ \ fieldname ->
  StdDispatch.apply_0 (valueChanged_meth fieldname)

prim_validation0 :: (Prelude.String -> objState -> Prelude.IO Prelude.String)
                 -> [Automation.VARIANT]
                 -> objState
                 -> Prelude.IO (Prelude.Maybe Automation.VARIANT)
prim_validation0 validation0_meth =
  StdDispatch.inArg Prelude.$ \ fieldname ->
  StdDispatch.retVal Prelude.$ \ the_res ->
  StdDispatch.apply_1 (validation0_meth fieldname)
                      the_res

-- --------------------------------------------------
-- 
-- coclass OAdField
-- 
--   implements: IOAdField , [source]IOAdFieldHookEvents
-- --------------------------------------------------
clsidOAdField :: Com.CLSID
clsidOAdField =
  Com.mkCLSID "{754F0173-B0EF-11D0-A475-00A024DED613}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdHookChoices
-- 
-- --------------------------------------------------
data IOAdHookChoices_ a = IOAdHookChoices__ 
type IOAdHookChoices a = Automation.IDispatch (IOAdHookChoices_ a)
iidIOAdHookChoices :: Com.IID (IOAdHookChoices ())
iidIOAdHookChoices =
  Com.mkIID "{60A7B420-B5A3-11D0-A477-00A024DED613}"

addItem :: Prelude.String
        -> IOAdHookChoices a0
        -> Prelude.IO ()
addItem item =
  Automation.method0 "AddItem"
                     [Automation.inString item]

sort :: a1
     -> IOAdHookChoices a0
     -> Prelude.IO ()
sort sortAscending =
  Automation.method0 "Sort"
                     [Automation.inVariant sortAscending]

addItems :: a1
         -> IOAdHookChoices a0
         -> Prelude.IO ()
addItems items =
  Automation.method0 "AddItems"
                     [Automation.inVariant items]

-- --------------------------------------------------
-- 
-- coclass OAdHookChoices
-- 
--   implements: IOAdHookChoices
-- --------------------------------------------------
clsidOAdHookChoices :: Com.CLSID
clsidOAdHookChoices =
  Com.mkCLSID "{60A7B42E-B5A3-11D0-A477-00A024DED613}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdEntityDef
-- 
-- --------------------------------------------------
data IOAdEntityDef_ a = IOAdEntityDef__ 
type IOAdEntityDef a = Automation.IDispatch (IOAdEntityDef_ a)
iidIOAdEntityDef :: Com.IID (IOAdEntityDef ())
iidIOAdEntityDef =
  Com.mkIID "{04A2C910-C552-11D0-A47F-00A024DED613}"

getName0 :: IOAdEntityDef a0
         -> Prelude.IO Prelude.String
getName0 =
  Automation.function1 "GetName"
                       []
                       Automation.outString

getFieldDefNames :: IOAdEntityDef a0
                 -> Prelude.IO a1
getFieldDefNames =
  Automation.function1 "GetFieldDefNames"
                       []
                       Automation.outVariant

getActionDefNames :: IOAdEntityDef a0
                  -> Prelude.IO a1
getActionDefNames =
  Automation.function1 "GetActionDefNames"
                       []
                       Automation.outVariant

getStateDefNames :: IOAdEntityDef a0
                 -> Prelude.IO a1
getStateDefNames =
  Automation.function1 "GetStateDefNames"
                       []
                       Automation.outVariant

getFieldDefType :: Prelude.String
                -> IOAdEntityDef a0
                -> Prelude.IO Int.Int32
getFieldDefType field_def_name =
  Automation.function1 "GetFieldDefType"
                       [Automation.inString field_def_name]
                       Automation.outInt32

getActionDefType :: Prelude.String
                 -> IOAdEntityDef a0
                 -> Prelude.IO Int.Int32
getActionDefType action_def_name =
  Automation.function1 "GetActionDefType"
                       [Automation.inString action_def_name]
                       Automation.outInt32

getType0 :: IOAdEntityDef a0
         -> Prelude.IO Int.Int32
getType0 =
  Automation.function1 "GetType"
                       []
                       Automation.outInt32

getActionDefForm0 :: Prelude.String
                  -> IOAdEntityDef a0
                  -> Prelude.IO (Automation.IDispatch ())
getActionDefForm0 action_def_name =
  Automation.function1 "GetActionDefForm"
                       [Automation.inString action_def_name]
                       Automation.outIDispatch

isFieldDefName :: Prelude.String
               -> IOAdEntityDef a0
               -> Prelude.IO Prelude.Bool
isFieldDefName name =
  Automation.function1 "IsFieldDefName"
                       [Automation.inString name]
                       Automation.outBool

isActionDefName :: Prelude.String
                -> IOAdEntityDef a0
                -> Prelude.IO Prelude.Bool
isActionDefName name =
  Automation.function1 "IsActionDefName"
                       [Automation.inString name]
                       Automation.outBool

isStateDefName :: Prelude.String
               -> IOAdEntityDef a0
               -> Prelude.IO Prelude.Bool
isStateDefName name =
  Automation.function1 "IsStateDefName"
                       [Automation.inString name]
                       Automation.outBool

isSystemOwnedFieldDefName :: Prelude.String
                          -> IOAdEntityDef a0
                          -> Prelude.IO Prelude.Bool
isSystemOwnedFieldDefName field_name =
  Automation.function1 "IsSystemOwnedFieldDefName"
                       [Automation.inString field_name]
                       Automation.outBool

getLocalFieldPathNames :: Prelude.Bool
                       -> IOAdEntityDef a0
                       -> Prelude.IO a1
getLocalFieldPathNames visible_only =
  Automation.function1 "GetLocalFieldPathNames"
                       [Automation.inBool visible_only]
                       Automation.outVariant

getFieldReferenceEntityDef :: Prelude.String
                           -> IOAdEntityDef a0
                           -> Prelude.IO (Automation.IDispatch ())
getFieldReferenceEntityDef fieldname =
  Automation.function1 "GetFieldReferenceEntityDef"
                       [Automation.inString fieldname]
                       Automation.outIDispatch

doesTransitionExist :: Prelude.String
                    -> Prelude.String
                    -> IOAdEntityDef a0
                    -> Prelude.IO a1
doesTransitionExist sourceState destState =
  Automation.function1 "DoesTransitionExist"
                       [ Automation.inString sourceState
                       , Automation.inString destState
                       ]
                       Automation.outVariant

getHookDefNames :: IOAdEntityDef a0
                -> Prelude.IO a1
getHookDefNames =
  Automation.function1 "GetHookDefNames"
                       []
                       Automation.outVariant

isFamily :: IOAdEntityDef a0
         -> Prelude.IO Prelude.Bool
isFamily =
  Automation.function1 "IsFamily"
                       []
                       Automation.outBool

getActionDestStateName :: Prelude.String
                       -> IOAdEntityDef a0
                       -> Prelude.IO Prelude.String
getActionDestStateName action_def_name =
  Automation.function1 "GetActionDestStateName"
                       [Automation.inString action_def_name]
                       Automation.outString

getActionSourceStateNames :: Prelude.String
                          -> IOAdEntityDef a0
                          -> Prelude.IO Prelude.String
getActionSourceStateNames action_def_name =
  Automation.function1 "GetActionSourceStateNames"
                       [Automation.inString action_def_name]
                       Automation.outString

getDbName :: IOAdEntityDef a0
          -> Prelude.IO Prelude.String
getDbName =
  Automation.function1 "GetDbName"
                       []
                       Automation.outString

isSecurityContext :: IOAdEntityDef a0
                  -> Prelude.IO Prelude.Bool
isSecurityContext =
  Automation.function1 "IsSecurityContext"
                       []
                       Automation.outBool

canBeSecurityContext :: IOAdEntityDef a0
                     -> Prelude.IO Prelude.Bool
canBeSecurityContext =
  Automation.function1 "CanBeSecurityContext"
                       []
                       Automation.outBool

isSecurityContextField :: Prelude.String
                       -> IOAdEntityDef a0
                       -> Prelude.IO Prelude.Bool
isSecurityContextField name =
  Automation.function1 "IsSecurityContextField"
                       [Automation.inString name]
                       Automation.outBool

canBeSecurityContextField :: Prelude.String
                          -> IOAdEntityDef a0
                          -> Prelude.IO Prelude.Bool
canBeSecurityContextField name =
  Automation.function1 "CanBeSecurityContextField"
                       [Automation.inString name]
                       Automation.outBool

lookupFieldDefNameByDbName :: Prelude.String
                           -> IOAdEntityDef a0
                           -> Prelude.IO Prelude.String
lookupFieldDefNameByDbName field_db_name =
  Automation.function1 "LookupFieldDefNameByDbName"
                       [Automation.inString field_db_name]
                       Automation.outString

lookupFieldDefDbNameByName :: Prelude.String
                           -> IOAdEntityDef a0
                           -> Prelude.IO Prelude.String
lookupFieldDefDbNameByName field_name =
  Automation.function1 "LookupFieldDefDbNameByName"
                       [Automation.inString field_name]
                       Automation.outString

getFieldRequiredness0 :: Prelude.String
                      -> Prelude.String
                      -> IOAdEntityDef a0
                      -> Prelude.IO Int.Int32
getFieldRequiredness0 field_name state_name =
  Automation.function1 "GetFieldRequiredness"
                       [ Automation.inString field_name
                       , Automation.inString state_name
                       ]
                       Automation.outInt32

getActionTypeName :: Int.Int32
                  -> IOAdEntityDef a0
                  -> Prelude.IO Prelude.String
getActionTypeName actiontype =
  Automation.function1 "GetActionTypeName"
                       [Automation.inInt32 actiontype]
                       Automation.outString

getFamilyMembers :: IOAdEntityDef a0
                 -> Prelude.IO (Automation.IDispatch ())
getFamilyMembers =
  Automation.function1 "GetFamilyMembers"
                       []
                       Automation.outIDispatch

getParentFamilies :: IOAdEntityDef a0
                  -> Prelude.IO (Automation.IDispatch ())
getParentFamilies =
  Automation.function1 "GetParentFamilies"
                       []
                       Automation.outIDispatch

isBuiltInSystemOwned :: IOAdEntityDef a0
                     -> Prelude.IO Prelude.Bool
isBuiltInSystemOwned =
  Automation.function1 "IsBuiltInSystemOwned"
                       []
                       Automation.outBool

getDisplayNameFields :: IOAdEntityDef a0
                     -> Prelude.IO a1
getDisplayNameFields =
  Automation.function1 "GetDisplayNameFields"
                       []
                       Automation.outVariant

-- --------------------------------------------------
-- 
-- coclass OAdEntityDef
-- 
--   implements: IOAdEntityDef
-- --------------------------------------------------
clsidOAdEntityDef :: Com.CLSID
clsidOAdEntityDef =
  Com.mkCLSID "{04A2C920-C552-11D0-A47F-00A024DED613}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdLink
-- 
-- --------------------------------------------------
data IOAdLink_ a = IOAdLink__ 
type IOAdLink a = Automation.IDispatch (IOAdLink_ a)
iidIOAdLink :: Com.IID (IOAdLink ())
iidIOAdLink = Com.mkIID "{9EC2BB70-1892-11D1-A4E4-00A0C9243B7B}"

getParentEntityDef :: IOAdLink a0
                   -> Prelude.IO (Automation.IDispatch ())
getParentEntityDef =
  Automation.function1 "GetParentEntityDef"
                       []
                       Automation.outIDispatch

getParentEntityDefName :: IOAdLink a0
                       -> Prelude.IO Prelude.String
getParentEntityDefName =
  Automation.function1 "GetParentEntityDefName"
                       []
                       Automation.outString

getParentEntity :: IOAdLink a0
                -> Prelude.IO (Automation.IDispatch ())
getParentEntity =
  Automation.function1 "GetParentEntity"
                       []
                       Automation.outIDispatch

getParentEntityId :: IOAdLink a0
                  -> Prelude.IO Prelude.String
getParentEntityId =
  Automation.function1 "GetParentEntityId"
                       []
                       Automation.outString

getChildEntityDef :: IOAdLink a0
                  -> Prelude.IO (Automation.IDispatch ())
getChildEntityDef =
  Automation.function1 "GetChildEntityDef"
                       []
                       Automation.outIDispatch

getChildEntityDefName :: IOAdLink a0
                      -> Prelude.IO Prelude.String
getChildEntityDefName =
  Automation.function1 "GetChildEntityDefName"
                       []
                       Automation.outString

getChildEntity :: IOAdLink a0
               -> Prelude.IO (Automation.IDispatch ())
getChildEntity =
  Automation.function1 "GetChildEntity"
                       []
                       Automation.outIDispatch

getChildEntityId :: IOAdLink a0
                 -> Prelude.IO Prelude.String
getChildEntityId =
  Automation.function1 "GetChildEntityId"
                       []
                       Automation.outString

-- --------------------------------------------------
-- 
-- coclass OAdLink
-- 
--   implements: IOAdLink
-- --------------------------------------------------
clsidOAdLink :: Com.CLSID
clsidOAdLink = Com.mkCLSID "{9EC2BB71-1892-11D1-A4E4-00A0C9243B7B}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdDatabaseDesc
-- 
-- --------------------------------------------------
data IOAdDatabaseDesc_ a = IOAdDatabaseDesc__ 
type IOAdDatabaseDesc a = Automation.IDispatch (IOAdDatabaseDesc_ a)
iidIOAdDatabaseDesc :: Com.IID (IOAdDatabaseDesc ())
iidIOAdDatabaseDesc =
  Com.mkIID "{D267C190-245F-11D1-A4ED-00A0C9243B7B}"

getDatabaseName :: IOAdDatabaseDesc a0
                -> Prelude.IO Prelude.String
getDatabaseName =
  Automation.function1 "GetDatabaseName"
                       []
                       Automation.outString

getDatabaseSetName :: IOAdDatabaseDesc a0
                   -> Prelude.IO Prelude.String
getDatabaseSetName =
  Automation.function1 "GetDatabaseSetName"
                       []
                       Automation.outString

getDatabaseConnectString :: IOAdDatabaseDesc a0
                         -> Prelude.IO Prelude.String
getDatabaseConnectString =
  Automation.function1 "GetDatabaseConnectString"
                       []
                       Automation.outString

getIsMaster :: IOAdDatabaseDesc a0
            -> Prelude.IO Prelude.Bool
getIsMaster =
  Automation.function1 "GetIsMaster"
                       []
                       Automation.outBool

getDescription0 :: IOAdDatabaseDesc a0
                -> Prelude.IO Prelude.String
getDescription0 =
  Automation.function1 "GetDescription"
                       []
                       Automation.outString

getLogin :: IOAdDatabaseDesc a0
         -> Prelude.IO Prelude.String
getLogin =
  Automation.function1 "GetLogin"
                       []
                       Automation.outString

getPassword :: IOAdDatabaseDesc a0
            -> Prelude.IO Prelude.String
getPassword =
  Automation.function1 "GetPassword"
                       []
                       Automation.outString

-- --------------------------------------------------
-- 
-- coclass OAdDBDescription
-- 
--   implements: IOAdDatabaseDesc
-- --------------------------------------------------
clsidOAdDBDescription :: Com.CLSID
clsidOAdDBDescription =
  Com.mkCLSID "{D267C191-245F-11D1-A4ED-00A0C9243B7B}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdFieldInfo
-- 
-- --------------------------------------------------
data IOAdFieldInfo_ a = IOAdFieldInfo__ 
type IOAdFieldInfo a = Automation.IDispatch (IOAdFieldInfo_ a)
iidIOAdFieldInfo :: Com.IID (IOAdFieldInfo ())
iidIOAdFieldInfo =
  Com.mkIID "{21E00E8C-3996-11D1-A4F4-00A0C9243B7B}"

getName1 :: IOAdFieldInfo a0
         -> Prelude.IO Prelude.String
getName1 =
  Automation.function1 "GetName"
                       []
                       Automation.outString

getType1 :: IOAdFieldInfo a0
         -> Prelude.IO Int.Int32
getType1 =
  Automation.function1 "GetType"
                       []
                       Automation.outInt32

getRequiredness :: IOAdFieldInfo a0
                -> Prelude.IO Int.Int32
getRequiredness =
  Automation.function1 "GetRequiredness"
                       []
                       Automation.outInt32

getValueStatus :: IOAdFieldInfo a0
               -> Prelude.IO Int.Int32
getValueStatus =
  Automation.function1 "GetValueStatus"
                       []
                       Automation.outInt32

getValidationStatus :: IOAdFieldInfo a0
                    -> Prelude.IO Int.Int32
getValidationStatus =
  Automation.function1 "GetValidationStatus"
                       []
                       Automation.outInt32

getMessageText :: IOAdFieldInfo a0
               -> Prelude.IO Prelude.String
getMessageText =
  Automation.function1 "GetMessageText"
                       []
                       Automation.outString

getValue :: IOAdFieldInfo a0
         -> Prelude.IO Prelude.String
getValue =
  Automation.function1 "GetValue"
                       []
                       Automation.outString

getValueAsList :: IOAdFieldInfo a0
               -> Prelude.IO a1
getValueAsList =
  Automation.function1 "GetValueAsList"
                       []
                       Automation.outVariant

validityChangedThisSetValue :: IOAdFieldInfo a0
                            -> Prelude.IO Prelude.Bool
validityChangedThisSetValue =
  Automation.function1 "ValidityChangedThisSetValue"
                       []
                       Automation.outBool

valueChangedThisSetValue :: IOAdFieldInfo a0
                         -> Prelude.IO Prelude.Bool
valueChangedThisSetValue =
  Automation.function1 "ValueChangedThisSetValue"
                       []
                       Automation.outBool

valueChangedThisGroup :: IOAdFieldInfo a0
                      -> Prelude.IO Prelude.Bool
valueChangedThisGroup =
  Automation.function1 "ValueChangedThisGroup"
                       []
                       Automation.outBool

valueChangedThisAction :: IOAdFieldInfo a0
                       -> Prelude.IO Prelude.Bool
valueChangedThisAction =
  Automation.function1 "ValueChangedThisAction"
                       []
                       Automation.outBool

validityChangedThisGroup :: IOAdFieldInfo a0
                         -> Prelude.IO Prelude.Bool
validityChangedThisGroup =
  Automation.function1 "ValidityChangedThisGroup"
                       []
                       Automation.outBool

validityChangedThisAction :: IOAdFieldInfo a0
                          -> Prelude.IO Prelude.Bool
validityChangedThisAction =
  Automation.function1 "ValidityChangedThisAction"
                       []
                       Automation.outBool

-- --------------------------------------------------
-- 
-- coclass OAdFieldInfo
-- 
--   implements: IOAdFieldInfo
-- --------------------------------------------------
clsidOAdFieldInfo :: Com.CLSID
clsidOAdFieldInfo =
  Com.mkCLSID "{21E00E99-3996-11D1-A4F4-00A0C9243B7B}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdHistoryFields
-- 
-- --------------------------------------------------
data IOAdHistoryFields_ a = IOAdHistoryFields__ 
type IOAdHistoryFields a = Automation.IDispatch (IOAdHistoryFields_ a)
iidIOAdHistoryFields :: Com.IID (IOAdHistoryFields ())
iidIOAdHistoryFields =
  Com.mkIID "{CE573C7A-3B54-11D1-B2BF-00A0C9851B52}"

getCount :: IOAdHistoryFields a0
         -> Prelude.IO Int.Int32
getCount =
  Automation.propertyGet "Count"
                         []
                         Automation.outInt32

setCount :: Int.Int32
         -> IOAdHistoryFields a0
         -> Prelude.IO ()
setCount prop =
  Automation.propertySet "Count"
                         [Automation.inInt32 prop]

item :: (Automation.Variant a1)
     => a1
     -> IOAdHistoryFields a0
     -> Prelude.IO (Automation.IDispatch ())
item index =
  Automation.function1 "item"
                       [Automation.inVariant index]
                       Automation.outIDispatch

-- --------------------------------------------------
-- 
-- coclass OAdHistoryFields
-- 
--   implements: IOAdHistoryFields
-- --------------------------------------------------
clsidOAdHistoryFields :: Com.CLSID
clsidOAdHistoryFields =
  Com.mkCLSID "{CE573C88-3B54-11D1-B2BF-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdHistoryField
-- 
-- --------------------------------------------------
data IOAdHistoryField_ a = IOAdHistoryField__ 
type IOAdHistoryField a = Automation.IDispatch (IOAdHistoryField_ a)
iidIOAdHistoryField :: Com.IID (IOAdHistoryField ())
iidIOAdHistoryField =
  Com.mkIID "{CE573C89-3B54-11D1-B2BF-00A0C9851B52}"

getHistories :: IOAdHistoryField a0
             -> Prelude.IO (Automation.IDispatch ())
getHistories =
  Automation.propertyGet "Histories"
                         []
                         Automation.outIDispatch

setHistories :: Automation.IDispatch a0
             -> IOAdHistoryField a1
             -> Prelude.IO ()
setHistories prop =
  Automation.propertySet "Histories"
                         [Automation.inIDispatch prop]

getDisplayNameHeader :: IOAdHistoryField a1
                     -> Prelude.IO a0
getDisplayNameHeader =
  Automation.propertyGet "DisplayNameHeader"
                         []
                         Automation.outVariant

setDisplayNameHeader :: a0
                     -> IOAdHistoryField a1
                     -> Prelude.IO ()
setDisplayNameHeader prop =
  Automation.propertySet "DisplayNameHeader"
                         [Automation.inVariant prop]

getFieldname :: IOAdHistoryField a0
             -> Prelude.IO Prelude.String
getFieldname =
  Automation.propertyGet "fieldname"
                         []
                         Automation.outString

setFieldname :: Prelude.String
             -> IOAdHistoryField a0
             -> Prelude.IO ()
setFieldname prop =
  Automation.propertySet "fieldname"
                         [Automation.inString prop]

-- --------------------------------------------------
-- 
-- coclass OAdHistoryField
-- 
--   implements: IOAdHistoryField
-- --------------------------------------------------
clsidOAdHistoryField :: Com.CLSID
clsidOAdHistoryField =
  Com.mkCLSID "{CE573C97-3B54-11D1-B2BF-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdHistories
-- 
-- --------------------------------------------------
data IOAdHistories_ a = IOAdHistories__ 
type IOAdHistories a = Automation.IDispatch (IOAdHistories_ a)
iidIOAdHistories :: Com.IID (IOAdHistories ())
iidIOAdHistories =
  Com.mkIID "{CE573C98-3B54-11D1-B2BF-00A0C9851B52}"

getNewEnum :: IOAdHistories a0
           -> Prelude.IO (Com.IUnknown ())
getNewEnum =
  Automation.propertyGet "_NewEnum"
                         []
                         Automation.outIUnknown

setNewEnum :: Com.IUnknown a0
           -> IOAdHistories a1
           -> Prelude.IO ()
setNewEnum prop =
  Automation.propertySet "_NewEnum"
                         [Automation.inIUnknown prop]

getCount0 :: IOAdHistories a0
          -> Prelude.IO Int.Int32
getCount0 =
  Automation.propertyGet "Count"
                         []
                         Automation.outInt32

setCount0 :: Int.Int32
          -> IOAdHistories a0
          -> Prelude.IO ()
setCount0 prop =
  Automation.propertySet "Count"
                         [Automation.inInt32 prop]

item0 :: (Automation.Variant a1)
      => a1
      -> IOAdHistories a0
      -> Prelude.IO (Automation.IDispatch ())
item0 index =
  Automation.function1 "item"
                       [Automation.inVariant index]
                       Automation.outIDispatch

-- --------------------------------------------------
-- 
-- coclass OAdHistories
-- 
--   implements: IOAdHistories
-- --------------------------------------------------
clsidOAdHistories :: Com.CLSID
clsidOAdHistories =
  Com.mkCLSID "{CE573CA6-3B54-11D1-B2BF-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdHistory
-- 
-- --------------------------------------------------
data IOAdHistory_ a = IOAdHistory__ 
type IOAdHistory a = Automation.IDispatch (IOAdHistory_ a)
iidIOAdHistory :: Com.IID (IOAdHistory ())
iidIOAdHistory = Com.mkIID "{CE573CA7-3B54-11D1-B2BF-00A0C9851B52}"

getNewEnum0 :: IOAdHistory a0
            -> Prelude.IO (Com.IUnknown ())
getNewEnum0 =
  Automation.propertyGet "_NewEnum"
                         []
                         Automation.outIUnknown

setNewEnum0 :: Com.IUnknown a0
            -> IOAdHistory a1
            -> Prelude.IO ()
setNewEnum0 prop =
  Automation.propertySet "_NewEnum"
                         [Automation.inIUnknown prop]

getValue0 :: IOAdHistory a0
          -> Prelude.IO Prelude.String
getValue0 =
  Automation.propertyGet "value"
                         []
                         Automation.outString

setValue :: Prelude.String
         -> IOAdHistory a0
         -> Prelude.IO ()
setValue prop =
  Automation.propertySet "value"
                         [Automation.inString prop]

-- --------------------------------------------------
-- 
-- coclass OAdHistory
-- 
--   implements: IOAdHistory
-- --------------------------------------------------
clsidOAdHistory :: Com.CLSID
clsidOAdHistory =
  Com.mkCLSID "{CE573CB5-3B54-11D1-B2BF-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdAttachmentFields
-- 
-- --------------------------------------------------
data IOAdAttachmentFields_ a = IOAdAttachmentFields__ 
type IOAdAttachmentFields a = Automation.IDispatch (IOAdAttachmentFields_ a)
iidIOAdAttachmentFields :: Com.IID (IOAdAttachmentFields ())
iidIOAdAttachmentFields =
  Com.mkIID "{CE573C21-3B54-11D1-B2BF-00A0C9851B52}"

getNewEnum1 :: IOAdAttachmentFields a0
            -> Prelude.IO (Com.IUnknown ())
getNewEnum1 =
  Automation.propertyGet "_NewEnum"
                         []
                         Automation.outIUnknown

setNewEnum1 :: Com.IUnknown a0
            -> IOAdAttachmentFields a1
            -> Prelude.IO ()
setNewEnum1 prop =
  Automation.propertySet "_NewEnum"
                         [Automation.inIUnknown prop]

getCount1 :: IOAdAttachmentFields a0
          -> Prelude.IO Int.Int32
getCount1 =
  Automation.propertyGet "Count"
                         []
                         Automation.outInt32

setCount1 :: Int.Int32
          -> IOAdAttachmentFields a0
          -> Prelude.IO ()
setCount1 prop =
  Automation.propertySet "Count"
                         [Automation.inInt32 prop]

item1 :: (Automation.Variant a1)
      => a1
      -> IOAdAttachmentFields a0
      -> Prelude.IO (Automation.IDispatch ())
item1 index =
  Automation.function1 "item"
                       [Automation.inVariant index]
                       Automation.outIDispatch

-- --------------------------------------------------
-- 
-- coclass OAdAttachmentFields
-- 
--   implements: IOAdAttachmentFields
-- --------------------------------------------------
clsidOAdAttachmentFields :: Com.CLSID
clsidOAdAttachmentFields =
  Com.mkCLSID "{CE573C22-3B54-11D1-B2BF-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdAttachmentField
-- 
-- --------------------------------------------------
data IOAdAttachmentField_ a = IOAdAttachmentField__ 
type IOAdAttachmentField a = Automation.IDispatch (IOAdAttachmentField_ a)
iidIOAdAttachmentField :: Com.IID (IOAdAttachmentField ())
iidIOAdAttachmentField =
  Com.mkIID "{CE573C23-3B54-11D1-B2BF-00A0C9851B52}"

getAttachments :: IOAdAttachmentField a0
               -> Prelude.IO (Automation.IDispatch ())
getAttachments =
  Automation.propertyGet "Attachments"
                         []
                         Automation.outIDispatch

setAttachments :: Automation.IDispatch a0
               -> IOAdAttachmentField a1
               -> Prelude.IO ()
setAttachments prop =
  Automation.propertySet "Attachments"
                         [Automation.inIDispatch prop]

getDisplayNameHeader0 :: IOAdAttachmentField a1
                      -> Prelude.IO a0
getDisplayNameHeader0 =
  Automation.propertyGet "DisplayNameHeader"
                         []
                         Automation.outVariant

setDisplayNameHeader0 :: a0
                      -> IOAdAttachmentField a1
                      -> Prelude.IO ()
setDisplayNameHeader0 prop =
  Automation.propertySet "DisplayNameHeader"
                         [Automation.inVariant prop]

getFieldname0 :: IOAdAttachmentField a0
              -> Prelude.IO Prelude.String
getFieldname0 =
  Automation.propertyGet "fieldname"
                         []
                         Automation.outString

setFieldname0 :: Prelude.String
              -> IOAdAttachmentField a0
              -> Prelude.IO ()
setFieldname0 prop =
  Automation.propertySet "fieldname"
                         [Automation.inString prop]

-- --------------------------------------------------
-- 
-- coclass OAdAttachmentField
-- 
--   implements: IOAdAttachmentField
-- --------------------------------------------------
clsidOAdAttachmentField :: Com.CLSID
clsidOAdAttachmentField =
  Com.mkCLSID "{CE573C24-3B54-11D1-B2BF-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdAttachments
-- 
-- --------------------------------------------------
data IOAdAttachments_ a = IOAdAttachments__ 
type IOAdAttachments a = Automation.IDispatch (IOAdAttachments_ a)
iidIOAdAttachments :: Com.IID (IOAdAttachments ())
iidIOAdAttachments =
  Com.mkIID "{CE573C25-3B54-11D1-B2BF-00A0C9851B52}"

getNewEnum2 :: IOAdAttachments a0
            -> Prelude.IO (Com.IUnknown ())
getNewEnum2 =
  Automation.propertyGet "_NewEnum"
                         []
                         Automation.outIUnknown

setNewEnum2 :: Com.IUnknown a0
            -> IOAdAttachments a1
            -> Prelude.IO ()
setNewEnum2 prop =
  Automation.propertySet "_NewEnum"
                         [Automation.inIUnknown prop]

getCount2 :: IOAdAttachments a0
          -> Prelude.IO Int.Int32
getCount2 =
  Automation.propertyGet "Count"
                         []
                         Automation.outInt32

setCount2 :: Int.Int32
          -> IOAdAttachments a0
          -> Prelude.IO ()
setCount2 prop =
  Automation.propertySet "Count"
                         [Automation.inInt32 prop]

add :: Prelude.String
    -> Prelude.String
    -> IOAdAttachments a0
    -> Prelude.IO Prelude.Bool
add filename description =
  Automation.function1 "Add"
                       [ Automation.inString filename
                       , Automation.inString description
                       ]
                       Automation.outBool

delete :: a1
       -> IOAdAttachments a0
       -> Prelude.IO Prelude.Bool
delete subscript =
  Automation.function1 "Delete"
                       [Automation.inVariant subscript]
                       Automation.outBool

item2 :: (Automation.Variant a1)
      => a1
      -> IOAdAttachments a0
      -> Prelude.IO (Automation.IDispatch ())
item2 index =
  Automation.function1 "item"
                       [Automation.inVariant index]
                       Automation.outIDispatch

-- --------------------------------------------------
-- 
-- coclass OAdAttachments
-- 
--   implements: IOAdAttachments
-- --------------------------------------------------
clsidOAdAttachments :: Com.CLSID
clsidOAdAttachments =
  Com.mkCLSID "{CE573C26-3B54-11D1-B2BF-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdAttachment
-- 
-- --------------------------------------------------
data IOAdAttachment_ a = IOAdAttachment__ 
type IOAdAttachment a = Automation.IDispatch (IOAdAttachment_ a)
iidIOAdAttachment :: Com.IID (IOAdAttachment ())
iidIOAdAttachment =
  Com.mkIID "{CE573C27-3B54-11D1-B2BF-00A0C9851B52}"

getDisplayName0 :: IOAdAttachment a0
                -> Prelude.IO Prelude.String
getDisplayName0 =
  Automation.propertyGet "DisplayName"
                         []
                         Automation.outString

setDisplayName :: Prelude.String
               -> IOAdAttachment a0
               -> Prelude.IO ()
setDisplayName prop =
  Automation.propertySet "DisplayName"
                         [Automation.inString prop]

getDescription1 :: IOAdAttachment a0
                -> Prelude.IO Prelude.String
getDescription1 =
  Automation.propertyGet "Description"
                         []
                         Automation.outString

setDescription0 :: Prelude.String
                -> IOAdAttachment a0
                -> Prelude.IO ()
setDescription0 prop =
  Automation.propertySet "Description"
                         [Automation.inString prop]

getFileSize :: IOAdAttachment a0
            -> Prelude.IO Int.Int32
getFileSize =
  Automation.propertyGet "FileSize"
                         []
                         Automation.outInt32

setFileSize :: Int.Int32
            -> IOAdAttachment a0
            -> Prelude.IO ()
setFileSize prop =
  Automation.propertySet "FileSize"
                         [Automation.inInt32 prop]

getFilename :: IOAdAttachment a0
            -> Prelude.IO Prelude.String
getFilename =
  Automation.propertyGet "filename"
                         []
                         Automation.outString

setFilename :: Prelude.String
            -> IOAdAttachment a0
            -> Prelude.IO ()
setFilename prop =
  Automation.propertySet "filename"
                         [Automation.inString prop]

load :: Prelude.String
     -> IOAdAttachment a0
     -> Prelude.IO Prelude.Bool
load tempFile =
  Automation.function1 "Load"
                       [Automation.inString tempFile]
                       Automation.outBool

-- --------------------------------------------------
-- 
-- coclass OAdAttachment
-- 
--   implements: IOAdAttachment
-- --------------------------------------------------
clsidOAdAttachment :: Com.CLSID
clsidOAdAttachment =
  Com.mkCLSID "{CE573C28-3B54-11D1-B2BF-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdFieldFilter
-- 
-- --------------------------------------------------
data IOAdFieldFilter_ a = IOAdFieldFilter__ 
type IOAdFieldFilter a = Automation.IDispatch (IOAdFieldFilter_ a)
iidIOAdFieldFilter :: Com.IID (IOAdFieldFilter ())
iidIOAdFieldFilter =
  Com.mkIID "{24A57401-3F6C-11D1-B2C0-00A0C9851B52}"

getChoiceList0 :: IOAdFieldFilter a1
               -> Prelude.IO a0
getChoiceList0 =
  Automation.propertyGet "choiceList"
                         []
                         Automation.outVariant

setChoiceList0 :: a0
               -> IOAdFieldFilter a1
               -> Prelude.IO ()
setChoiceList0 prop =
  Automation.propertySet "choiceList"
                         [Automation.inVariant prop]

getLegalCompOps :: IOAdFieldFilter a1
                -> Prelude.IO a0
getLegalCompOps =
  Automation.propertyGet "LegalCompOps"
                         []
                         Automation.outVariant

setLegalCompOps :: a0
                -> IOAdFieldFilter a1
                -> Prelude.IO ()
setLegalCompOps prop =
  Automation.propertySet "LegalCompOps"
                         [Automation.inVariant prop]

getFieldType1 :: IOAdFieldFilter a0
              -> Prelude.IO Int.Int32
getFieldType1 =
  Automation.propertyGet "FieldType"
                         []
                         Automation.outInt32

setFieldType0 :: Int.Int32
              -> IOAdFieldFilter a0
              -> Prelude.IO ()
setFieldType0 prop =
  Automation.propertySet "FieldType"
                         [Automation.inInt32 prop]

getPrompt :: IOAdFieldFilter a0
          -> Prelude.IO Prelude.String
getPrompt =
  Automation.propertyGet "Prompt"
                         []
                         Automation.outString

setPrompt :: Prelude.String
          -> IOAdFieldFilter a0
          -> Prelude.IO ()
setPrompt prop =
  Automation.propertySet "Prompt"
                         [Automation.inString prop]

getStringExpression :: IOAdFieldFilter a0
                    -> Prelude.IO Prelude.String
getStringExpression =
  Automation.propertyGet "StringExpression"
                         []
                         Automation.outString

setStringExpression :: Prelude.String
                    -> IOAdFieldFilter a0
                    -> Prelude.IO ()
setStringExpression prop =
  Automation.propertySet "StringExpression"
                         [Automation.inString prop]

getValues :: IOAdFieldFilter a1
          -> Prelude.IO a0
getValues =
  Automation.propertyGet "values"
                         []
                         Automation.outVariant

setValues :: a0
          -> IOAdFieldFilter a1
          -> Prelude.IO ()
setValues prop =
  Automation.propertySet "values"
                         [Automation.inVariant prop]

getCompOp :: IOAdFieldFilter a0
          -> Prelude.IO Int.Int32
getCompOp =
  Automation.propertyGet "CompOp"
                         []
                         Automation.outInt32

setCompOp :: Int.Int32
          -> IOAdFieldFilter a0
          -> Prelude.IO ()
setCompOp prop =
  Automation.propertySet "CompOp"
                         [Automation.inInt32 prop]

getFieldPath :: IOAdFieldFilter a0
             -> Prelude.IO Prelude.String
getFieldPath =
  Automation.propertyGet "FieldPath"
                         []
                         Automation.outString

setFieldPath :: Prelude.String
             -> IOAdFieldFilter a0
             -> Prelude.IO ()
setFieldPath prop =
  Automation.propertySet "FieldPath"
                         [Automation.inString prop]

isLegalCompOp :: Int.Int32
              -> IOAdFieldFilter a0
              -> Prelude.IO Prelude.Bool
isLegalCompOp compOs =
  Automation.function1 "IsLegalCompOp"
                       [Automation.inInt32 compOs]
                       Automation.outBool

isLegalValues :: (Automation.Variant a2)
              => a1
              -> a2
              -> IOAdFieldFilter a0
              -> Prelude.IO Prelude.Bool
isLegalValues values errMsg =
  Automation.function1 "IsLegalValues"
                       [ Automation.inVariant values
                       , Automation.inVariant errMsg
                       ]
                       Automation.outBool

-- --------------------------------------------------
-- 
-- coclass OAdFieldFilter
-- 
--   implements: IOAdFieldFilter
-- --------------------------------------------------
clsidOAdFieldFilter :: Com.CLSID
clsidOAdFieldFilter =
  Com.mkCLSID "{24A57411-3F6C-11D1-B2C0-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdFieldFilters
-- 
-- --------------------------------------------------
data IOAdFieldFilters_ a = IOAdFieldFilters__ 
type IOAdFieldFilters a = Automation.IDispatch (IOAdFieldFilters_ a)
iidIOAdFieldFilters :: Com.IID (IOAdFieldFilters ())
iidIOAdFieldFilters =
  Com.mkIID "{24A57412-3F6C-11D1-B2C0-00A0C9851B52}"

getNewEnum3 :: IOAdFieldFilters a0
            -> Prelude.IO (Com.IUnknown ())
getNewEnum3 =
  Automation.propertyGet "_NewEnum"
                         []
                         Automation.outIUnknown

setNewEnum3 :: Com.IUnknown a0
            -> IOAdFieldFilters a1
            -> Prelude.IO ()
setNewEnum3 prop =
  Automation.propertySet "_NewEnum"
                         [Automation.inIUnknown prop]

getCount3 :: IOAdFieldFilters a0
          -> Prelude.IO Int.Int32
getCount3 =
  Automation.propertyGet "Count"
                         []
                         Automation.outInt32

setCount3 :: Int.Int32
          -> IOAdFieldFilters a0
          -> Prelude.IO ()
setCount3 prop =
  Automation.propertySet "Count"
                         [Automation.inInt32 prop]

add0 :: (Automation.Variant a2)
     => Prelude.String
     -> Int.Int32
     -> a1
     -> a2
     -> IOAdFieldFilters a0
     -> Prelude.IO (Automation.IDispatch ())
add0 fieldname compOp values isUnique =
  Automation.function1 "Add"
                       [ Automation.inString fieldname
                       , Automation.inInt32 compOp
                       , Automation.inVariant values
                       , Automation.inVariant isUnique
                       ]
                       Automation.outIDispatch

remove :: a1
       -> IOAdFieldFilters a0
       -> Prelude.IO Prelude.Bool
remove subscript =
  Automation.function1 "Remove"
                       [Automation.inVariant subscript]
                       Automation.outBool

item3 :: (Automation.Variant a1)
      => a1
      -> IOAdFieldFilters a0
      -> Prelude.IO (Automation.IDispatch ())
item3 index =
  Automation.function1 "item"
                       [Automation.inVariant index]
                       Automation.outIDispatch

-- --------------------------------------------------
-- 
-- coclass OAdFieldFilters
-- 
--   implements: IOAdFieldFilters
-- --------------------------------------------------
clsidOAdFieldFilters :: Com.CLSID
clsidOAdFieldFilters =
  Com.mkCLSID "{24A57420-3F6C-11D1-B2C0-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdFilterNode
-- 
-- --------------------------------------------------
data IOAdFilterNode_ a = IOAdFilterNode__ 
type IOAdFilterNode a = Automation.IDispatch (IOAdFilterNode_ a)
iidIOAdFilterNode :: Com.IID (IOAdFilterNode ())
iidIOAdFilterNode =
  Com.mkIID "{24A57421-3F6C-11D1-B2C0-00A0C9851B52}"

getFieldFiltersRecursive :: IOAdFilterNode a0
                         -> Prelude.IO (Automation.IDispatch ())
getFieldFiltersRecursive =
  Automation.propertyGet "FieldFiltersRecursive"
                         []
                         Automation.outIDispatch

setFieldFiltersRecursive :: Automation.IDispatch a0
                         -> IOAdFilterNode a1
                         -> Prelude.IO ()
setFieldFiltersRecursive prop =
  Automation.propertySet "FieldFiltersRecursive"
                         [Automation.inIDispatch prop]

getFieldFilters :: IOAdFilterNode a0
                -> Prelude.IO (Automation.IDispatch ())
getFieldFilters =
  Automation.propertyGet "FieldFilters"
                         []
                         Automation.outIDispatch

setFieldFilters :: Automation.IDispatch a0
                -> IOAdFilterNode a1
                -> Prelude.IO ()
setFieldFilters prop =
  Automation.propertySet "FieldFilters"
                         [Automation.inIDispatch prop]

getChildCount :: IOAdFilterNode a0
              -> Prelude.IO Int.Int32
getChildCount =
  Automation.propertyGet "ChildCount"
                         []
                         Automation.outInt32

setChildCount :: Int.Int32
              -> IOAdFilterNode a0
              -> Prelude.IO ()
setChildCount prop =
  Automation.propertySet "ChildCount"
                         [Automation.inInt32 prop]

getParent :: IOAdFilterNode a0
          -> Prelude.IO (Automation.IDispatch ())
getParent =
  Automation.propertyGet "parent"
                         []
                         Automation.outIDispatch

setParent :: Automation.IDispatch a0
          -> IOAdFilterNode a1
          -> Prelude.IO ()
setParent prop =
  Automation.propertySet "parent"
                         [Automation.inIDispatch prop]

getBoolOp :: IOAdFilterNode a0
          -> Prelude.IO Int.Int32
getBoolOp =
  Automation.propertyGet "boolOp"
                         []
                         Automation.outInt32

setBoolOp :: Int.Int32
          -> IOAdFilterNode a0
          -> Prelude.IO ()
setBoolOp prop =
  Automation.propertySet "boolOp"
                         [Automation.inInt32 prop]

addChild :: Int.Int32
         -> IOAdFilterNode a0
         -> Prelude.IO (Automation.IDispatch ())
addChild boolOp =
  Automation.function1 "AddChild"
                       [Automation.inInt32 boolOp]
                       Automation.outIDispatch

getChild :: Int.Int16
         -> IOAdFilterNode a0
         -> Prelude.IO (Automation.IDispatch ())
getChild n =
  Automation.function1 "GetChild"
                       [Automation.inInt16 n]
                       Automation.outIDispatch

deleteChild :: a1
            -> IOAdFilterNode a0
            -> Prelude.IO ()
deleteChild index =
  Automation.method0 "DeleteChild"
                     [Automation.inVariant index]

-- --------------------------------------------------
-- 
-- coclass OAdFilterNode
-- 
--   implements: IOAdFilterNode
-- --------------------------------------------------
clsidOAdFilterNode :: Com.CLSID
clsidOAdFilterNode =
  Com.mkCLSID "{24A5742F-3F6C-11D1-B2C0-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdQueryFieldDefs
-- 
-- --------------------------------------------------
data IOAdQueryFieldDefs_ a = IOAdQueryFieldDefs__ 
type IOAdQueryFieldDefs a = Automation.IDispatch (IOAdQueryFieldDefs_ a)
iidIOAdQueryFieldDefs :: Com.IID (IOAdQueryFieldDefs ())
iidIOAdQueryFieldDefs =
  Com.mkIID "{24A57433-3F6C-11D1-B2C0-00A0C9851B52}"

getNewEnum4 :: IOAdQueryFieldDefs a0
            -> Prelude.IO (Com.IUnknown ())
getNewEnum4 =
  Automation.propertyGet "_NewEnum"
                         []
                         Automation.outIUnknown

setNewEnum4 :: Com.IUnknown a0
            -> IOAdQueryFieldDefs a1
            -> Prelude.IO ()
setNewEnum4 prop =
  Automation.propertySet "_NewEnum"
                         [Automation.inIUnknown prop]

getCount4 :: IOAdQueryFieldDefs a0
          -> Prelude.IO Int.Int32
getCount4 =
  Automation.propertyGet "Count"
                         []
                         Automation.outInt32

setCount4 :: Int.Int32
          -> IOAdQueryFieldDefs a0
          -> Prelude.IO ()
setCount4 prop =
  Automation.propertySet "Count"
                         [Automation.inInt32 prop]

add1 :: a1
     -> IOAdQueryFieldDefs a0
     -> Prelude.IO (Automation.IDispatch ())
add1 item4 =
  Automation.function1 "Add"
                       [Automation.inVariant item4]
                       Automation.outIDispatch

addUniqueKey :: IOAdQueryFieldDefs a0
             -> Prelude.IO (Automation.IDispatch ())
addUniqueKey =
  Automation.function1 "AddUniqueKey"
                       []
                       Automation.outIDispatch

remove0 :: a1
        -> IOAdQueryFieldDefs a0
        -> Prelude.IO Prelude.Bool
remove0 subscript =
  Automation.function1 "Remove"
                       [Automation.inVariant subscript]
                       Automation.outBool

item4 :: (Automation.Variant a1)
      => a1
      -> IOAdQueryFieldDefs a0
      -> Prelude.IO (Automation.IDispatch ())
item4 index =
  Automation.function1 "item"
                       [Automation.inVariant index]
                       Automation.outIDispatch

-- --------------------------------------------------
-- 
-- coclass OAdQueryFieldDefs
-- 
--   implements: IOAdQueryFieldDefs
-- --------------------------------------------------
clsidOAdQueryFieldDefs :: Com.CLSID
clsidOAdQueryFieldDefs =
  Com.mkCLSID "{24A57441-3F6C-11D1-B2C0-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdQueryDefs
-- 
-- --------------------------------------------------
data IOAdQueryDefs_ a = IOAdQueryDefs__ 
type IOAdQueryDefs a = Automation.IDispatch (IOAdQueryDefs_ a)
iidIOAdQueryDefs :: Com.IID (IOAdQueryDefs ())
iidIOAdQueryDefs =
  Com.mkIID "{24A57442-3F6C-11D1-B2C0-00A0C9851B52}"

getNewEnum5 :: IOAdQueryDefs a0
            -> Prelude.IO (Com.IUnknown ())
getNewEnum5 =
  Automation.propertyGet "_NewEnum"
                         []
                         Automation.outIUnknown

setNewEnum5 :: Com.IUnknown a0
            -> IOAdQueryDefs a1
            -> Prelude.IO ()
setNewEnum5 prop =
  Automation.propertySet "_NewEnum"
                         [Automation.inIUnknown prop]

getCount5 :: IOAdQueryDefs a0
          -> Prelude.IO Int.Int32
getCount5 =
  Automation.propertyGet "Count"
                         []
                         Automation.outInt32

setCount5 :: Int.Int32
          -> IOAdQueryDefs a0
          -> Prelude.IO ()
setCount5 prop =
  Automation.propertySet "Count"
                         [Automation.inInt32 prop]

add2 :: Prelude.String
     -> IOAdQueryDefs a0
     -> Prelude.IO (Automation.IDispatch ())
add2 primaryEntityDefName =
  Automation.function1 "Add"
                       [Automation.inString primaryEntityDefName]
                       Automation.outIDispatch

load0 :: Prelude.String
      -> IOAdQueryDefs a0
      -> Prelude.IO (Automation.IDispatch ())
load0 filename =
  Automation.function1 "Load"
                       [Automation.inString filename]
                       Automation.outIDispatch

remove1 :: a1
        -> IOAdQueryDefs a0
        -> Prelude.IO Prelude.Bool
remove1 subscript =
  Automation.function1 "Remove"
                       [Automation.inVariant subscript]
                       Automation.outBool

item5 :: (Automation.Variant a1)
      => a1
      -> IOAdQueryDefs a0
      -> Prelude.IO (Automation.IDispatch ())
item5 index =
  Automation.function1 "item"
                       [Automation.inVariant index]
                       Automation.outIDispatch

-- --------------------------------------------------
-- 
-- coclass OAdQueryDefs
-- 
--   implements: IOAdQueryDefs
-- --------------------------------------------------
clsidOAdQueryDefs :: Com.CLSID
clsidOAdQueryDefs =
  Com.mkCLSID "{24A57450-3F6C-11D1-B2C0-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdQueryFilterNode
-- 
-- --------------------------------------------------
data IOAdQueryFilterNode_ a = IOAdQueryFilterNode__ 
type IOAdQueryFilterNode a = Automation.IDispatch (IOAdQueryFilterNode_ a)
iidIOAdQueryFilterNode :: Com.IID (IOAdQueryFilterNode ())
iidIOAdQueryFilterNode =
  Com.mkIID "{3A8CCF40-4F1B-11D1-B2DD-00A0C9851B52}"

buildFilterOperator0 :: Int.Int32
                     -> IOAdQueryFilterNode a0
                     -> Prelude.IO (Automation.IDispatch ())
buildFilterOperator0 bool_op =
  Automation.function1 "BuildFilterOperator"
                       [Automation.inInt32 bool_op]
                       Automation.outIDispatch

buildFilter :: Prelude.String
            -> Int.Int32
            -> a1
            -> IOAdQueryFilterNode a0
            -> Prelude.IO ()
buildFilter fieldPath comp_op value =
  Automation.method0 "BuildFilter"
                     [ Automation.inString fieldPath
                     , Automation.inInt32 comp_op
                     , Automation.inVariant value
                     ]

-- --------------------------------------------------
-- 
-- coclass OADQUERYFILTERNODE
-- 
--   implements: IOAdQueryFilterNode
-- --------------------------------------------------
clsidOADQUERYFILTERNODE :: Com.CLSID
clsidOADQUERYFILTERNODE =
  Com.mkCLSID "{3A8CCF50-4F1B-11D1-B2DD-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IWkspcMgr
-- 
-- --------------------------------------------------
data IWkspcMgr_ a = IWkspcMgr__ 
type IWkspcMgr a = Automation.IDispatch (IWkspcMgr_ a)
iidIWkspcMgr :: Com.IID (IWkspcMgr ())
iidIWkspcMgr = Com.mkIID "{C5330130-ECA3-11D0-82B3-00A0C911F0B7}"

getIsRefreshOnGet :: IWkspcMgr a0
                  -> Prelude.IO Prelude.Bool
getIsRefreshOnGet =
  Automation.propertyGet "IsRefreshOnGet"
                         []
                         Automation.outBool

setIsRefreshOnGet :: Prelude.Bool
                  -> IWkspcMgr a0
                  -> Prelude.IO ()
setIsRefreshOnGet prop =
  Automation.propertySet "IsRefreshOnGet"
                         [Automation.inBool prop]

setSession :: Automation.IDispatch a1
           -> IWkspcMgr a0
           -> Prelude.IO Prelude.Bool
setSession sessionPtr =
  Automation.function1 "SetSession"
                       [Automation.inIDispatch sessionPtr]
                       Automation.outBool

getQueryList :: Int.Int16
             -> IWkspcMgr a0
             -> Prelude.IO a1
getQueryList querySelector =
  Automation.function1 "GetQueryList"
                       [Automation.inInt16 querySelector]
                       Automation.outVariant

getQueryDef :: Prelude.String
            -> IWkspcMgr a0
            -> Prelude.IO (Automation.IDispatch ())
getQueryDef name =
  Automation.function1 "GetQueryDef"
                       [Automation.inString name]
                       Automation.outIDispatch

setUserName :: Prelude.String
            -> IWkspcMgr a0
            -> Prelude.IO ()
setUserName username =
  Automation.method0 "SetUserName"
                     [Automation.inString username]

getChartList :: Int.Int16
             -> IWkspcMgr a0
             -> Prelude.IO a1
getChartList chartSelector =
  Automation.function1 "GetChartList"
                       [Automation.inInt16 chartSelector]
                       Automation.outVariant

getChartDef :: Prelude.String
            -> IWkspcMgr a0
            -> Prelude.IO (Automation.IDispatch ())
getChartDef name =
  Automation.function1 "GetChartDef"
                       [Automation.inString name]
                       Automation.outIDispatch

getChartMgr :: IWkspcMgr a0
            -> Prelude.IO (Automation.IDispatch ())
getChartMgr =
  Automation.function1 "GetChartMgr"
                       []
                       Automation.outIDispatch

getReportList :: Int.Int16
              -> IWkspcMgr a0
              -> Prelude.IO a1
getReportList reportSelector =
  Automation.function1 "GetReportList"
                       [Automation.inInt16 reportSelector]
                       Automation.outVariant

getReportMgr :: Prelude.String
             -> IWkspcMgr a0
             -> Prelude.IO (Automation.IDispatch ())
getReportMgr name =
  Automation.function1 "GetReportMgr"
                       [Automation.inString name]
                       Automation.outIDispatch

normalizeDateTimeString :: Prelude.String
                        -> IWkspcMgr a0
                        -> Prelude.IO a1
normalizeDateTimeString dTStr =
  Automation.function1 "NormalizeDateTimeString"
                       [Automation.inString dTStr]
                       Automation.outVariant

setDateTimeFmtString :: Prelude.String
                     -> IWkspcMgr a0
                     -> Prelude.IO ()
setDateTimeFmtString dTFmtStr =
  Automation.method0 "SetDateTimeFmtString"
                     [Automation.inString dTFmtStr]

validateQueryDefName :: Prelude.String
                     -> Prelude.String
                     -> IWkspcMgr a0
                     -> Prelude.IO ()
validateQueryDefName qdefName qdefPath =
  Automation.method0 "ValidateQueryDefName"
                     [ Automation.inString qdefName
                     , Automation.inString qdefPath
                     ]

saveQueryDef :: Prelude.String
             -> Prelude.String
             -> Automation.IDispatch a1
             -> Prelude.Bool
             -> IWkspcMgr a0
             -> Prelude.IO ()
saveQueryDef qdefName qdefPath pOaqdef overwrite =
  Automation.method0 "SaveQueryDef"
                     [ Automation.inString qdefName
                     , Automation.inString qdefPath
                     , Automation.inIDispatch pOaqdef
                     , Automation.inBool overwrite
                     ]

getAllQueriesList :: IWkspcMgr a0
                  -> Prelude.IO a1
getAllQueriesList =
  Automation.function1 "GetAllQueriesList"
                       []
                       Automation.outVariant

getUserPreferenceBucket :: Int.Int32
                        -> Int.Int32
                        -> IWkspcMgr a0
                        -> Prelude.IO a1
getUserPreferenceBucket key subKey =
  Automation.function1 "GetUserPreferenceBucket"
                       [ Automation.inInt32 key
                       , Automation.inInt32 subKey
                       ]
                       Automation.outVariant

setUserPreferenceBucket :: Int.Int32
                        -> Int.Int32
                        -> Prelude.String
                        -> IWkspcMgr a0
                        -> Prelude.IO a1
setUserPreferenceBucket key subKey data0 =
  Automation.function1 "SetUserPreferenceBucket"
                       [ Automation.inInt32 key
                       , Automation.inInt32 subKey
                       , Automation.inString data0
                       ]
                       Automation.outVariant

deleteQueryDef :: Prelude.String
               -> IWkspcMgr a0
               -> Prelude.IO Prelude.Bool
deleteQueryDef name =
  Automation.function1 "DeleteQueryDef"
                       [Automation.inString name]
                       Automation.outBool

renameQueryDef :: Prelude.String
               -> Prelude.String
               -> IWkspcMgr a0
               -> Prelude.IO Prelude.Bool
renameQueryDef oldName newName =
  Automation.function1 "RenameQueryDef"
                       [ Automation.inString oldName
                       , Automation.inString newName
                       ]
                       Automation.outBool

getStartUpQueries :: IWkspcMgr a0
                  -> Prelude.IO a1
getStartUpQueries =
  Automation.function1 "GetStartUpQueries"
                       []
                       Automation.outVariant

addStartUpQuery :: Prelude.String
                -> IWkspcMgr a0
                -> Prelude.IO ()
addStartUpQuery queryPathName =
  Automation.method0 "AddStartUpQuery"
                     [Automation.inString queryPathName]

removeStartUpQuery :: Prelude.String
                   -> IWkspcMgr a0
                   -> Prelude.IO ()
removeStartUpQuery queryPathName =
  Automation.method0 "RemoveStartUpQuery"
                     [Automation.inString queryPathName]

getStartUpQueryType :: Prelude.String
                    -> IWkspcMgr a0
                    -> Prelude.IO Int.Int16
getStartUpQueryType queryPathName =
  Automation.function1 "GetStartUpQueryType"
                       [Automation.inString queryPathName]
                       Automation.outInt16

getReportFormatList :: IWkspcMgr a0
                    -> Prelude.IO a1
getReportFormatList =
  Automation.function1 "GetReportFormatList"
                       []
                       Automation.outVariant

getReportFormatQueryList :: IWkspcMgr a0
                         -> Prelude.IO a1
getReportFormatQueryList =
  Automation.function1 "GetReportFormatQueryList"
                       []
                       Automation.outVariant

buildReportDef :: IWkspcMgr a0
               -> Prelude.IO (Automation.IDispatch ())
buildReportDef =
  Automation.function1 "BuildReportDef"
                       []
                       Automation.outIDispatch

getReportDef :: Prelude.String
             -> IWkspcMgr a0
             -> Prelude.IO (Automation.IDispatch ())
getReportDef reportDefPathName =
  Automation.function1 "GetReportDef"
                       [Automation.inString reportDefPathName]
                       Automation.outIDispatch

saveReportDef :: Prelude.String
              -> Prelude.String
              -> Automation.IDispatch a1
              -> Prelude.Bool
              -> IWkspcMgr a0
              -> Prelude.IO ()
saveReportDef rdefName rdefPath pOardef overwrite =
  Automation.method0 "SaveReportDef"
                     [ Automation.inString rdefName
                     , Automation.inString rdefPath
                     , Automation.inIDispatch pOardef
                     , Automation.inBool overwrite
                     ]

validateReportDefName :: Prelude.String
                      -> Prelude.String
                      -> IWkspcMgr a0
                      -> Prelude.IO ()
validateReportDefName rdefName rdefPath =
  Automation.method0 "ValidateReportDefName"
                     [ Automation.inString rdefName
                     , Automation.inString rdefPath
                     ]

renameReportDef :: Prelude.String
                -> Prelude.String
                -> IWkspcMgr a0
                -> Prelude.IO Prelude.Bool
renameReportDef oldName newName =
  Automation.function1 "RenameReportDef"
                       [ Automation.inString oldName
                       , Automation.inString newName
                       ]
                       Automation.outBool

deleteReportDef :: Prelude.String
                -> IWkspcMgr a0
                -> Prelude.IO Prelude.Bool
deleteReportDef name =
  Automation.function1 "DeleteReportDef"
                       [Automation.inString name]
                       Automation.outBool

saveQueryDef2 :: Prelude.String
              -> Prelude.String
              -> Automation.IDispatch a1
              -> Prelude.Bool
              -> IWkspcMgr a0
              -> Prelude.IO ()
saveQueryDef2 qdefName qdefPath pOaqdef overwrite =
  Automation.method0 "SaveQueryDef2"
                     [ Automation.inString qdefName
                     , Automation.inString qdefPath
                     , Automation.inIDispatch pOaqdef
                     , Automation.inBool overwrite
                     ]

siteHasMastership0 :: Prelude.String
                   -> IWkspcMgr a0
                   -> Prelude.IO Prelude.Bool
siteHasMastership0 bucketPath =
  Automation.function1 "SiteHasMastership"
                       [Automation.inString bucketPath]
                       Automation.outBool

getSiteExtendedNames0 :: Prelude.String
                      -> IWkspcMgr a0
                      -> Prelude.IO a1
getSiteExtendedNames0 bucketPath =
  Automation.function1 "GetSiteExtendedNames"
                       [Automation.inString bucketPath]
                       Automation.outVariant

renameWorkspaceItem :: Prelude.String
                    -> Prelude.String
                    -> IWkspcMgr a0
                    -> Prelude.IO Prelude.Bool
renameWorkspaceItem oldPath newName =
  Automation.function1 "RenameWorkspaceItem"
                       [ Automation.inString oldPath
                       , Automation.inString newName
                       ]
                       Automation.outBool

getPublicFolderName :: IWkspcMgr a0
                    -> Prelude.IO a1
getPublicFolderName =
  Automation.function1 "GetPublicFolderName"
                       []
                       Automation.outVariant

getPersonalFolderName :: IWkspcMgr a0
                      -> Prelude.IO a1
getPersonalFolderName =
  Automation.function1 "GetPersonalFolderName"
                       []
                       Automation.outVariant

getWorkspaceItemDbIdList :: Int.Int32
                         -> Int.Int32
                         -> Int.Int32
                         -> Prelude.String
                         -> IWkspcMgr a0
                         -> Prelude.IO a1
getWorkspaceItemDbIdList query_selector item_type parent_dbid entdef_name =
  Automation.function1 "GetWorkspaceItemDbIdList"
                       [ Automation.inInt32 query_selector
                       , Automation.inInt32 item_type
                       , Automation.inInt32 parent_dbid
                       , Automation.inString entdef_name
                       ]
                       Automation.outVariant

siteExtendedNameRequired :: Int.Int32
                         -> IWkspcMgr a0
                         -> Prelude.IO Prelude.Bool
siteExtendedNameRequired dbid =
  Automation.function1 "SiteExtendedNameRequired"
                       [Automation.inInt32 dbid]
                       Automation.outBool

getWorkspaceItemName :: Int.Int32
                     -> Int.Int32
                     -> IWkspcMgr a0
                     -> Prelude.IO a1
getWorkspaceItemName dbid extended_option =
  Automation.function1 "GetWorkspaceItemName"
                       [ Automation.inInt32 dbid
                       , Automation.inInt32 extended_option
                       ]
                       Automation.outVariant

getWorkspaceItemSiteExtendedName :: Int.Int32
                                 -> IWkspcMgr a0
                                 -> Prelude.IO a1
getWorkspaceItemSiteExtendedName dbid =
  Automation.function1 "GetWorkspaceItemSiteExtendedName"
                       [Automation.inInt32 dbid]
                       Automation.outVariant

getWorkspaceItemPathName :: Int.Int32
                         -> Int.Int32
                         -> IWkspcMgr a0
                         -> Prelude.IO a1
getWorkspaceItemPathName dbid extended_option =
  Automation.function1 "GetWorkspaceItemPathName"
                       [ Automation.inInt32 dbid
                       , Automation.inInt32 extended_option
                       ]
                       Automation.outVariant

getWorkspaceItemType :: Int.Int32
                     -> IWkspcMgr a0
                     -> Prelude.IO Int.Int32
getWorkspaceItemType dbid =
  Automation.function1 "GetWorkspaceItemType"
                       [Automation.inInt32 dbid]
                       Automation.outInt32

renameWorkspaceItemByDbId :: Int.Int32
                          -> Prelude.String
                          -> IWkspcMgr a0
                          -> Prelude.IO Prelude.Bool
renameWorkspaceItemByDbId dbid newName =
  Automation.function1 "RenameWorkspaceItemByDbId"
                       [ Automation.inInt32 dbid
                       , Automation.inString newName
                       ]
                       Automation.outBool

deleteWorkspaceItemByDbId :: Int.Int32
                          -> IWkspcMgr a0
                          -> Prelude.IO Prelude.Bool
deleteWorkspaceItemByDbId dbid =
  Automation.function1 "DeleteWorkspaceItemByDbId"
                       [Automation.inInt32 dbid]
                       Automation.outBool

getQueryDefByDbId :: Int.Int32
                  -> IWkspcMgr a0
                  -> Prelude.IO (Automation.IDispatch ())
getQueryDefByDbId dbid =
  Automation.function1 "GetQueryDefByDbId"
                       [Automation.inInt32 dbid]
                       Automation.outIDispatch

insertNewQueryDef :: Prelude.String
                  -> Int.Int32
                  -> Automation.IDispatch a1
                  -> IWkspcMgr a0
                  -> Prelude.IO Int.Int32
insertNewQueryDef newName parent_dbid pOaqdef =
  Automation.function1 "InsertNewQueryDef"
                       [ Automation.inString newName
                       , Automation.inInt32 parent_dbid
                       , Automation.inIDispatch pOaqdef
                       ]
                       Automation.outInt32

updateQueryDef :: Int.Int32
               -> Automation.IDispatch a1
               -> IWkspcMgr a0
               -> Prelude.IO ()
updateQueryDef dbid pOaqdef =
  Automation.method0 "UpdateQueryDef"
                     [ Automation.inInt32 dbid
                     , Automation.inIDispatch pOaqdef
                     ]

getChartDefByDbId :: Int.Int32
                  -> IWkspcMgr a0
                  -> Prelude.IO (Automation.IDispatch ())
getChartDefByDbId dbid =
  Automation.function1 "GetChartDefByDbId"
                       [Automation.inInt32 dbid]
                       Automation.outIDispatch

insertNewChartDef :: Prelude.String
                  -> Int.Int32
                  -> Automation.IDispatch a1
                  -> IWkspcMgr a0
                  -> Prelude.IO Int.Int32
insertNewChartDef new_bare_name parent_dbid pOaqdef =
  Automation.function1 "InsertNewChartDef"
                       [ Automation.inString new_bare_name
                       , Automation.inInt32 parent_dbid
                       , Automation.inIDispatch pOaqdef
                       ]
                       Automation.outInt32

updateChartDef :: Int.Int32
               -> Automation.IDispatch a1
               -> IWkspcMgr a0
               -> Prelude.IO ()
updateChartDef dbid pOaqdef =
  Automation.method0 "UpdateChartDef"
                     [ Automation.inInt32 dbid
                     , Automation.inIDispatch pOaqdef
                     ]

getReportMgrByReportDbId :: Int.Int32
                         -> IWkspcMgr a0
                         -> Prelude.IO (Automation.IDispatch ())
getReportMgrByReportDbId report_dbid =
  Automation.function1 "GetReportMgrByReportDbId"
                       [Automation.inInt32 report_dbid]
                       Automation.outIDispatch

getReportFormatQueryDbIdList :: Prelude.String
                             -> IWkspcMgr a0
                             -> Prelude.IO a1
getReportFormatQueryDbIdList entdef_name =
  Automation.function1 "GetReportFormatQueryDbIdList"
                       [Automation.inString entdef_name]
                       Automation.outVariant

getReportDefByDbId :: Int.Int32
                   -> IWkspcMgr a0
                   -> Prelude.IO (Automation.IDispatch ())
getReportDefByDbId dbid =
  Automation.function1 "GetReportDefByDbId"
                       [Automation.inInt32 dbid]
                       Automation.outIDispatch

insertNewReportDef :: Prelude.String
                   -> Int.Int32
                   -> Automation.IDispatch a1
                   -> IWkspcMgr a0
                   -> Prelude.IO Int.Int32
insertNewReportDef newName parent_dbid pOareportDef =
  Automation.function1 "InsertNewReportDef"
                       [ Automation.inString newName
                       , Automation.inInt32 parent_dbid
                       , Automation.inIDispatch pOareportDef
                       ]
                       Automation.outInt32

updateReportDef :: Int.Int32
                -> Automation.IDispatch a1
                -> IWkspcMgr a0
                -> Prelude.IO ()
updateReportDef dbid pOareportDef =
  Automation.method0 "UpdateReportDef"
                     [ Automation.inInt32 dbid
                     , Automation.inIDispatch pOareportDef
                     ]

createWorkspaceFolder :: Int.Int32
                      -> Int.Int32
                      -> Prelude.String
                      -> Int.Int32
                      -> IWkspcMgr a0
                      -> Prelude.IO Int.Int32
createWorkspaceFolder user_id folder_type new_name parent_dbid =
  Automation.function1 "CreateWorkspaceFolder"
                       [ Automation.inInt32 user_id
                       , Automation.inInt32 folder_type
                       , Automation.inString new_name
                       , Automation.inInt32 parent_dbid
                       ]
                       Automation.outInt32

getQueryDbIdList :: Int.Int16
                 -> IWkspcMgr a0
                 -> Prelude.IO a1
getQueryDbIdList querySelector =
  Automation.function1 "GetQueryDbIdList"
                       [Automation.inInt16 querySelector]
                       Automation.outVariant

getChartDbIdList :: Int.Int16
                 -> IWkspcMgr a0
                 -> Prelude.IO a1
getChartDbIdList querySelector =
  Automation.function1 "GetChartDbIdList"
                       [Automation.inInt16 querySelector]
                       Automation.outVariant

getReportDbIdList :: Int.Int16
                  -> IWkspcMgr a0
                  -> Prelude.IO a1
getReportDbIdList reportSelector =
  Automation.function1 "GetReportDbIdList"
                       [Automation.inInt16 reportSelector]
                       Automation.outVariant

getReportFormatDbIdList :: IWkspcMgr a0
                        -> Prelude.IO a1
getReportFormatDbIdList =
  Automation.function1 "GetReportFormatDbIdList"
                       []
                       Automation.outVariant

getWorkspaceItemParentDbId :: Int.Int32
                           -> IWkspcMgr a0
                           -> Prelude.IO Int.Int32
getWorkspaceItemParentDbId dbid =
  Automation.function1 "GetWorkspaceItemParentDbId"
                       [Automation.inInt32 dbid]
                       Automation.outInt32

getReportMgr8 :: Prelude.String
              -> IWkspcMgr a0
              -> Prelude.IO (Automation.IDispatch ())
getReportMgr8 name =
  Automation.function1 "GetReportMgr8"
                       [Automation.inString name]
                       Automation.outIDispatch

getPersonalWebFolderName :: IWkspcMgr a0
                         -> Prelude.IO a1
getPersonalWebFolderName =
  Automation.function1 "GetPersonalWebFolderName"
                       []
                       Automation.outVariant

getUneditedQueries :: Int.Int16
                   -> IWkspcMgr a0
                   -> Prelude.IO a1
getUneditedQueries querySelector =
  Automation.function1 "GetUneditedQueries"
                       [Automation.inInt16 querySelector]
                       Automation.outVariant

getWorkspaceItemMasterReplicaName :: Int.Int32
                                  -> IWkspcMgr a0
                                  -> Prelude.IO a1
getWorkspaceItemMasterReplicaName dbid =
  Automation.function1 "GetWorkspaceItemMasterReplicaName"
                       [Automation.inInt32 dbid]
                       Automation.outVariant

setWorkspaceItemMasterReplica :: Prelude.String
                              -> Int.Int32
                              -> IWkspcMgr a0
                              -> Prelude.IO ()
setWorkspaceItemMasterReplica replicaName dbid =
  Automation.method0 "SetWorkspaceItemMasterReplica"
                     [ Automation.inString replicaName
                     , Automation.inInt32 dbid
                     ]

getPublicFolder :: IWkspcMgr a0
                -> Prelude.IO (Automation.IDispatch ())
getPublicFolder =
  Automation.function1 "GetPublicFolder"
                       []
                       Automation.outIDispatch

getPersonalFolder :: IWkspcMgr a0
                  -> Prelude.IO (Automation.IDispatch ())
getPersonalFolder =
  Automation.function1 "GetPersonalFolder"
                       []
                       Automation.outIDispatch

getPersonalFolderForUser :: Prelude.String
                         -> IWkspcMgr a0
                         -> Prelude.IO (Automation.IDispatch ())
getPersonalFolderForUser username =
  Automation.function1 "GetPersonalFolderForUser"
                       [Automation.inString username]
                       Automation.outIDispatch

getFolder :: Prelude.String
          -> IWkspcMgr a0
          -> Prelude.IO (Automation.IDispatch ())
getFolder pathname =
  Automation.function1 "GetFolder"
                       [Automation.inString pathname]
                       Automation.outIDispatch

getFolderByDbId :: Int.Int32
                -> IWkspcMgr a0
                -> Prelude.IO (Automation.IDispatch ())
getFolderByDbId dbid =
  Automation.function1 "GetFolderByDbId"
                       [Automation.inInt32 dbid]
                       Automation.outIDispatch

refresh :: IWkspcMgr a0
        -> Prelude.IO ()
refresh =
  Automation.method0 "Refresh"
                     []

-- --------------------------------------------------
-- 
-- coclass WORKSPACE
-- 
--   implements: IWkspcMgr
-- --------------------------------------------------
clsidWORKSPACE :: Com.CLSID
clsidWORKSPACE =
  Com.mkCLSID "{C5330131-ECA3-11D0-82B3-00A0C911F0B7}"

-- --------------------------------------------------
-- 
-- dispinterface IChartMgr
-- 
-- --------------------------------------------------
data IChartMgr_ a = IChartMgr__ 
type IChartMgr a = Automation.IDispatch (IChartMgr_ a)
iidIChartMgr :: Com.IID (IChartMgr ())
iidIChartMgr = Com.mkIID "{4C183050-FF8F-11D0-A051-00A0C9233DE1}"

getHeight :: IChartMgr a0
          -> Prelude.IO Int.Int16
getHeight =
  Automation.propertyGet "Height"
                         []
                         Automation.outInt16

setHeight :: Int.Int16
          -> IChartMgr a0
          -> Prelude.IO ()
setHeight prop =
  Automation.propertySet "Height"
                         [Automation.inInt16 prop]

getWidth :: IChartMgr a0
         -> Prelude.IO Int.Int16
getWidth =
  Automation.propertyGet "Width"
                         []
                         Automation.outInt16

setWidth :: Int.Int16
         -> IChartMgr a0
         -> Prelude.IO ()
setWidth prop =
  Automation.propertySet "Width"
                         [Automation.inInt16 prop]

getInterlaced :: IChartMgr a0
              -> Prelude.IO Prelude.Bool
getInterlaced =
  Automation.propertyGet "Interlaced"
                         []
                         Automation.outBool

setInterlaced :: Prelude.Bool
              -> IChartMgr a0
              -> Prelude.IO ()
setInterlaced prop =
  Automation.propertySet "Interlaced"
                         [Automation.inBool prop]

getOptimizeCompression :: IChartMgr a0
                       -> Prelude.IO Prelude.Bool
getOptimizeCompression =
  Automation.propertyGet "OptimizeCompression"
                         []
                         Automation.outBool

setOptimizeCompression :: Prelude.Bool
                       -> IChartMgr a0
                       -> Prelude.IO ()
setOptimizeCompression prop =
  Automation.propertySet "OptimizeCompression"
                         [Automation.inBool prop]

getGrayScale :: IChartMgr a0
             -> Prelude.IO Prelude.Bool
getGrayScale =
  Automation.propertyGet "GrayScale"
                         []
                         Automation.outBool

setGrayScale :: Prelude.Bool
             -> IChartMgr a0
             -> Prelude.IO ()
setGrayScale prop =
  Automation.propertySet "GrayScale"
                         [Automation.inBool prop]

getProgressive :: IChartMgr a0
               -> Prelude.IO Prelude.Bool
getProgressive =
  Automation.propertyGet "Progressive"
                         []
                         Automation.outBool

setProgressive :: Prelude.Bool
               -> IChartMgr a0
               -> Prelude.IO ()
setProgressive prop =
  Automation.propertySet "Progressive"
                         [Automation.inBool prop]

getQuality :: IChartMgr a0
           -> Prelude.IO Int.Int16
getQuality =
  Automation.propertyGet "Quality"
                         []
                         Automation.outInt16

setQuality :: Int.Int16
           -> IChartMgr a0
           -> Prelude.IO ()
setQuality prop =
  Automation.propertySet "Quality"
                         [Automation.inInt16 prop]

setResultSet :: Automation.IDispatch a1
             -> IChartMgr a0
             -> Prelude.IO ()
setResultSet lpResultSet =
  Automation.method0 "SetResultSet"
                     [Automation.inIDispatch lpResultSet]

makeJPEG :: Prelude.String
         -> IChartMgr a0
         -> Prelude.IO Prelude.Bool
makeJPEG pszPathName =
  Automation.function1 "MakeJPEG"
                       [Automation.inString pszPathName]
                       Automation.outBool

makePNG :: Prelude.String
        -> IChartMgr a0
        -> Prelude.IO Prelude.Bool
makePNG pszPathName =
  Automation.function1 "MakePNG"
                       [Automation.inString pszPathName]
                       Automation.outBool

-- --------------------------------------------------
-- 
-- coclass CHARTMGR
-- 
--   implements: IChartMgr
-- --------------------------------------------------
clsidCHARTMGR :: Com.CLSID
clsidCHARTMGR =
  Com.mkCLSID "{4C183051-FF8F-11D0-A051-00A0C9233DE1}"

-- --------------------------------------------------
-- 
-- dispinterface IReportMgr
-- 
-- --------------------------------------------------
data IReportMgr_ a = IReportMgr__ 
type IReportMgr a = Automation.IDispatch (IReportMgr_ a)
iidIReportMgr :: Com.IID (IReportMgr ())
iidIReportMgr = Com.mkIID "{3ACE8EF0-52FB-11D1-8C59-00A0C92337E5}"

getQueryDef0 :: IReportMgr a0
             -> Prelude.IO (Automation.IDispatch ())
getQueryDef0 =
  Automation.function1 "GetQueryDef"
                       []
                       Automation.outIDispatch

setHTMLFileName :: Prelude.String
                -> IReportMgr a0
                -> Prelude.IO ()
setHTMLFileName hTMLPath =
  Automation.method0 "SetHTMLFileName"
                     [Automation.inString hTMLPath]

executeReport :: IReportMgr a0
              -> Prelude.IO ()
executeReport =
  Automation.method0 "ExecuteReport"
                     []

getReportPrintJobStatus :: IReportMgr a0
                        -> Prelude.IO Int.Int32
getReportPrintJobStatus =
  Automation.function1 "GetReportPrintJobStatus"
                       []
                       Automation.outInt32

setFormat :: Int.Int32
          -> IReportMgr a0
          -> Prelude.IO ()
setFormat format =
  Automation.method0 "SetFormat"
                     [Automation.inInt32 format]

-- --------------------------------------------------
-- 
-- coclass ReportMgr
-- 
--   implements: IReportMgr
-- --------------------------------------------------
clsidReportMgr :: Com.CLSID
clsidReportMgr =
  Com.mkCLSID "{3ACE8EF3-52FB-11D1-8C59-00A0C92337E5}"

data OLEWKSPCERROR
 = OLEWKSPC_E_NOSESSIONSET
 | OLEWKSPC_E_SESSIONALREADYSET
 | OLEWKSPC_E_CANTCREATESESSION
 | OLEWKSPC_E_CANTCREATEWORKSPACE
 | OLEWKSPC_E_QUERYLISTFAILURE
 | OLEWKSPC_E_QUERYLISTSAFEARRAYFAILURE
 | OLEWKSPC_E_QUERYDEFNOTFOUND
 | OLEWKSPC_E_GETQUERYDEFFAILURE
 | OLEWKSPC_E_QUERYDEFGETBUCKETFAILURE
 | OLEWKSPC_E_QUERYDEFBUCKETGETQUERYDEFFAILURE
 | OLEWKSPC_E_CHARTLISTFAILURE
 | OLEWKSPC_E_CHARTLISTSAFEARRAYFAILURE
 | OLEWKSPC_E_CHARTDEFNOTFOUND
 | OLEWKSPC_E_GETCHARTDEFFAILURE
 | OLEWKSPC_E_CHARTDEFGETBUCKETFAILURE
 | OLEWKSPC_E_CHARTDEFBUCKETGETCHARTDEFFAILURE
 | OLEWKSPC_E_REPORTLISTFAILURE
 | OLEWKSPC_E_REPORTLISTSAFEARRAYFAILURE
 | OLEWKSPC_E_CANTCREATEREPORTMGR
 | OLEWKSPC_E_REPORTMGRNOTFOUND
 | OLEWKSPC_E_GETREPORTMGRFAILURE
 | OLEWKSPC_E_REPORTMGRGETBUCKETFAILURE
 | OLEWKSPC_E_REPORTMGRBUCKETGETREPORTFAILURE
 | OLEWKSPC_E_REPORTMGR_EXEC_EMPTYHTMLFILENAME
 | OLEWKSPC_E_REPORTMGR_EXEC_RPTENGINEINUSE
 | OLEWKSPC_E_REPORTMGR_EXEC_RPT_EXTRACT_FAILURE
 | OLEWKSPC_E_REPORTMGR_EXEC_RPT_ENGINE_SET_REPORT
 | OLEWKSPC_E_REPORTMGR_EXEC_CADORS_CREATE_FAILURE
 | OLEWKSPC_E_REPORTMGR_EXEC_ATTACH_RS_FAILURE
 | OLEWKSPC_E_REPORTMGR_EXEC_CHECK_FILEPATH_FAILURE
 | OLEWKSPC_E_REPORTMGR_EXEC_ENGINE_FAILURE
 | OLEWKSPC_E_REPORTMGR_EXEC_CAUGHT_EXCEPTION_FAILURE
 | OLEWKSPC_E_NORMALIZEDATETIME_FAIL
 | OLEWKSPC_E_NORMALIZEDATETIME_NULL_INPUT_FAIL
 | OLEWKSPC_E_NORMALIZEDATETIME_PARSE_FAIL
 | OLEWKSPC_E_NORMALIZEDATETIME_FORMAT_FAIL
 | OLEWKSPC_E_NORMALIZEDATETIME_EXCEPTION_FAIL
 | OLEWKSPC_E_QUERYNAMEEXISTS
 | OLEWKSPC_E_INVALIDQUERYNAME
 | OLEWKSPC_E_QUERYDEFSAVEBUCKETFAILURE
 | OLEWKSPC_E_DATABASE_UPGRADEINSTALLPACKAGEQUERYFAILURE
 
instance Prelude.Enum (OLEWKSPCERROR) where
  fromEnum v =
    case v of
       OLEWKSPC_E_NOSESSIONSET -> 740
       OLEWKSPC_E_SESSIONALREADYSET -> 741
       OLEWKSPC_E_CANTCREATESESSION -> 742
       OLEWKSPC_E_CANTCREATEWORKSPACE -> 743
       OLEWKSPC_E_QUERYLISTFAILURE -> 744
       OLEWKSPC_E_QUERYLISTSAFEARRAYFAILURE -> 745
       OLEWKSPC_E_QUERYDEFNOTFOUND -> 746
       OLEWKSPC_E_GETQUERYDEFFAILURE -> 747
       OLEWKSPC_E_QUERYDEFGETBUCKETFAILURE -> 748
       OLEWKSPC_E_QUERYDEFBUCKETGETQUERYDEFFAILURE -> 749
       OLEWKSPC_E_CHARTLISTFAILURE -> 750
       OLEWKSPC_E_CHARTLISTSAFEARRAYFAILURE -> 751
       OLEWKSPC_E_CHARTDEFNOTFOUND -> 752
       OLEWKSPC_E_GETCHARTDEFFAILURE -> 753
       OLEWKSPC_E_CHARTDEFGETBUCKETFAILURE -> 754
       OLEWKSPC_E_CHARTDEFBUCKETGETCHARTDEFFAILURE -> 755
       OLEWKSPC_E_REPORTLISTFAILURE -> 756
       OLEWKSPC_E_REPORTLISTSAFEARRAYFAILURE -> 757
       OLEWKSPC_E_CANTCREATEREPORTMGR -> 758
       OLEWKSPC_E_REPORTMGRNOTFOUND -> 759
       OLEWKSPC_E_GETREPORTMGRFAILURE -> 760
       OLEWKSPC_E_REPORTMGRGETBUCKETFAILURE -> 761
       OLEWKSPC_E_REPORTMGRBUCKETGETREPORTFAILURE -> 762
       OLEWKSPC_E_REPORTMGR_EXEC_EMPTYHTMLFILENAME -> 763
       OLEWKSPC_E_REPORTMGR_EXEC_RPTENGINEINUSE -> 764
       OLEWKSPC_E_REPORTMGR_EXEC_RPT_EXTRACT_FAILURE -> 765
       OLEWKSPC_E_REPORTMGR_EXEC_RPT_ENGINE_SET_REPORT -> 766
       OLEWKSPC_E_REPORTMGR_EXEC_CADORS_CREATE_FAILURE -> 767
       OLEWKSPC_E_REPORTMGR_EXEC_ATTACH_RS_FAILURE -> 768
       OLEWKSPC_E_REPORTMGR_EXEC_CHECK_FILEPATH_FAILURE -> 769
       OLEWKSPC_E_REPORTMGR_EXEC_ENGINE_FAILURE -> 770
       OLEWKSPC_E_REPORTMGR_EXEC_CAUGHT_EXCEPTION_FAILURE -> 771
       OLEWKSPC_E_NORMALIZEDATETIME_FAIL -> 772
       OLEWKSPC_E_NORMALIZEDATETIME_NULL_INPUT_FAIL -> 773
       OLEWKSPC_E_NORMALIZEDATETIME_PARSE_FAIL -> 774
       OLEWKSPC_E_NORMALIZEDATETIME_FORMAT_FAIL -> 775
       OLEWKSPC_E_NORMALIZEDATETIME_EXCEPTION_FAIL -> 776
       OLEWKSPC_E_QUERYNAMEEXISTS -> 777
       OLEWKSPC_E_INVALIDQUERYNAME -> 778
       OLEWKSPC_E_QUERYDEFSAVEBUCKETFAILURE -> 779
       OLEWKSPC_E_DATABASE_UPGRADEINSTALLPACKAGEQUERYFAILURE -> 780
  
  toEnum v =
    case v of
       740 -> OLEWKSPC_E_NOSESSIONSET
       741 -> OLEWKSPC_E_SESSIONALREADYSET
       742 -> OLEWKSPC_E_CANTCREATESESSION
       743 -> OLEWKSPC_E_CANTCREATEWORKSPACE
       744 -> OLEWKSPC_E_QUERYLISTFAILURE
       745 -> OLEWKSPC_E_QUERYLISTSAFEARRAYFAILURE
       746 -> OLEWKSPC_E_QUERYDEFNOTFOUND
       747 -> OLEWKSPC_E_GETQUERYDEFFAILURE
       748 -> OLEWKSPC_E_QUERYDEFGETBUCKETFAILURE
       749 -> OLEWKSPC_E_QUERYDEFBUCKETGETQUERYDEFFAILURE
       750 -> OLEWKSPC_E_CHARTLISTFAILURE
       751 -> OLEWKSPC_E_CHARTLISTSAFEARRAYFAILURE
       752 -> OLEWKSPC_E_CHARTDEFNOTFOUND
       753 -> OLEWKSPC_E_GETCHARTDEFFAILURE
       754 -> OLEWKSPC_E_CHARTDEFGETBUCKETFAILURE
       755 -> OLEWKSPC_E_CHARTDEFBUCKETGETCHARTDEFFAILURE
       756 -> OLEWKSPC_E_REPORTLISTFAILURE
       757 -> OLEWKSPC_E_REPORTLISTSAFEARRAYFAILURE
       758 -> OLEWKSPC_E_CANTCREATEREPORTMGR
       759 -> OLEWKSPC_E_REPORTMGRNOTFOUND
       760 -> OLEWKSPC_E_GETREPORTMGRFAILURE
       761 -> OLEWKSPC_E_REPORTMGRGETBUCKETFAILURE
       762 -> OLEWKSPC_E_REPORTMGRBUCKETGETREPORTFAILURE
       763 -> OLEWKSPC_E_REPORTMGR_EXEC_EMPTYHTMLFILENAME
       764 -> OLEWKSPC_E_REPORTMGR_EXEC_RPTENGINEINUSE
       765 -> OLEWKSPC_E_REPORTMGR_EXEC_RPT_EXTRACT_FAILURE
       766 -> OLEWKSPC_E_REPORTMGR_EXEC_RPT_ENGINE_SET_REPORT
       767 -> OLEWKSPC_E_REPORTMGR_EXEC_CADORS_CREATE_FAILURE
       768 -> OLEWKSPC_E_REPORTMGR_EXEC_ATTACH_RS_FAILURE
       769 -> OLEWKSPC_E_REPORTMGR_EXEC_CHECK_FILEPATH_FAILURE
       770 -> OLEWKSPC_E_REPORTMGR_EXEC_ENGINE_FAILURE
       771 -> OLEWKSPC_E_REPORTMGR_EXEC_CAUGHT_EXCEPTION_FAILURE
       772 -> OLEWKSPC_E_NORMALIZEDATETIME_FAIL
       773 -> OLEWKSPC_E_NORMALIZEDATETIME_NULL_INPUT_FAIL
       774 -> OLEWKSPC_E_NORMALIZEDATETIME_PARSE_FAIL
       775 -> OLEWKSPC_E_NORMALIZEDATETIME_FORMAT_FAIL
       776 -> OLEWKSPC_E_NORMALIZEDATETIME_EXCEPTION_FAIL
       777 -> OLEWKSPC_E_QUERYNAMEEXISTS
       778 -> OLEWKSPC_E_INVALIDQUERYNAME
       779 -> OLEWKSPC_E_QUERYDEFSAVEBUCKETFAILURE
       780 -> OLEWKSPC_E_DATABASE_UPGRADEINSTALLPACKAGEQUERYFAILURE
       _ -> Prelude.error "unmarshallOLEWKSPCERROR: illegal enum value "
  
data OLEWKSPCQUERYTYPE
 = OLEWKSPCQUERIESNONE
 | OLEWKSPCSYSTEMQUERIES
 | OLEWKSPCUSERQUERIES
 | OLEWKSPCBOTHQUERIES
 deriving (Prelude.Enum)
data OLEWKSPCREPORTTYPE
 = OLEWKSPCREPORTSNONE
 | OLEWKSPCSYSTEMREPORTS
 | OLEWKSPCUSERREPORTS
 | OLEWKSPCBOTHREPORTS
 deriving (Prelude.Enum)
-- --------------------------------------------------
-- 
-- dispinterface IOAdUser
-- 
-- --------------------------------------------------
data IOAdUser_ a = IOAdUser__ 
type IOAdUser a = Automation.IDispatch (IOAdUser_ a)
iidIOAdUser :: Com.IID (IOAdUser ())
iidIOAdUser = Com.mkIID "{B48005E4-CF24-11D1-B37A-00A0C9851B52}"

getAllSubscribedDatabases :: IOAdUser a0
                          -> Prelude.IO (Automation.IDispatch ())
getAllSubscribedDatabases =
  Automation.propertyGet "AllSubscribedDatabases"
                         []
                         Automation.outIDispatch

setAllSubscribedDatabases :: Automation.IDispatch a0
                          -> IOAdUser a1
                          -> Prelude.IO ()
setAllSubscribedDatabases prop =
  Automation.propertySet "AllSubscribedDatabases"
                         [Automation.inIDispatch prop]

getSubscribedDatabases :: IOAdUser a0
                       -> Prelude.IO (Automation.IDispatch ())
getSubscribedDatabases =
  Automation.propertyGet "SubscribedDatabases"
                         []
                         Automation.outIDispatch

setSubscribedDatabases :: Automation.IDispatch a0
                       -> IOAdUser a1
                       -> Prelude.IO ()
setSubscribedDatabases prop =
  Automation.propertySet "SubscribedDatabases"
                         [Automation.inIDispatch prop]

getGroups :: IOAdUser a0
          -> Prelude.IO (Automation.IDispatch ())
getGroups =
  Automation.propertyGet "Groups"
                         []
                         Automation.outIDispatch

setGroups :: Automation.IDispatch a0
          -> IOAdUser a1
          -> Prelude.IO ()
setGroups prop =
  Automation.propertySet "Groups"
                         [Automation.inIDispatch prop]

getActive :: IOAdUser a0
          -> Prelude.IO Prelude.Bool
getActive =
  Automation.propertyGet "Active"
                         []
                         Automation.outBool

setActive :: Prelude.Bool
          -> IOAdUser a0
          -> Prelude.IO ()
setActive prop =
  Automation.propertySet "Active"
                         [Automation.inBool prop]

getUserMaintainer :: IOAdUser a0
                  -> Prelude.IO Prelude.Bool
getUserMaintainer =
  Automation.propertyGet "UserMaintainer"
                         []
                         Automation.outBool

setUserMaintainer :: Prelude.Bool
                  -> IOAdUser a0
                  -> Prelude.IO ()
setUserMaintainer prop =
  Automation.propertySet "UserMaintainer"
                         [Automation.inBool prop]

getAppBuilder :: IOAdUser a0
              -> Prelude.IO Prelude.Bool
getAppBuilder =
  Automation.propertyGet "AppBuilder"
                         []
                         Automation.outBool

setAppBuilder :: Prelude.Bool
              -> IOAdUser a0
              -> Prelude.IO ()
setAppBuilder prop =
  Automation.propertySet "AppBuilder"
                         [Automation.inBool prop]

getSuperUser :: IOAdUser a0
             -> Prelude.IO Prelude.Bool
getSuperUser =
  Automation.propertyGet "SuperUser"
                         []
                         Automation.outBool

setSuperUser :: Prelude.Bool
             -> IOAdUser a0
             -> Prelude.IO ()
setSuperUser prop =
  Automation.propertySet "SuperUser"
                         [Automation.inBool prop]

getPassword0 :: IOAdUser a0
             -> Prelude.IO Prelude.String
getPassword0 =
  Automation.propertyGet "password"
                         []
                         Automation.outString

setPassword :: Prelude.String
            -> IOAdUser a0
            -> Prelude.IO ()
setPassword prop =
  Automation.propertySet "password"
                         [Automation.inString prop]

getMiscInfo :: IOAdUser a0
            -> Prelude.IO Prelude.String
getMiscInfo =
  Automation.propertyGet "MiscInfo"
                         []
                         Automation.outString

setMiscInfo :: Prelude.String
            -> IOAdUser a0
            -> Prelude.IO ()
setMiscInfo prop =
  Automation.propertySet "MiscInfo"
                         [Automation.inString prop]

getPhone :: IOAdUser a0
         -> Prelude.IO Prelude.String
getPhone =
  Automation.propertyGet "Phone"
                         []
                         Automation.outString

setPhone :: Prelude.String
         -> IOAdUser a0
         -> Prelude.IO ()
setPhone prop =
  Automation.propertySet "Phone"
                         [Automation.inString prop]

getFullName :: IOAdUser a0
            -> Prelude.IO Prelude.String
getFullName =
  Automation.propertyGet "FullName"
                         []
                         Automation.outString

setFullName :: Prelude.String
            -> IOAdUser a0
            -> Prelude.IO ()
setFullName prop =
  Automation.propertySet "FullName"
                         [Automation.inString prop]

getEMail :: IOAdUser a0
         -> Prelude.IO Prelude.String
getEMail =
  Automation.propertyGet "EMail"
                         []
                         Automation.outString

setEMail :: Prelude.String
         -> IOAdUser a0
         -> Prelude.IO ()
setEMail prop =
  Automation.propertySet "EMail"
                         [Automation.inString prop]

getName2 :: IOAdUser a0
         -> Prelude.IO Prelude.String
getName2 =
  Automation.propertyGet "Name"
                         []
                         Automation.outString

setName0 :: Prelude.String
         -> IOAdUser a0
         -> Prelude.IO ()
setName0 prop =
  Automation.propertySet "Name"
                         [Automation.inString prop]

subscribeDatabase :: Automation.IDispatch a1
                  -> IOAdUser a0
                  -> Prelude.IO ()
subscribeDatabase database =
  Automation.method0 "SubscribeDatabase"
                     [Automation.inIDispatch database]

unsubscribeDatabase :: Automation.IDispatch a1
                    -> IOAdUser a0
                    -> Prelude.IO ()
unsubscribeDatabase database =
  Automation.method0 "UnsubscribeDatabase"
                     [Automation.inIDispatch database]

unsubscribeAllDatabases :: IOAdUser a0
                        -> Prelude.IO ()
unsubscribeAllDatabases =
  Automation.method0 "UnsubscribeAllDatabases"
                     []

isSubscribedToAllDatabases :: IOAdUser a0
                           -> Prelude.IO Prelude.Bool
isSubscribedToAllDatabases =
  Automation.function1 "IsSubscribedToAllDatabases"
                       []
                       Automation.outBool

setSubscribedToAllDatabases :: Prelude.Bool
                            -> IOAdUser a0
                            -> Prelude.IO ()
setSubscribedToAllDatabases bIsSubAll =
  Automation.method0 "SetSubscribedToAllDatabases"
                     [Automation.inBool bIsSubAll]

setLoginName :: Prelude.String
             -> Prelude.String
             -> IOAdUser a0
             -> Prelude.IO ()
setLoginName new_name new_password =
  Automation.method0 "SetLoginName"
                     [ Automation.inString new_name
                     , Automation.inString new_password
                     ]

siteHasMastership1 :: IOAdUser a0
                   -> Prelude.IO Prelude.Bool
siteHasMastership1 =
  Automation.function1 "SiteHasMastership"
                       []
                       Automation.outBool

upgradeInfo :: IOAdUser a0
            -> Prelude.IO a1
upgradeInfo =
  Automation.function1 "UpgradeInfo"
                       []
                       Automation.outVariant

setCQAuthentication :: Prelude.String
                    -> IOAdUser a0
                    -> Prelude.IO ()
setCQAuthentication newPW =
  Automation.method0 "SetCQAuthentication"
                     [Automation.inString newPW]

setLDAPAuthentication :: Prelude.String
                      -> IOAdUser a0
                      -> Prelude.IO ()
setLDAPAuthentication lDAP_Login_name =
  Automation.method0 "SetLDAPAuthentication"
                     [Automation.inString lDAP_Login_name]

getAuthenticationMode :: IOAdUser a0
                      -> Prelude.IO Int.Int32
getAuthenticationMode =
  Automation.function1 "GetAuthenticationMode"
                       []
                       Automation.outInt32

setUserPrivilege :: Int.Int32
                 -> Prelude.Bool
                 -> IOAdUser a0
                 -> Prelude.IO ()
setUserPrivilege priv bNewValue =
  Automation.method0 "SetUserPrivilege"
                     [ Automation.inInt32 priv
                     , Automation.inBool bNewValue
                     ]

getUserPrivilege :: Int.Int32
                 -> IOAdUser a0
                 -> Prelude.IO Prelude.Bool
getUserPrivilege priv =
  Automation.function1 "GetUserPrivilege"
                       [Automation.inInt32 priv]
                       Automation.outBool

-- --------------------------------------------------
-- 
-- coclass OAdUser
-- 
--   implements: IOAdUser
-- --------------------------------------------------
clsidOAdUser :: Com.CLSID
clsidOAdUser = Com.mkCLSID "{B48005E6-CF24-11D1-B37A-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdUsers
-- 
-- --------------------------------------------------
data IOAdUsers_ a = IOAdUsers__ 
type IOAdUsers a = Automation.IDispatch (IOAdUsers_ a)
iidIOAdUsers :: Com.IID (IOAdUsers ())
iidIOAdUsers = Com.mkIID "{B48005E7-CF24-11D1-B37A-00A0C9851B52}"

getNewEnum6 :: IOAdUsers a0
            -> Prelude.IO (Com.IUnknown ())
getNewEnum6 =
  Automation.propertyGet "_NewEnum"
                         []
                         Automation.outIUnknown

setNewEnum6 :: Com.IUnknown a0
            -> IOAdUsers a1
            -> Prelude.IO ()
setNewEnum6 prop =
  Automation.propertySet "_NewEnum"
                         [Automation.inIUnknown prop]

getCount6 :: IOAdUsers a0
          -> Prelude.IO Int.Int32
getCount6 =
  Automation.propertyGet "Count"
                         []
                         Automation.outInt32

setCount6 :: Int.Int32
          -> IOAdUsers a0
          -> Prelude.IO ()
setCount6 prop =
  Automation.propertySet "Count"
                         [Automation.inInt32 prop]

item6 :: (Automation.Variant a1)
      => a1
      -> IOAdUsers a0
      -> Prelude.IO (Automation.IDispatch ())
item6 index =
  Automation.function1 "item"
                       [Automation.inVariant index]
                       Automation.outIDispatch

-- --------------------------------------------------
-- 
-- coclass OAdUsers
-- 
--   implements: IOAdUsers
-- --------------------------------------------------
clsidOAdUsers :: Com.CLSID
clsidOAdUsers =
  Com.mkCLSID "{B48005E9-CF24-11D1-B37A-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdGroup
-- 
-- --------------------------------------------------
data IOAdGroup_ a = IOAdGroup__ 
type IOAdGroup a = Automation.IDispatch (IOAdGroup_ a)
iidIOAdGroup :: Com.IID (IOAdGroup ())
iidIOAdGroup = Com.mkIID "{B48005EA-CF24-11D1-B37A-00A0C9851B52}"

getAllSubscribedDatabases0 :: IOAdGroup a0
                           -> Prelude.IO (Automation.IDispatch ())
getAllSubscribedDatabases0 =
  Automation.propertyGet "AllSubscribedDatabases"
                         []
                         Automation.outIDispatch

setAllSubscribedDatabases0 :: Automation.IDispatch a0
                           -> IOAdGroup a1
                           -> Prelude.IO ()
setAllSubscribedDatabases0 prop =
  Automation.propertySet "AllSubscribedDatabases"
                         [Automation.inIDispatch prop]

getGroups0 :: IOAdGroup a0
           -> Prelude.IO (Automation.IDispatch ())
getGroups0 =
  Automation.propertyGet "Groups"
                         []
                         Automation.outIDispatch

setGroups0 :: Automation.IDispatch a0
           -> IOAdGroup a1
           -> Prelude.IO ()
setGroups0 prop =
  Automation.propertySet "Groups"
                         [Automation.inIDispatch prop]

getSubscribedDatabases0 :: IOAdGroup a0
                        -> Prelude.IO (Automation.IDispatch ())
getSubscribedDatabases0 =
  Automation.propertyGet "SubscribedDatabases"
                         []
                         Automation.outIDispatch

setSubscribedDatabases0 :: Automation.IDispatch a0
                        -> IOAdGroup a1
                        -> Prelude.IO ()
setSubscribedDatabases0 prop =
  Automation.propertySet "SubscribedDatabases"
                         [Automation.inIDispatch prop]

getDatabases :: IOAdGroup a0
             -> Prelude.IO (Automation.IDispatch ())
getDatabases =
  Automation.propertyGet "Databases"
                         []
                         Automation.outIDispatch

setDatabases :: Automation.IDispatch a0
             -> IOAdGroup a1
             -> Prelude.IO ()
setDatabases prop =
  Automation.propertySet "Databases"
                         [Automation.inIDispatch prop]

getUsers :: IOAdGroup a0
         -> Prelude.IO (Automation.IDispatch ())
getUsers =
  Automation.propertyGet "Users"
                         []
                         Automation.outIDispatch

setUsers :: Automation.IDispatch a0
         -> IOAdGroup a1
         -> Prelude.IO ()
setUsers prop =
  Automation.propertySet "Users"
                         [Automation.inIDispatch prop]

getActive0 :: IOAdGroup a0
           -> Prelude.IO Prelude.Bool
getActive0 =
  Automation.propertyGet "Active"
                         []
                         Automation.outBool

setActive0 :: Prelude.Bool
           -> IOAdGroup a0
           -> Prelude.IO ()
setActive0 prop =
  Automation.propertySet "Active"
                         [Automation.inBool prop]

getName3 :: IOAdGroup a0
         -> Prelude.IO Prelude.String
getName3 =
  Automation.propertyGet "Name"
                         []
                         Automation.outString

setName1 :: Prelude.String
         -> IOAdGroup a0
         -> Prelude.IO ()
setName1 prop =
  Automation.propertySet "Name"
                         [Automation.inString prop]

addUser :: Automation.IDispatch a1
        -> IOAdGroup a0
        -> Prelude.IO ()
addUser user =
  Automation.method0 "AddUser"
                     [Automation.inIDispatch user]

subscribeDatabase0 :: Automation.IDispatch a1
                   -> IOAdGroup a0
                   -> Prelude.IO ()
subscribeDatabase0 database =
  Automation.method0 "SubscribeDatabase"
                     [Automation.inIDispatch database]

unsubscribeDatabase0 :: Automation.IDispatch a1
                     -> IOAdGroup a0
                     -> Prelude.IO ()
unsubscribeDatabase0 database =
  Automation.method0 "UnsubscribeDatabase"
                     [Automation.inIDispatch database]

unsubscribeAllDatabases0 :: IOAdGroup a0
                         -> Prelude.IO ()
unsubscribeAllDatabases0 =
  Automation.method0 "UnsubscribeAllDatabases"
                     []

isSubscribedToAllDatabases0 :: IOAdGroup a0
                            -> Prelude.IO Prelude.Bool
isSubscribedToAllDatabases0 =
  Automation.function1 "IsSubscribedToAllDatabases"
                       []
                       Automation.outBool

setSubscribedToAllDatabases0 :: Prelude.Bool
                             -> IOAdGroup a0
                             -> Prelude.IO ()
setSubscribedToAllDatabases0 bIsSubAll =
  Automation.method0 "SetSubscribedToAllDatabases"
                     [Automation.inBool bIsSubAll]

removeUser :: Automation.IDispatch a1
           -> IOAdGroup a0
           -> Prelude.IO ()
removeUser user =
  Automation.method0 "RemoveUser"
                     [Automation.inIDispatch user]

siteHasMastership2 :: IOAdGroup a0
                   -> Prelude.IO Prelude.Bool
siteHasMastership2 =
  Automation.function1 "SiteHasMastership"
                       []
                       Automation.outBool

addGroup :: Automation.IDispatch a1
         -> IOAdGroup a0
         -> Prelude.IO ()
addGroup group =
  Automation.method0 "AddGroup"
                     [Automation.inIDispatch group]

removeGroup :: Automation.IDispatch a1
            -> IOAdGroup a0
            -> Prelude.IO ()
removeGroup group =
  Automation.method0 "RemoveGroup"
                     [Automation.inIDispatch group]

-- --------------------------------------------------
-- 
-- coclass OAdGroup
-- 
--   implements: IOAdGroup
-- --------------------------------------------------
clsidOAdGroup :: Com.CLSID
clsidOAdGroup =
  Com.mkCLSID "{B48005EC-CF24-11D1-B37A-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdGroups
-- 
-- --------------------------------------------------
data IOAdGroups_ a = IOAdGroups__ 
type IOAdGroups a = Automation.IDispatch (IOAdGroups_ a)
iidIOAdGroups :: Com.IID (IOAdGroups ())
iidIOAdGroups = Com.mkIID "{B48005ED-CF24-11D1-B37A-00A0C9851B52}"

getNewEnum7 :: IOAdGroups a0
            -> Prelude.IO (Com.IUnknown ())
getNewEnum7 =
  Automation.propertyGet "_NewEnum"
                         []
                         Automation.outIUnknown

setNewEnum7 :: Com.IUnknown a0
            -> IOAdGroups a1
            -> Prelude.IO ()
setNewEnum7 prop =
  Automation.propertySet "_NewEnum"
                         [Automation.inIUnknown prop]

getCount7 :: IOAdGroups a0
          -> Prelude.IO Int.Int32
getCount7 =
  Automation.propertyGet "Count"
                         []
                         Automation.outInt32

setCount7 :: Int.Int32
          -> IOAdGroups a0
          -> Prelude.IO ()
setCount7 prop =
  Automation.propertySet "Count"
                         [Automation.inInt32 prop]

item7 :: (Automation.Variant a1)
      => a1
      -> IOAdGroups a0
      -> Prelude.IO (Automation.IDispatch ())
item7 index =
  Automation.function1 "item"
                       [Automation.inVariant index]
                       Automation.outIDispatch

-- --------------------------------------------------
-- 
-- coclass OAdGroups
-- 
--   implements: IOAdGroups
-- --------------------------------------------------
clsidOAdGroups :: Com.CLSID
clsidOAdGroups =
  Com.mkCLSID "{B48005EF-CF24-11D1-B37A-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdDatabase
-- 
-- --------------------------------------------------
data IOAdDatabase_ a = IOAdDatabase__ 
type IOAdDatabase a = Automation.IDispatch (IOAdDatabase_ a)
iidIOAdDatabase :: Com.IID (IOAdDatabase ())
iidIOAdDatabase =
  Com.mkIID "{B48005F0-CF24-11D1-B37A-00A0C9851B52}"

getDatabaseFeatureLevel :: IOAdDatabase a0
                        -> Prelude.IO Int.Int32
getDatabaseFeatureLevel =
  Automation.propertyGet "DatabaseFeatureLevel"
                         []
                         Automation.outInt32

setDatabaseFeatureLevel :: Int.Int32
                        -> IOAdDatabase a0
                        -> Prelude.IO ()
setDatabaseFeatureLevel prop =
  Automation.propertySet "DatabaseFeatureLevel"
                         [Automation.inInt32 prop]

getIsMaster0 :: IOAdDatabase a0
             -> Prelude.IO Prelude.Bool
getIsMaster0 =
  Automation.propertyGet "IsMaster"
                         []
                         Automation.outBool

setIsMaster :: Prelude.Bool
            -> IOAdDatabase a0
            -> Prelude.IO ()
setIsMaster prop =
  Automation.propertySet "IsMaster"
                         [Automation.inBool prop]

getConnectProtocols :: IOAdDatabase a1
                    -> Prelude.IO a0
getConnectProtocols =
  Automation.propertyGet "ConnectProtocols"
                         []
                         Automation.outVariant

setConnectProtocols :: a0
                    -> IOAdDatabase a1
                    -> Prelude.IO ()
setConnectProtocols prop =
  Automation.propertySet "ConnectProtocols"
                         [Automation.inVariant prop]

getConnectHosts :: IOAdDatabase a1
                -> Prelude.IO a0
getConnectHosts =
  Automation.propertyGet "ConnectHosts"
                         []
                         Automation.outVariant

setConnectHosts :: a0
                -> IOAdDatabase a1
                -> Prelude.IO ()
setConnectHosts prop =
  Automation.propertySet "ConnectHosts"
                         [Automation.inVariant prop]

getSchemaRev :: IOAdDatabase a0
             -> Prelude.IO (Automation.IDispatch ())
getSchemaRev =
  Automation.propertyGet "schemaRev"
                         []
                         Automation.outIDispatch

setSchemaRev :: Automation.IDispatch a0
             -> IOAdDatabase a1
             -> Prelude.IO ()
setSchemaRev prop =
  Automation.propertySet "schemaRev"
                         [Automation.inIDispatch prop]

getSubscribedGroups :: IOAdDatabase a0
                    -> Prelude.IO (Automation.IDispatch ())
getSubscribedGroups =
  Automation.propertyGet "SubscribedGroups"
                         []
                         Automation.outIDispatch

setSubscribedGroups :: Automation.IDispatch a0
                    -> IOAdDatabase a1
                    -> Prelude.IO ()
setSubscribedGroups prop =
  Automation.propertySet "SubscribedGroups"
                         [Automation.inIDispatch prop]

getSubscribedUsers :: IOAdDatabase a0
                   -> Prelude.IO (Automation.IDispatch ())
getSubscribedUsers =
  Automation.propertyGet "SubscribedUsers"
                         []
                         Automation.outIDispatch

setSubscribedUsers :: Automation.IDispatch a0
                   -> IOAdDatabase a1
                   -> Prelude.IO ()
setSubscribedUsers prop =
  Automation.propertySet "SubscribedUsers"
                         [Automation.inIDispatch prop]

getTimeoutInterval :: IOAdDatabase a0
                   -> Prelude.IO Int.Int32
getTimeoutInterval =
  Automation.propertyGet "TimeoutInterval"
                         []
                         Automation.outInt32

setTimeoutInterval :: Int.Int32
                   -> IOAdDatabase a0
                   -> Prelude.IO ()
setTimeoutInterval prop =
  Automation.propertySet "TimeoutInterval"
                         [Automation.inInt32 prop]

getCheckTimeoutInterval :: IOAdDatabase a0
                        -> Prelude.IO Int.Int32
getCheckTimeoutInterval =
  Automation.propertyGet "CheckTimeoutInterval"
                         []
                         Automation.outInt32

setCheckTimeoutInterval :: Int.Int32
                        -> IOAdDatabase a0
                        -> Prelude.IO ()
setCheckTimeoutInterval prop =
  Automation.propertySet "CheckTimeoutInterval"
                         [Automation.inInt32 prop]

getDBOPassword :: IOAdDatabase a0
               -> Prelude.IO Prelude.String
getDBOPassword =
  Automation.propertyGet "DBOPassword"
                         []
                         Automation.outString

setDBOPassword :: Prelude.String
               -> IOAdDatabase a0
               -> Prelude.IO ()
setDBOPassword prop =
  Automation.propertySet "DBOPassword"
                         [Automation.inString prop]

getDBOLogin :: IOAdDatabase a0
            -> Prelude.IO Prelude.String
getDBOLogin =
  Automation.propertyGet "DBOLogin"
                         []
                         Automation.outString

setDBOLogin :: Prelude.String
            -> IOAdDatabase a0
            -> Prelude.IO ()
setDBOLogin prop =
  Automation.propertySet "DBOLogin"
                         [Automation.inString prop]

getRWPassword :: IOAdDatabase a0
              -> Prelude.IO Prelude.String
getRWPassword =
  Automation.propertyGet "RWPassword"
                         []
                         Automation.outString

setRWPassword :: Prelude.String
              -> IOAdDatabase a0
              -> Prelude.IO ()
setRWPassword prop =
  Automation.propertySet "RWPassword"
                         [Automation.inString prop]

getRWLogin :: IOAdDatabase a0
           -> Prelude.IO Prelude.String
getRWLogin =
  Automation.propertyGet "RWLogin"
                         []
                         Automation.outString

setRWLogin :: Prelude.String
           -> IOAdDatabase a0
           -> Prelude.IO ()
setRWLogin prop =
  Automation.propertySet "RWLogin"
                         [Automation.inString prop]

getROPassword :: IOAdDatabase a0
              -> Prelude.IO Prelude.String
getROPassword =
  Automation.propertyGet "ROPassword"
                         []
                         Automation.outString

setROPassword :: Prelude.String
              -> IOAdDatabase a0
              -> Prelude.IO ()
setROPassword prop =
  Automation.propertySet "ROPassword"
                         [Automation.inString prop]

getROLogin :: IOAdDatabase a0
           -> Prelude.IO Prelude.String
getROLogin =
  Automation.propertyGet "ROLogin"
                         []
                         Automation.outString

setROLogin :: Prelude.String
           -> IOAdDatabase a0
           -> Prelude.IO ()
setROLogin prop =
  Automation.propertySet "ROLogin"
                         [Automation.inString prop]

getServer :: IOAdDatabase a0
          -> Prelude.IO Prelude.String
getServer =
  Automation.propertyGet "Server"
                         []
                         Automation.outString

setServer :: Prelude.String
          -> IOAdDatabase a0
          -> Prelude.IO ()
setServer prop =
  Automation.propertySet "Server"
                         [Automation.inString prop]

getDatabaseName0 :: IOAdDatabase a0
                 -> Prelude.IO Prelude.String
getDatabaseName0 =
  Automation.propertyGet "DatabaseName"
                         []
                         Automation.outString

setDatabaseName :: Prelude.String
                -> IOAdDatabase a0
                -> Prelude.IO ()
setDatabaseName prop =
  Automation.propertySet "DatabaseName"
                         [Automation.inString prop]

getDescription2 :: IOAdDatabase a0
                -> Prelude.IO Prelude.String
getDescription2 =
  Automation.propertyGet "Description"
                         []
                         Automation.outString

setDescription1 :: Prelude.String
                -> IOAdDatabase a0
                -> Prelude.IO ()
setDescription1 prop =
  Automation.propertySet "Description"
                         [Automation.inString prop]

getName4 :: IOAdDatabase a0
         -> Prelude.IO Prelude.String
getName4 =
  Automation.propertyGet "Name"
                         []
                         Automation.outString

setName2 :: Prelude.String
         -> IOAdDatabase a0
         -> Prelude.IO ()
setName2 prop =
  Automation.propertySet "Name"
                         [Automation.inString prop]

getVendor :: IOAdDatabase a0
          -> Prelude.IO Int.Int16
getVendor =
  Automation.propertyGet "Vendor"
                         []
                         Automation.outInt16

setVendor :: Int.Int16
          -> IOAdDatabase a0
          -> Prelude.IO ()
setVendor prop =
  Automation.propertySet "Vendor"
                         [Automation.inInt16 prop]

upgrade :: Automation.IDispatch a1
        -> IOAdDatabase a0
        -> Prelude.IO ()
upgrade schemaRev =
  Automation.method0 "Upgrade"
                     [Automation.inIDispatch schemaRev]

setInitialSchemaRev :: Automation.IDispatch a1
                    -> IOAdDatabase a0
                    -> Prelude.IO ()
setInitialSchemaRev schemaRev =
  Automation.method0 "SetInitialSchemaRev"
                     [Automation.inIDispatch schemaRev]

applyPropertyChanges :: (Automation.Variant a1)
                     => a1
                     -> IOAdDatabase a0
                     -> Prelude.IO Prelude.String
applyPropertyChanges varForceEmpty =
  Automation.function1 "ApplyPropertyChanges"
                       [Automation.inVariant varForceEmpty]
                       Automation.outString

applyPropertyChangesWithCopy :: (Automation.Variant a1)
                             => a1
                             -> IOAdDatabase a0
                             -> Prelude.IO Prelude.String
applyPropertyChangesWithCopy varForceEmpty =
  Automation.function1 "ApplyPropertyChangesWithCopy"
                       [Automation.inVariant varForceEmpty]
                       Automation.outString

upgradeMasterUserInfo :: IOAdDatabase a0
                      -> Prelude.IO ()
upgradeMasterUserInfo =
  Automation.method0 "UpgradeMasterUserInfo"
                     []

applyTimeoutValuesToDb :: IOAdDatabase a0
                       -> Prelude.IO ()
applyTimeoutValuesToDb =
  Automation.method0 "ApplyTimeoutValuesToDb"
                     []

getAllUsers0 :: Prelude.Bool
             -> IOAdDatabase a0
             -> Prelude.IO (Automation.IDispatch ())
getAllUsers0 include_inactive =
  Automation.function1 "GetAllUsers"
                       [Automation.inBool include_inactive]
                       Automation.outIDispatch

-- --------------------------------------------------
-- 
-- coclass OAdDatabase
-- 
--   implements: IOAdDatabase
-- --------------------------------------------------
clsidOAdDatabase :: Com.CLSID
clsidOAdDatabase =
  Com.mkCLSID "{B48005F2-CF24-11D1-B37A-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IAdminSession
-- 
-- --------------------------------------------------
data IAdminSession_ a = IAdminSession__ 
type IAdminSession a = Automation.IDispatch (IAdminSession_ a)
iidIAdminSession :: Com.IID (IAdminSession ())
iidIAdminSession =
  Com.mkIID "{B48005F5-CF24-11D1-B37A-00A0C9851B52}"

getSchemas :: IAdminSession a0
           -> Prelude.IO (Automation.IDispatch ())
getSchemas =
  Automation.propertyGet "Schemas"
                         []
                         Automation.outIDispatch

setSchemas :: Automation.IDispatch a0
           -> IAdminSession a1
           -> Prelude.IO ()
setSchemas prop =
  Automation.propertySet "Schemas"
                         [Automation.inIDispatch prop]

getDatabases0 :: IAdminSession a0
              -> Prelude.IO (Automation.IDispatch ())
getDatabases0 =
  Automation.propertyGet "Databases"
                         []
                         Automation.outIDispatch

setDatabases0 :: Automation.IDispatch a0
              -> IAdminSession a1
              -> Prelude.IO ()
setDatabases0 prop =
  Automation.propertySet "Databases"
                         [Automation.inIDispatch prop]

getGroups1 :: IAdminSession a0
           -> Prelude.IO (Automation.IDispatch ())
getGroups1 =
  Automation.propertyGet "Groups"
                         []
                         Automation.outIDispatch

setGroups1 :: Automation.IDispatch a0
           -> IAdminSession a1
           -> Prelude.IO ()
setGroups1 prop =
  Automation.propertySet "Groups"
                         [Automation.inIDispatch prop]

getUsers0 :: IAdminSession a0
          -> Prelude.IO (Automation.IDispatch ())
getUsers0 =
  Automation.propertyGet "Users"
                         []
                         Automation.outIDispatch

setUsers0 :: Automation.IDispatch a0
          -> IAdminSession a1
          -> Prelude.IO ()
setUsers0 prop =
  Automation.propertySet "Users"
                         [Automation.inIDispatch prop]

createUser :: Prelude.String
           -> IAdminSession a0
           -> Prelude.IO (Automation.IDispatch ())
createUser loginName =
  Automation.function1 "CreateUser"
                       [Automation.inString loginName]
                       Automation.outIDispatch

getUser :: Prelude.String
        -> IAdminSession a0
        -> Prelude.IO (Automation.IDispatch ())
getUser loginName =
  Automation.function1 "GetUser"
                       [Automation.inString loginName]
                       Automation.outIDispatch

createGroup :: Prelude.String
            -> IAdminSession a0
            -> Prelude.IO (Automation.IDispatch ())
createGroup groupName =
  Automation.function1 "CreateGroup"
                       [Automation.inString groupName]
                       Automation.outIDispatch

getGroup :: Prelude.String
         -> IAdminSession a0
         -> Prelude.IO (Automation.IDispatch ())
getGroup groupName =
  Automation.function1 "GetGroup"
                       [Automation.inString groupName]
                       Automation.outIDispatch

getDatabase :: Prelude.String
            -> IAdminSession a0
            -> Prelude.IO (Automation.IDispatch ())
getDatabase dbName =
  Automation.function1 "GetDatabase"
                       [Automation.inString dbName]
                       Automation.outIDispatch

createDatabase :: Prelude.String
               -> IAdminSession a0
               -> Prelude.IO (Automation.IDispatch ())
createDatabase dbName =
  Automation.function1 "CreateDatabase"
                       [Automation.inString dbName]
                       Automation.outIDispatch

deleteDatabase :: Prelude.String
               -> IAdminSession a0
               -> Prelude.IO ()
deleteDatabase dbName =
  Automation.method0 "DeleteDatabase"
                     [Automation.inString dbName]

logon :: Prelude.String
      -> Prelude.String
      -> Prelude.String
      -> IAdminSession a0
      -> Prelude.IO ()
logon name password masterDbName =
  Automation.method0 "Logon"
                     [ Automation.inString name
                     , Automation.inString password
                     , Automation.inString masterDbName
                     ]

installAddDbSet :: Prelude.String
                -> Prelude.String
                -> Prelude.String
                -> Prelude.String
                -> Prelude.String
                -> Prelude.String
                -> IAdminSession a0
                -> Prelude.IO Prelude.String
installAddDbSet dbset dbVendor serverArg database rOLogin rOPassword =
  Automation.function1 "InstallAddDbSet"
                       [ Automation.inString dbset
                       , Automation.inString dbVendor
                       , Automation.inString serverArg
                       , Automation.inString database
                       , Automation.inString rOLogin
                       , Automation.inString rOPassword
                       ]
                       Automation.outString

installDropDbSet :: Prelude.String
                 -> IAdminSession a0
                 -> Prelude.IO Prelude.String
installDropDbSet dbset =
  Automation.function1 "InstallDropDbSet"
                       [Automation.inString dbset]
                       Automation.outString

getLastSchemaRepoInfo :: IAdminSession a0
                      -> Prelude.IO (Prelude.String, Prelude.String, Prelude.String, Prelude.String, Prelude.String, Prelude.Bool)
getLastSchemaRepoInfo =
  Automation.method6 "GetLastSchemaRepoInfo"
                     []
                     Automation.outString
                     Automation.outString
                     Automation.outString
                     Automation.outString
                     Automation.outString
                     Automation.outBool

addSchemaRepoLocationFile :: Prelude.String
                          -> IAdminSession a0
                          -> Prelude.IO ()
addSchemaRepoLocationFile filePath =
  Automation.method0 "AddSchemaRepoLocationFile"
                     [Automation.inString filePath]

dropSchemaRepoLocationFile :: Prelude.String
                           -> IAdminSession a0
                           -> Prelude.IO ()
dropSchemaRepoLocationFile filePath =
  Automation.method0 "DropSchemaRepoLocationFile"
                     [Automation.inString filePath]

lookupSchemaRepoLocationFiles :: IAdminSession a0
                              -> Prelude.IO a1
lookupSchemaRepoLocationFiles =
  Automation.function1 "LookupSchemaRepoLocationFiles"
                       []
                       Automation.outVariant

registerSchemaRepoFromFile0 :: Prelude.String
                            -> IAdminSession a0
                            -> Prelude.IO Prelude.String
registerSchemaRepoFromFile0 filePath =
  Automation.function1 "RegisterSchemaRepoFromFile"
                       [Automation.inString filePath]
                       Automation.outString

getAttribute :: Automation.IDispatch a2
             -> Prelude.String
             -> IAdminSession a0
             -> Prelude.IO a1
getAttribute obj func =
  Automation.function1 "GetAttribute"
                       [ Automation.inIDispatch obj
                       , Automation.inString func
                       ]
                       Automation.outVariant

getAttribute1 :: Automation.IDispatch a2
              -> Prelude.String
              -> Prelude.String
              -> IAdminSession a0
              -> Prelude.IO a1
getAttribute1 obj func field =
  Automation.function1 "GetAttribute1"
                       [ Automation.inIDispatch obj
                       , Automation.inString func
                       , Automation.inString field
                       ]
                       Automation.outVariant

getAttribute2 :: Automation.IDispatch a2
              -> Prelude.String
              -> Prelude.String
              -> Prelude.String
              -> IAdminSession a0
              -> Prelude.IO a1
getAttribute2 obj func field arg =
  Automation.function1 "GetAttribute2"
                       [ Automation.inIDispatch obj
                       , Automation.inString func
                       , Automation.inString field
                       , Automation.inString arg
                       ]
                       Automation.outVariant

getAttribute3 :: Automation.IDispatch a2
              -> Prelude.String
              -> Prelude.String
              -> Prelude.String
              -> Prelude.String
              -> IAdminSession a0
              -> Prelude.IO a1
getAttribute3 obj func field arg1 arg2 =
  Automation.function1 "GetAttribute3"
                       [ Automation.inIDispatch obj
                       , Automation.inString func
                       , Automation.inString field
                       , Automation.inString arg1
                       , Automation.inString arg2
                       ]
                       Automation.outVariant

isReplicated0 :: IAdminSession a0
              -> Prelude.IO Prelude.Bool
isReplicated0 =
  Automation.function1 "IsReplicated"
                       []
                       Automation.outBool

isMultisiteActivated0 :: IAdminSession a0
                      -> Prelude.IO Prelude.Bool
isMultisiteActivated0 =
  Automation.function1 "IsMultisiteActivated"
                       []
                       Automation.outBool

getLastSchemaRepoInfoByDbSet :: Prelude.String
                             -> IAdminSession a0
                             -> Prelude.IO (Prelude.String, Prelude.String, Prelude.String, Prelude.String, Prelude.String, Prelude.Bool)
getLastSchemaRepoInfoByDbSet dbset =
  Automation.method6 "GetLastSchemaRepoInfoByDbSet"
                     [Automation.inString dbset]
                     Automation.outString
                     Automation.outString
                     Automation.outString
                     Automation.outString
                     Automation.outString
                     Automation.outBool

registerSchemaRepoFromFileByDbSet0 :: Prelude.String
                                   -> Prelude.String
                                   -> IAdminSession a0
                                   -> Prelude.IO Prelude.String
registerSchemaRepoFromFileByDbSet0 dbset filePath =
  Automation.function1 "RegisterSchemaRepoFromFileByDbSet"
                       [ Automation.inString dbset
                       , Automation.inString filePath
                       ]
                       Automation.outString

isStringInCQDataCodePage0 :: Prelude.String
                          -> IAdminSession a0
                          -> Prelude.IO Prelude.Bool
isStringInCQDataCodePage0 string =
  Automation.function1 "IsStringInCQDataCodePage"
                       [Automation.inString string]
                       Automation.outBool

cQDataCodePageIsSet0 :: IAdminSession a0
                     -> Prelude.IO Prelude.Bool
cQDataCodePageIsSet0 =
  Automation.function1 "CQDataCodePageIsSet"
                       []
                       Automation.outBool

isUnsupportedClientCodePage0 :: IAdminSession a0
                             -> Prelude.IO Prelude.Bool
isUnsupportedClientCodePage0 =
  Automation.function1 "IsUnsupportedClientCodePage"
                       []
                       Automation.outBool

isClientCodePageCompatibleWithCQDataCodePage0 :: IAdminSession a0
                                              -> Prelude.IO Prelude.Bool
isClientCodePageCompatibleWithCQDataCodePage0 =
  Automation.function1 "IsClientCodePageCompatibleWithCQDataCodePage"
                       []
                       Automation.outBool

getCQDataCodePage0 :: IAdminSession a0
                   -> Prelude.IO Prelude.String
getCQDataCodePage0 =
  Automation.function1 "GetCQDataCodePage"
                       []
                       Automation.outString

getClientCodePage0 :: IAdminSession a0
                   -> Prelude.IO Prelude.String
getClientCodePage0 =
  Automation.function1 "GetClientCodePage"
                       []
                       Automation.outString

validateStringInCQDataCodePage0 :: Prelude.String
                                -> IAdminSession a0
                                -> Prelude.IO Prelude.String
validateStringInCQDataCodePage0 string =
  Automation.function1 "ValidateStringInCQDataCodePage"
                       [Automation.inString string]
                       Automation.outString

setAuthenticationAlgorithm :: Int.Int32
                           -> IAdminSession a0
                           -> Prelude.IO ()
setAuthenticationAlgorithm authMode =
  Automation.method0 "SetAuthenticationAlgorithm"
                     [Automation.inInt32 authMode]

getAuthenticationAlgorithm :: IAdminSession a0
                           -> Prelude.IO Int.Int32
getAuthenticationAlgorithm =
  Automation.function1 "GetAuthenticationAlgorithm"
                       []
                       Automation.outInt32

createUserLDAPAuthenticated :: Prelude.String
                            -> Prelude.String
                            -> IAdminSession a0
                            -> Prelude.IO (Automation.IDispatch ())
createUserLDAPAuthenticated lDAPloginName cQloginName =
  Automation.function1 "CreateUserLDAPAuthenticated"
                       [ Automation.inString lDAPloginName
                       , Automation.inString cQloginName
                       ]
                       Automation.outIDispatch

getUserLoginName0 :: IAdminSession a0
                  -> Prelude.IO Prelude.String
getUserLoginName0 =
  Automation.function1 "GetUserLoginName"
                       []
                       Automation.outString

validateUserCredentials0 :: Prelude.String
                         -> Prelude.String
                         -> IAdminSession a0
                         -> Prelude.IO Prelude.String
validateUserCredentials0 login pw =
  Automation.function1 "ValidateUserCredentials"
                       [ Automation.inString login
                       , Automation.inString pw
                       ]
                       Automation.outString

getAuthenticationLoginName0 :: IAdminSession a0
                            -> Prelude.IO Prelude.String
getAuthenticationLoginName0 =
  Automation.function1 "GetAuthenticationLoginName"
                       []
                       Automation.outString

isSiteWorkingMaster :: IAdminSession a0
                    -> Prelude.IO Prelude.Bool
isSiteWorkingMaster =
  Automation.function1 "IsSiteWorkingMaster"
                       []
                       Automation.outBool

getCQLDAPMap :: IAdminSession a0
             -> Prelude.IO Int.Int32
getCQLDAPMap =
  Automation.function1 "GetCQLDAPMap"
                       []
                       Automation.outInt32

getEveryoneGroupName0 :: IAdminSession a0
                      -> Prelude.IO Prelude.String
getEveryoneGroupName0 =
  Automation.function1 "GetEveryoneGroupName"
                       []
                       Automation.outString

isValidName :: Prelude.String
            -> Int.Int32
            -> IAdminSession a0
            -> Prelude.IO Prelude.String
isValidName name type0 =
  Automation.function1 "IsValidName"
                       [ Automation.inString name
                       , Automation.inInt32 type0
                       ]
                       Automation.outString

-- --------------------------------------------------
-- 
-- coclass AdminSession
-- 
--   implements: IAdminSession
-- --------------------------------------------------
clsidAdminSession :: Com.CLSID
clsidAdminSession =
  Com.mkCLSID "{B48005F6-CF24-11D1-B37A-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdSchema
-- 
-- --------------------------------------------------
data IOAdSchema_ a = IOAdSchema__ 
type IOAdSchema a = Automation.IDispatch (IOAdSchema_ a)
iidIOAdSchema :: Com.IID (IOAdSchema ())
iidIOAdSchema = Com.mkIID "{E79F83D3-D096-11D1-B37A-00A0C9851B52}"

getSchemaRevs :: IOAdSchema a0
              -> Prelude.IO (Automation.IDispatch ())
getSchemaRevs =
  Automation.propertyGet "SchemaRevs"
                         []
                         Automation.outIDispatch

setSchemaRevs :: Automation.IDispatch a0
              -> IOAdSchema a1
              -> Prelude.IO ()
setSchemaRevs prop =
  Automation.propertySet "SchemaRevs"
                         [Automation.inIDispatch prop]

getName5 :: IOAdSchema a0
         -> Prelude.IO Prelude.String
getName5 =
  Automation.propertyGet "Name"
                         []
                         Automation.outString

setName3 :: Prelude.String
         -> IOAdSchema a0
         -> Prelude.IO ()
setName3 prop =
  Automation.propertySet "Name"
                         [Automation.inString prop]

-- --------------------------------------------------
-- 
-- coclass OAdSchema
-- 
--   implements: IOAdSchema
-- --------------------------------------------------
clsidOAdSchema :: Com.CLSID
clsidOAdSchema =
  Com.mkCLSID "{E79F83D5-D096-11D1-B37A-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdSchemas
-- 
-- --------------------------------------------------
data IOAdSchemas_ a = IOAdSchemas__ 
type IOAdSchemas a = Automation.IDispatch (IOAdSchemas_ a)
iidIOAdSchemas :: Com.IID (IOAdSchemas ())
iidIOAdSchemas = Com.mkIID "{E79F83D6-D096-11D1-B37A-00A0C9851B52}"

getNewEnum8 :: IOAdSchemas a0
            -> Prelude.IO (Com.IUnknown ())
getNewEnum8 =
  Automation.propertyGet "_NewEnum"
                         []
                         Automation.outIUnknown

setNewEnum8 :: Com.IUnknown a0
            -> IOAdSchemas a1
            -> Prelude.IO ()
setNewEnum8 prop =
  Automation.propertySet "_NewEnum"
                         [Automation.inIUnknown prop]

getCount8 :: IOAdSchemas a0
          -> Prelude.IO Int.Int32
getCount8 =
  Automation.propertyGet "Count"
                         []
                         Automation.outInt32

setCount8 :: Int.Int32
          -> IOAdSchemas a0
          -> Prelude.IO ()
setCount8 prop =
  Automation.propertySet "Count"
                         [Automation.inInt32 prop]

item8 :: (Automation.Variant a1)
      => a1
      -> IOAdSchemas a0
      -> Prelude.IO (Automation.IDispatch ())
item8 index =
  Automation.function1 "item"
                       [Automation.inVariant index]
                       Automation.outIDispatch

-- --------------------------------------------------
-- 
-- coclass OAdSchemas
-- 
--   implements: IOAdSchemas
-- --------------------------------------------------
clsidOAdSchemas :: Com.CLSID
clsidOAdSchemas =
  Com.mkCLSID "{E79F83D8-D096-11D1-B37A-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdSchemaRev
-- 
-- --------------------------------------------------
data IOAdSchemaRev_ a = IOAdSchemaRev__ 
type IOAdSchemaRev a = Automation.IDispatch (IOAdSchemaRev_ a)
iidIOAdSchemaRev :: Com.IID (IOAdSchemaRev ())
iidIOAdSchemaRev =
  Com.mkIID "{E79F83D9-D096-11D1-B37A-00A0C9851B52}"

getSchema :: IOAdSchemaRev a0
          -> Prelude.IO (Automation.IDispatch ())
getSchema =
  Automation.propertyGet "Schema"
                         []
                         Automation.outIDispatch

setSchema :: Automation.IDispatch a0
          -> IOAdSchemaRev a1
          -> Prelude.IO ()
setSchema prop =
  Automation.propertySet "Schema"
                         [Automation.inIDispatch prop]

getDescription3 :: IOAdSchemaRev a0
                -> Prelude.IO Prelude.String
getDescription3 =
  Automation.propertyGet "Description"
                         []
                         Automation.outString

setDescription2 :: Prelude.String
                -> IOAdSchemaRev a0
                -> Prelude.IO ()
setDescription2 prop =
  Automation.propertySet "Description"
                         [Automation.inString prop]

getRevID :: IOAdSchemaRev a0
         -> Prelude.IO Int.Int32
getRevID =
  Automation.propertyGet "RevID"
                         []
                         Automation.outInt32

setRevID :: Int.Int32
         -> IOAdSchemaRev a0
         -> Prelude.IO ()
setRevID prop =
  Automation.propertySet "RevID"
                         [Automation.inInt32 prop]

getEnabledEntityDefs0 :: Prelude.String
                      -> Prelude.String
                      -> IOAdSchemaRev a0
                      -> Prelude.IO (Automation.IDispatch ())
getEnabledEntityDefs0 package rev =
  Automation.function1 "GetEnabledEntityDefs"
                       [ Automation.inString package
                       , Automation.inString rev
                       ]
                       Automation.outIDispatch

getEnabledPackageRevs0 :: IOAdSchemaRev a0
                       -> Prelude.IO (Automation.IDispatch ())
getEnabledPackageRevs0 =
  Automation.function1 "GetEnabledPackageRevs"
                       []
                       Automation.outIDispatch

-- --------------------------------------------------
-- 
-- coclass OAdSchemaRev
-- 
--   implements: IOAdSchemaRev
-- --------------------------------------------------
clsidOAdSchemaRev :: Com.CLSID
clsidOAdSchemaRev =
  Com.mkCLSID "{E79F83DB-D096-11D1-B37A-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdSchemaRevs
-- 
-- --------------------------------------------------
data IOAdSchemaRevs_ a = IOAdSchemaRevs__ 
type IOAdSchemaRevs a = Automation.IDispatch (IOAdSchemaRevs_ a)
iidIOAdSchemaRevs :: Com.IID (IOAdSchemaRevs ())
iidIOAdSchemaRevs =
  Com.mkIID "{E79F83DC-D096-11D1-B37A-00A0C9851B52}"

getNewEnum9 :: IOAdSchemaRevs a0
            -> Prelude.IO (Com.IUnknown ())
getNewEnum9 =
  Automation.propertyGet "_NewEnum"
                         []
                         Automation.outIUnknown

setNewEnum9 :: Com.IUnknown a0
            -> IOAdSchemaRevs a1
            -> Prelude.IO ()
setNewEnum9 prop =
  Automation.propertySet "_NewEnum"
                         [Automation.inIUnknown prop]

getCount9 :: IOAdSchemaRevs a0
          -> Prelude.IO Int.Int32
getCount9 =
  Automation.propertyGet "Count"
                         []
                         Automation.outInt32

setCount9 :: Int.Int32
          -> IOAdSchemaRevs a0
          -> Prelude.IO ()
setCount9 prop =
  Automation.propertySet "Count"
                         [Automation.inInt32 prop]

item9 :: (Automation.Variant a1)
      => a1
      -> IOAdSchemaRevs a0
      -> Prelude.IO (Automation.IDispatch ())
item9 index =
  Automation.function1 "item"
                       [Automation.inVariant index]
                       Automation.outIDispatch

-- --------------------------------------------------
-- 
-- coclass OAdSchemaRevs
-- 
--   implements: IOAdSchemaRevs
-- --------------------------------------------------
clsidOAdSchemaRevs :: Com.CLSID
clsidOAdSchemaRevs =
  Com.mkCLSID "{E79F83DE-D096-11D1-B37A-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdDatabases
-- 
-- --------------------------------------------------
data IOAdDatabases_ a = IOAdDatabases__ 
type IOAdDatabases a = Automation.IDispatch (IOAdDatabases_ a)
iidIOAdDatabases :: Com.IID (IOAdDatabases ())
iidIOAdDatabases =
  Com.mkIID "{1F632611-D0B1-11D1-B37A-00A0C9851B52}"

getNewEnum10 :: IOAdDatabases a0
             -> Prelude.IO (Com.IUnknown ())
getNewEnum10 =
  Automation.propertyGet "_NewEnum"
                         []
                         Automation.outIUnknown

setNewEnum10 :: Com.IUnknown a0
             -> IOAdDatabases a1
             -> Prelude.IO ()
setNewEnum10 prop =
  Automation.propertySet "_NewEnum"
                         [Automation.inIUnknown prop]

getCount10 :: IOAdDatabases a0
           -> Prelude.IO Int.Int32
getCount10 =
  Automation.propertyGet "Count"
                         []
                         Automation.outInt32

setCount10 :: Int.Int32
           -> IOAdDatabases a0
           -> Prelude.IO ()
setCount10 prop =
  Automation.propertySet "Count"
                         [Automation.inInt32 prop]

item10 :: (Automation.Variant a1)
       => a1
       -> IOAdDatabases a0
       -> Prelude.IO (Automation.IDispatch ())
item10 index =
  Automation.function1 "item"
                       [Automation.inVariant index]
                       Automation.outIDispatch

-- --------------------------------------------------
-- 
-- coclass OAdDatabases
-- 
--   implements: IOAdDatabases
-- --------------------------------------------------
clsidOAdDatabases :: Com.CLSID
clsidOAdDatabases =
  Com.mkCLSID "{1F632613-D0B1-11D1-B37A-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdEventObject
-- 
-- --------------------------------------------------
data IOAdEventObject_ a = IOAdEventObject__ 
type IOAdEventObject a = Automation.IDispatch (IOAdEventObject_ a)
iidIOAdEventObject :: Com.IID (IOAdEventObject ())
iidIOAdEventObject =
  Com.mkIID "{5ED34A11-D4B3-11D1-B37D-00A0C9851B52}"

getControlDispatch :: IOAdEventObject a0
                   -> Prelude.IO (Automation.IDispatch ())
getControlDispatch =
  Automation.propertyGet "ControlDispatch"
                         []
                         Automation.outIDispatch

setControlDispatch :: Automation.IDispatch a0
                   -> IOAdEventObject a1
                   -> Prelude.IO ()
setControlDispatch prop =
  Automation.propertySet "ControlDispatch"
                         [Automation.inIDispatch prop]

getListSelection :: IOAdEventObject a1
                 -> Prelude.IO a0
getListSelection =
  Automation.propertyGet "ListSelection"
                         []
                         Automation.outVariant

setListSelection :: a0
                 -> IOAdEventObject a1
                 -> Prelude.IO ()
setListSelection prop =
  Automation.propertySet "ListSelection"
                         [Automation.inVariant prop]

getCheckState :: IOAdEventObject a0
              -> Prelude.IO Prelude.Bool
getCheckState =
  Automation.propertyGet "CheckState"
                         []
                         Automation.outBool

setCheckState :: Prelude.Bool
              -> IOAdEventObject a0
              -> Prelude.IO ()
setCheckState prop =
  Automation.propertySet "CheckState"
                         [Automation.inBool prop]

getEditText :: IOAdEventObject a0
            -> Prelude.IO Prelude.String
getEditText =
  Automation.propertyGet "EditText"
                         []
                         Automation.outString

setEditText :: Prelude.String
            -> IOAdEventObject a0
            -> Prelude.IO ()
setEditText prop =
  Automation.propertySet "EditText"
                         [Automation.inString prop]

getObjectItem :: IOAdEventObject a0
              -> Prelude.IO (Automation.IDispatch ())
getObjectItem =
  Automation.propertyGet "ObjectItem"
                         []
                         Automation.outIDispatch

setObjectItem :: Automation.IDispatch a0
              -> IOAdEventObject a1
              -> Prelude.IO ()
setObjectItem prop =
  Automation.propertySet "ObjectItem"
                         [Automation.inIDispatch prop]

getStringItem :: IOAdEventObject a0
              -> Prelude.IO Prelude.String
getStringItem =
  Automation.propertyGet "StringItem"
                         []
                         Automation.outString

setStringItem :: Prelude.String
              -> IOAdEventObject a0
              -> Prelude.IO ()
setStringItem prop =
  Automation.propertySet "StringItem"
                         [Automation.inString prop]

getItemName :: IOAdEventObject a0
            -> Prelude.IO Prelude.String
getItemName =
  Automation.propertyGet "ItemName"
                         []
                         Automation.outString

setItemName :: Prelude.String
            -> IOAdEventObject a0
            -> Prelude.IO ()
setItemName prop =
  Automation.propertySet "ItemName"
                         [Automation.inString prop]

getEventType :: IOAdEventObject a0
             -> Prelude.IO Int.Int32
getEventType =
  Automation.propertyGet "EventType"
                         []
                         Automation.outInt32

setEventType :: Int.Int32
             -> IOAdEventObject a0
             -> Prelude.IO ()
setEventType prop =
  Automation.propertySet "EventType"
                         [Automation.inInt32 prop]

-- --------------------------------------------------
-- 
-- coclass OAdEventObject
-- 
--   implements: IOAdEventObject
-- --------------------------------------------------
clsidOAdEventObject :: Com.CLSID
clsidOAdEventObject =
  Com.mkCLSID "{5ED34A13-D4B3-11D1-B37D-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdItem
-- 
-- --------------------------------------------------
data IOAdItem_ a = IOAdItem__ 
type IOAdItem a = Automation.IDispatch (IOAdItem_ a)
iidIOAdItem :: Com.IID (IOAdItem ())
iidIOAdItem = Com.mkIID "{B9F132E4-96A9-11D2-B40F-00A0C9851B52}"

getValue1 :: IOAdItem a1
          -> Prelude.IO a0
getValue1 =
  Automation.propertyGet "value"
                         []
                         Automation.outVariant

setValue0 :: a0
          -> IOAdItem a1
          -> Prelude.IO ()
setValue0 prop =
  Automation.propertySet "value"
                         [Automation.inVariant prop]

-- --------------------------------------------------
-- 
-- coclass OAdItem
-- 
--   implements: IOAdItem
-- --------------------------------------------------
clsidOAdItem :: Com.CLSID
clsidOAdItem = Com.mkCLSID "{B9F132E5-96A9-11D2-B40F-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdItems
-- 
-- --------------------------------------------------
data IOAdItems_ a = IOAdItems__ 
type IOAdItems a = Automation.IDispatch (IOAdItems_ a)
iidIOAdItems :: Com.IID (IOAdItems ())
iidIOAdItems = Com.mkIID "{B9F132E9-96A9-11D2-B40F-00A0C9851B52}"

getNewEnum11 :: IOAdItems a0
             -> Prelude.IO (Com.IUnknown ())
getNewEnum11 =
  Automation.propertyGet "_NewEnum"
                         []
                         Automation.outIUnknown

setNewEnum11 :: Com.IUnknown a0
             -> IOAdItems a1
             -> Prelude.IO ()
setNewEnum11 prop =
  Automation.propertySet "_NewEnum"
                         [Automation.inIUnknown prop]

getCount11 :: IOAdItems a0
           -> Prelude.IO Int.Int32
getCount11 =
  Automation.propertyGet "Count"
                         []
                         Automation.outInt32

setCount11 :: Int.Int32
           -> IOAdItems a0
           -> Prelude.IO ()
setCount11 prop =
  Automation.propertySet "Count"
                         [Automation.inInt32 prop]

item11 :: (Automation.Variant a1)
       => a1
       -> IOAdItems a0
       -> Prelude.IO (Automation.IDispatch ())
item11 index =
  Automation.function1 "item"
                       [Automation.inVariant index]
                       Automation.outIDispatch

-- --------------------------------------------------
-- 
-- coclass OAdItems
-- 
--   implements: IOAdItems
-- --------------------------------------------------
clsidOAdItems :: Com.CLSID
clsidOAdItems =
  Com.mkCLSID "{B9F132EA-96A9-11D2-B40F-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdEntityDefs
-- 
-- --------------------------------------------------
data IOAdEntityDefs_ a = IOAdEntityDefs__ 
type IOAdEntityDefs a = Automation.IDispatch (IOAdEntityDefs_ a)
iidIOAdEntityDefs :: Com.IID (IOAdEntityDefs ())
iidIOAdEntityDefs =
  Com.mkIID "{B9F132EB-96A9-11D2-B40F-00A0C9851B52}"

getNewEnum12 :: IOAdEntityDefs a0
             -> Prelude.IO (Com.IUnknown ())
getNewEnum12 =
  Automation.propertyGet "_NewEnum"
                         []
                         Automation.outIUnknown

setNewEnum12 :: Com.IUnknown a0
             -> IOAdEntityDefs a1
             -> Prelude.IO ()
setNewEnum12 prop =
  Automation.propertySet "_NewEnum"
                         [Automation.inIUnknown prop]

getCount12 :: IOAdEntityDefs a0
           -> Prelude.IO Int.Int32
getCount12 =
  Automation.propertyGet "Count"
                         []
                         Automation.outInt32

setCount12 :: Int.Int32
           -> IOAdEntityDefs a0
           -> Prelude.IO ()
setCount12 prop =
  Automation.propertySet "Count"
                         [Automation.inInt32 prop]

remove2 :: a1
        -> IOAdEntityDefs a0
        -> Prelude.IO Prelude.Bool
remove2 subscript =
  Automation.function1 "Remove"
                       [Automation.inVariant subscript]
                       Automation.outBool

item12 :: (Automation.Variant a1)
       => a1
       -> IOAdEntityDefs a0
       -> Prelude.IO (Automation.IDispatch ())
item12 index =
  Automation.function1 "item"
                       [Automation.inVariant index]
                       Automation.outIDispatch

-- --------------------------------------------------
-- 
-- coclass OAdEntityDefs
-- 
--   implements: IOAdEntityDefs
-- --------------------------------------------------
clsidOAdEntityDefs :: Com.CLSID
clsidOAdEntityDefs =
  Com.mkCLSID "{B9F132EC-96A9-11D2-B40F-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdPackageRevs
-- 
-- --------------------------------------------------
data IOAdPackageRevs_ a = IOAdPackageRevs__ 
type IOAdPackageRevs a = Automation.IDispatch (IOAdPackageRevs_ a)
iidIOAdPackageRevs :: Com.IID (IOAdPackageRevs ())
iidIOAdPackageRevs =
  Com.mkIID "{B9F132ED-96A9-11D2-B40F-00A0C9851B52}"

getNewEnum13 :: IOAdPackageRevs a0
             -> Prelude.IO (Com.IUnknown ())
getNewEnum13 =
  Automation.propertyGet "_NewEnum"
                         []
                         Automation.outIUnknown

setNewEnum13 :: Com.IUnknown a0
             -> IOAdPackageRevs a1
             -> Prelude.IO ()
setNewEnum13 prop =
  Automation.propertySet "_NewEnum"
                         [Automation.inIUnknown prop]

getCount13 :: IOAdPackageRevs a0
           -> Prelude.IO Int.Int32
getCount13 =
  Automation.propertyGet "Count"
                         []
                         Automation.outInt32

setCount13 :: Int.Int32
           -> IOAdPackageRevs a0
           -> Prelude.IO ()
setCount13 prop =
  Automation.propertySet "Count"
                         [Automation.inInt32 prop]

remove3 :: a1
        -> IOAdPackageRevs a0
        -> Prelude.IO Prelude.Bool
remove3 subscript =
  Automation.function1 "Remove"
                       [Automation.inVariant subscript]
                       Automation.outBool

item13 :: (Automation.Variant a1)
       => a1
       -> IOAdPackageRevs a0
       -> Prelude.IO (Automation.IDispatch ())
item13 index =
  Automation.function1 "item"
                       [Automation.inVariant index]
                       Automation.outIDispatch

-- --------------------------------------------------
-- 
-- coclass OAdPackageRevs
-- 
--   implements: IOAdPackageRevs
-- --------------------------------------------------
clsidOAdPackageRevs :: Com.CLSID
clsidOAdPackageRevs =
  Com.mkCLSID "{B9F132EE-96A9-11D2-B40F-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdPackageRev
-- 
-- --------------------------------------------------
data IOAdPackageRev_ a = IOAdPackageRev__ 
type IOAdPackageRev a = Automation.IDispatch (IOAdPackageRev_ a)
iidIOAdPackageRev :: Com.IID (IOAdPackageRev ())
iidIOAdPackageRev =
  Com.mkIID "{B9F132EF-96A9-11D2-B40F-00A0C9851B52}"

getPackageName :: IOAdPackageRev a0
               -> Prelude.IO Prelude.String
getPackageName =
  Automation.propertyGet "PackageName"
                         []
                         Automation.outString

setPackageName :: Prelude.String
               -> IOAdPackageRev a0
               -> Prelude.IO ()
setPackageName prop =
  Automation.propertySet "PackageName"
                         [Automation.inString prop]

getRevString :: IOAdPackageRev a0
             -> Prelude.IO Prelude.String
getRevString =
  Automation.propertyGet "RevString"
                         []
                         Automation.outString

setRevString :: Prelude.String
             -> IOAdPackageRev a0
             -> Prelude.IO ()
setRevString prop =
  Automation.propertySet "RevString"
                         [Automation.inString prop]

-- --------------------------------------------------
-- 
-- coclass OAdPackageRev
-- 
--   implements: IOAdPackageRev
-- --------------------------------------------------
clsidOAdPackageRev :: Com.CLSID
clsidOAdPackageRev =
  Com.mkCLSID "{B9F132F0-96A9-11D2-B40F-00A0C9851B52}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdReportDef
-- 
-- --------------------------------------------------
data IOAdReportDef_ a = IOAdReportDef__ 
type IOAdReportDef a = Automation.IDispatch (IOAdReportDef_ a)
iidIOAdReportDef :: Com.IID (IOAdReportDef ())
iidIOAdReportDef =
  Com.mkIID "{7C2FB010-4D54-11D4-B501-0004AC96D6BA}"

getIsValid :: IOAdReportDef a0
           -> Prelude.IO Prelude.Bool
getIsValid =
  Automation.propertyGet "IsValid"
                         []
                         Automation.outBool

setIsValid :: Prelude.Bool
           -> IOAdReportDef a0
           -> Prelude.IO ()
setIsValid prop =
  Automation.propertySet "IsValid"
                         [Automation.inBool prop]

getReportDefId :: IOAdReportDef a0
               -> Prelude.IO Int.Int32
getReportDefId =
  Automation.propertyGet "ReportDefId"
                         []
                         Automation.outInt32

setReportDefId :: Int.Int32
               -> IOAdReportDef a0
               -> Prelude.IO ()
setReportDefId prop =
  Automation.propertySet "ReportDefId"
                         [Automation.inInt32 prop]

getEntityDefName0 :: IOAdReportDef a0
                  -> Prelude.IO Prelude.String
getEntityDefName0 =
  Automation.propertyGet "entityDefName"
                         []
                         Automation.outString

setEntityDefName :: Prelude.String
                 -> IOAdReportDef a0
                 -> Prelude.IO ()
setEntityDefName prop =
  Automation.propertySet "entityDefName"
                         [Automation.inString prop]

getName6 :: IOAdReportDef a0
         -> Prelude.IO Prelude.String
getName6 =
  Automation.propertyGet "Name"
                         []
                         Automation.outString

setName4 :: Prelude.String
         -> IOAdReportDef a0
         -> Prelude.IO ()
setName4 prop =
  Automation.propertySet "Name"
                         [Automation.inString prop]

getIsDirty0 :: IOAdReportDef a0
            -> Prelude.IO Prelude.Bool
getIsDirty0 =
  Automation.propertyGet "IsDirty"
                         []
                         Automation.outBool

setIsDirty0 :: Prelude.Bool
            -> IOAdReportDef a0
            -> Prelude.IO ()
setIsDirty0 prop =
  Automation.propertySet "IsDirty"
                         [Automation.inBool prop]

getReportFormatPath :: IOAdReportDef a0
                    -> Prelude.IO Prelude.String
getReportFormatPath =
  Automation.function1 "GetReportFormatPath"
                       []
                       Automation.outString

setReportFormatPath :: Prelude.String
                    -> Prelude.String
                    -> Prelude.Bool
                    -> IOAdReportDef a0
                    -> Prelude.IO ()
setReportFormatPath entityDefName path forceEntity =
  Automation.method0 "SetReportFormatPath"
                     [ Automation.inString entityDefName
                     , Automation.inString path
                     , Automation.inBool forceEntity
                     ]

getReportFormatId :: IOAdReportDef a0
                  -> Prelude.IO Int.Int32
getReportFormatId =
  Automation.function1 "GetReportFormatId"
                       []
                       Automation.outInt32

setReportFormatId :: Int.Int32
                  -> Prelude.Bool
                  -> IOAdReportDef a0
                  -> Prelude.IO ()
setReportFormatId id forceEntity =
  Automation.method0 "SetReportFormatId"
                     [ Automation.inInt32 id
                     , Automation.inBool forceEntity
                     ]

getQueryDefPath :: IOAdReportDef a0
                -> Prelude.IO Prelude.String
getQueryDefPath =
  Automation.function1 "GetQueryDefPath"
                       []
                       Automation.outString

setQueryDefPath :: Prelude.String
                -> Prelude.String
                -> Prelude.Bool
                -> IOAdReportDef a0
                -> Prelude.IO ()
setQueryDefPath entityDefName path forceEntity =
  Automation.method0 "SetQueryDefPath"
                     [ Automation.inString entityDefName
                     , Automation.inString path
                     , Automation.inBool forceEntity
                     ]

getQueryDefId :: IOAdReportDef a0
              -> Prelude.IO Int.Int32
getQueryDefId =
  Automation.function1 "GetQueryDefId"
                       []
                       Automation.outInt32

setQueryDefId :: Int.Int32
              -> Prelude.Bool
              -> IOAdReportDef a0
              -> Prelude.IO ()
setQueryDefId id forceEntity =
  Automation.method0 "SetQueryDefId"
                     [ Automation.inInt32 id
                     , Automation.inBool forceEntity
                     ]

save0 :: Prelude.String
      -> IOAdReportDef a0
      -> Prelude.IO Prelude.Bool
save0 filename =
  Automation.function1 "Save"
                       [Automation.inString filename]
                       Automation.outBool

-- --------------------------------------------------
-- 
-- coclass OAdReportDef
-- 
--   implements: IOAdReportDef
-- --------------------------------------------------
clsidOAdReportDef :: Com.CLSID
clsidOAdReportDef =
  Com.mkCLSID "{7C2FB011-4D54-11D4-B501-0004AC96D6BA}"

-- --------------------------------------------------
-- 
-- dispinterface IReportMgr8
-- 
-- --------------------------------------------------
data IReportMgr8_ a = IReportMgr8__ 
type IReportMgr8 a = Automation.IDispatch (IReportMgr8_ a)
iidIReportMgr8 :: Com.IID (IReportMgr8 ())
iidIReportMgr8 = Com.mkIID "{FC4DA50E-50B2-4E50-A779-D2F57EA3CC5D}"

getQueryDef1 :: IReportMgr8 a0
             -> Prelude.IO (Automation.IDispatch ())
getQueryDef1 =
  Automation.function1 "GetQueryDef"
                       []
                       Automation.outIDispatch

executeReport0 :: IReportMgr8 a0
               -> Prelude.IO ()
executeReport0 =
  Automation.method0 "ExecuteReport"
                     []

getReportPrintJobStatus0 :: IReportMgr8 a0
                         -> Prelude.IO Int.Int32
getReportPrintJobStatus0 =
  Automation.function1 "GetReportPrintJobStatus"
                       []
                       Automation.outInt32

setHTMLFileName0 :: Prelude.String
                 -> IReportMgr8 a0
                 -> Prelude.IO ()
setHTMLFileName0 hTMLPath =
  Automation.method0 "SetHTMLFileName"
                     [Automation.inString hTMLPath]

-- --------------------------------------------------
-- 
-- coclass ReportMgr8
-- 
--   implements: IReportMgr8
-- --------------------------------------------------
clsidReportMgr8 :: Com.CLSID
clsidReportMgr8 =
  Com.mkCLSID "{A0FADB3D-03D2-421C-82F3-32F6A0DD3184}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdFolder
-- 
-- --------------------------------------------------
data IOAdFolder_ a = IOAdFolder__ 
type IOAdFolder a = Automation.IDispatch (IOAdFolder_ a)
iidIOAdFolder :: Com.IID (IOAdFolder ())
iidIOAdFolder = Com.mkIID "{98720365-0491-4910-82A5-93266CFC84B2}"

getName7 :: IOAdFolder a0
         -> Prelude.IO Prelude.String
getName7 =
  Automation.function1 "GetName"
                       []
                       Automation.outString

getPathname :: Int.Int32
            -> IOAdFolder a0
            -> Prelude.IO Prelude.String
getPathname extend_option =
  Automation.function1 "GetPathname"
                       [Automation.inInt32 extend_option]
                       Automation.outString

getDbId0 :: IOAdFolder a0
         -> Prelude.IO Int.Int32
getDbId0 =
  Automation.function1 "GetDbId"
                       []
                       Automation.outInt32

getParent0 :: IOAdFolder a0
           -> Prelude.IO (Automation.IDispatch ())
getParent0 =
  Automation.function1 "GetParent"
                       []
                       Automation.outIDispatch

siteHasMastership3 :: IOAdFolder a0
                   -> Prelude.IO Prelude.Bool
siteHasMastership3 =
  Automation.function1 "SiteHasMastership"
                       []
                       Automation.outBool

getMasterReplicaName :: IOAdFolder a0
                     -> Prelude.IO Prelude.String
getMasterReplicaName =
  Automation.function1 "GetMasterReplicaName"
                       []
                       Automation.outString

setMasterReplicaName :: Prelude.String
                     -> IOAdFolder a0
                     -> Prelude.IO ()
setMasterReplicaName replicaName =
  Automation.method0 "SetMasterReplicaName"
                     [Automation.inString replicaName]

createFolder :: Prelude.String
             -> IOAdFolder a0
             -> Prelude.IO (Automation.IDispatch ())
createFolder name =
  Automation.function1 "CreateFolder"
                       [Automation.inString name]
                       Automation.outIDispatch

deleteFolder :: Prelude.String
             -> IOAdFolder a0
             -> Prelude.IO ()
deleteFolder name =
  Automation.method0 "DeleteFolder"
                     [Automation.inString name]

renameFolder :: Prelude.String
             -> Prelude.String
             -> IOAdFolder a0
             -> Prelude.IO ()
renameFolder oldName newName =
  Automation.method0 "RenameFolder"
                     [ Automation.inString oldName
                     , Automation.inString newName
                     ]

refresh0 :: IOAdFolder a0
         -> Prelude.IO ()
refresh0 =
  Automation.method0 "Refresh"
                     []

getSubfolders :: IOAdFolder a0
              -> Prelude.IO (Automation.IDispatch ())
getSubfolders =
  Automation.function1 "GetSubfolders"
                       []
                       Automation.outIDispatch

getChildNames :: Int.Int32
              -> Prelude.Bool
              -> Int.Int32
              -> IOAdFolder a0
              -> Prelude.IO a1
getChildNames item_type asFullPathname name_option =
  Automation.function1 "GetChildNames"
                       [ Automation.inInt32 item_type
                       , Automation.inBool asFullPathname
                       , Automation.inInt32 name_option
                       ]
                       Automation.outVariant

getChildDbIds :: Int.Int32
              -> IOAdFolder a0
              -> Prelude.IO a1
getChildDbIds itemType =
  Automation.function1 "GetChildDbIds"
                       [Automation.inInt32 itemType]
                       Automation.outVariant

getPossiblePermissions :: IOAdFolder a0
                       -> Prelude.IO (Automation.IDispatch ())
getPossiblePermissions =
  Automation.function1 "GetPossiblePermissions"
                       []
                       Automation.outIDispatch

getPermission :: IOAdFolder a0
              -> Prelude.IO (Automation.IDispatch ())
getPermission =
  Automation.function1 "GetPermission"
                       []
                       Automation.outIDispatch

getPermissionForGroup :: Prelude.String
                      -> IOAdFolder a0
                      -> Prelude.IO (Automation.IDispatch ())
getPermissionForGroup groupName =
  Automation.function1 "GetPermissionForGroup"
                       [Automation.inString groupName]
                       Automation.outIDispatch

getPermissionForUser :: Prelude.String
                     -> IOAdFolder a0
                     -> Prelude.IO (Automation.IDispatch ())
getPermissionForUser username =
  Automation.function1 "GetPermissionForUser"
                       [Automation.inString username]
                       Automation.outIDispatch

getAppliedPermissions :: IOAdFolder a0
                      -> Prelude.IO (Automation.IDispatch ())
getAppliedPermissions =
  Automation.function1 "GetAppliedPermissions"
                       []
                       Automation.outIDispatch

getAppliedPermissionsForGroup :: Prelude.String
                              -> IOAdFolder a0
                              -> Prelude.IO (Automation.IDispatch ())
getAppliedPermissionsForGroup groupName =
  Automation.function1 "GetAppliedPermissionsForGroup"
                       [Automation.inString groupName]
                       Automation.outIDispatch

getAppliedPermissionsForUser :: Prelude.String
                             -> IOAdFolder a0
                             -> Prelude.IO (Automation.IDispatch ())
getAppliedPermissionsForUser username =
  Automation.function1 "GetAppliedPermissionsForUser"
                       [Automation.inString username]
                       Automation.outIDispatch

discoverPermissionsForGroup :: Prelude.String
                            -> IOAdFolder a0
                            -> Prelude.IO (Automation.IDispatch ())
discoverPermissionsForGroup groupName =
  Automation.function1 "DiscoverPermissionsForGroup"
                       [Automation.inString groupName]
                       Automation.outIDispatch

discoverPermissionsForUser :: Prelude.String
                           -> IOAdFolder a0
                           -> Prelude.IO (Automation.IDispatch ())
discoverPermissionsForUser username =
  Automation.function1 "DiscoverPermissionsForUser"
                       [Automation.inString username]
                       Automation.outIDispatch

setPermissions :: Automation.IDispatch a1
               -> IOAdFolder a0
               -> Prelude.IO ()
setPermissions pOapermissions =
  Automation.method0 "SetPermissions"
                     [Automation.inIDispatch pOapermissions]

addPermissions :: Automation.IDispatch a1
               -> IOAdFolder a0
               -> Prelude.IO ()
addPermissions pOapermissions =
  Automation.method0 "AddPermissions"
                     [Automation.inIDispatch pOapermissions]

removePermissions :: Automation.IDispatch a1
                  -> IOAdFolder a0
                  -> Prelude.IO ()
removePermissions pOapermissions =
  Automation.method0 "RemovePermissions"
                     [Automation.inIDispatch pOapermissions]

commitPermissions :: IOAdFolder a0
                  -> Prelude.IO ()
commitPermissions =
  Automation.method0 "CommitPermissions"
                     []

revertPermissions :: IOAdFolder a0
                  -> Prelude.IO ()
revertPermissions =
  Automation.method0 "RevertPermissions"
                     []

getAllGroupPermissions :: Int.Int32
                       -> IOAdFolder a0
                       -> Prelude.IO a1
getAllGroupPermissions kindAsName =
  Automation.function1 "GetAllGroupPermissions"
                       [Automation.inInt32 kindAsName]
                       Automation.outVariant

isReadable :: IOAdFolder a0
           -> Prelude.IO Prelude.Bool
isReadable =
  Automation.function1 "IsReadable"
                       []
                       Automation.outBool

isWritable :: IOAdFolder a0
           -> Prelude.IO Prelude.Bool
isWritable =
  Automation.function1 "IsWritable"
                       []
                       Automation.outBool

canChangePermissions :: IOAdFolder a0
                     -> Prelude.IO Prelude.Bool
canChangePermissions =
  Automation.function1 "CanChangePermissions"
                       []
                       Automation.outBool

getSubfolder :: Prelude.String
             -> IOAdFolder a0
             -> Prelude.IO (Automation.IDispatch ())
getSubfolder childName =
  Automation.function1 "GetSubfolder"
                       [Automation.inString childName]
                       Automation.outIDispatch

-- --------------------------------------------------
-- 
-- coclass OAdFolder
-- 
--   implements: IOAdFolder
-- --------------------------------------------------
clsidOAdFolder :: Com.CLSID
clsidOAdFolder =
  Com.mkCLSID "{98720366-0491-4910-82A5-93266CFC84B2}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdPermission
-- 
-- --------------------------------------------------
data IOAdPermission_ a = IOAdPermission__ 
type IOAdPermission a = Automation.IDispatch (IOAdPermission_ a)
iidIOAdPermission :: Com.IID (IOAdPermission ())
iidIOAdPermission =
  Com.mkIID "{A39B63C9-9798-401C-BD7B-7BBBF26485CF}"

getFolder0 :: IOAdPermission a0
           -> Prelude.IO (Automation.IDispatch ())
getFolder0 =
  Automation.function1 "GetFolder"
                       []
                       Automation.outIDispatch

getKindNameOf :: Int.Int32
              -> IOAdPermission a0
              -> Prelude.IO Prelude.String
getKindNameOf kind =
  Automation.function1 "GetKindNameOf"
                       [Automation.inInt32 kind]
                       Automation.outString

isSamePermission :: Automation.IDispatch a1
                 -> IOAdPermission a0
                 -> Prelude.IO Prelude.Bool
isSamePermission permission0 =
  Automation.function1 "IsSamePermission"
                       [Automation.inIDispatch permission0]
                       Automation.outBool

getKindName :: IOAdPermission a0
            -> Prelude.IO Prelude.String
getKindName =
  Automation.function1 "GetKindName"
                       []
                       Automation.outString

getKind :: IOAdPermission a0
        -> Prelude.IO Int.Int32
getKind =
  Automation.function1 "GetKind"
                       []
                       Automation.outInt32

setKind :: Int.Int32
        -> IOAdPermission a0
        -> Prelude.IO ()
setKind kind =
  Automation.method0 "SetKind"
                     [Automation.inInt32 kind]

getGroup0 :: Int.Int32
          -> IOAdPermission a0
          -> Prelude.IO Prelude.String
getGroup0 extend_option =
  Automation.function1 "GetGroup"
                       [Automation.inInt32 extend_option]
                       Automation.outString

setGroup :: Prelude.String
         -> IOAdPermission a0
         -> Prelude.IO ()
setGroup groupName =
  Automation.method0 "SetGroup"
                     [Automation.inString groupName]

getObjectDbId :: IOAdPermission a0
              -> Prelude.IO Int.Int32
getObjectDbId =
  Automation.function1 "GetObjectDbId"
                       []
                       Automation.outInt32

allowsRead :: IOAdPermission a0
           -> Prelude.IO Prelude.Bool
allowsRead =
  Automation.function1 "AllowsRead"
                       []
                       Automation.outBool

allowsWrite :: IOAdPermission a0
            -> Prelude.IO Prelude.Bool
allowsWrite =
  Automation.function1 "AllowsWrite"
                       []
                       Automation.outBool

-- --------------------------------------------------
-- 
-- coclass OAdPermission
-- 
--   implements: IOAdPermission
-- --------------------------------------------------
clsidOAdPermission :: Com.CLSID
clsidOAdPermission =
  Com.mkCLSID "{A39B63CA-9798-401C-BD7B-7BBBF26485CF}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdPermissions
-- 
-- --------------------------------------------------
data IOAdPermissions_ a = IOAdPermissions__ 
type IOAdPermissions a = Automation.IDispatch (IOAdPermissions_ a)
iidIOAdPermissions :: Com.IID (IOAdPermissions ())
iidIOAdPermissions =
  Com.mkIID "{62975AFC-FD86-4E7A-A256-2D366AF15D54}"

getCount14 :: IOAdPermissions a0
           -> Prelude.IO Int.Int32
getCount14 =
  Automation.propertyGet "Count"
                         []
                         Automation.outInt32

setCount14 :: Int.Int32
           -> IOAdPermissions a0
           -> Prelude.IO ()
setCount14 prop =
  Automation.propertySet "Count"
                         [Automation.inInt32 prop]

add3 :: Automation.IDispatch a1
     -> IOAdPermissions a0
     -> Prelude.IO ()
add3 permission0 =
  Automation.method0 "Add"
                     [Automation.inIDispatch permission0]

remove4 :: Automation.IDispatch a1
        -> IOAdPermissions a0
        -> Prelude.IO ()
remove4 permission0 =
  Automation.method0 "Remove"
                     [Automation.inIDispatch permission0]

has :: Automation.IDispatch a1
    -> IOAdPermissions a0
    -> Prelude.IO Prelude.Bool
has permission0 =
  Automation.function1 "Has"
                       [Automation.inIDispatch permission0]
                       Automation.outBool

isACL :: IOAdPermissions a0
      -> Prelude.IO Prelude.Bool
isACL =
  Automation.function1 "IsACL"
                       []
                       Automation.outBool

item14 :: (Automation.Variant a1)
       => a1
       -> IOAdPermissions a0
       -> Prelude.IO (Automation.IDispatch ())
item14 index =
  Automation.function1 "item"
                       [Automation.inVariant index]
                       Automation.outIDispatch

-- --------------------------------------------------
-- 
-- coclass OAdPermissions
-- 
--   implements: IOAdPermissions
-- --------------------------------------------------
clsidOAdPermissions :: Com.CLSID
clsidOAdPermissions =
  Com.mkCLSID "{B93A6649-FD66-45AB-8F44-12C4897D33E1}"

-- --------------------------------------------------
-- 
-- dispinterface IOAdFolders
-- 
-- --------------------------------------------------
data IOAdFolders_ a = IOAdFolders__ 
type IOAdFolders a = Automation.IDispatch (IOAdFolders_ a)
iidIOAdFolders :: Com.IID (IOAdFolders ())
iidIOAdFolders = Com.mkIID "{950B1875-3E96-481B-8C26-84E0B4CB54A7}"

getCount15 :: IOAdFolders a0
           -> Prelude.IO Int.Int32
getCount15 =
  Automation.propertyGet "Count"
                         []
                         Automation.outInt32

setCount15 :: Int.Int32
           -> IOAdFolders a0
           -> Prelude.IO ()
setCount15 prop =
  Automation.propertySet "Count"
                         [Automation.inInt32 prop]

item15 :: (Automation.Variant a1)
       => a1
       -> IOAdFolders a0
       -> Prelude.IO (Automation.IDispatch ())
item15 index =
  Automation.function1 "item"
                       [Automation.inVariant index]
                       Automation.outIDispatch

itemByName :: Prelude.String
           -> IOAdFolders a0
           -> Prelude.IO (Automation.IDispatch ())
itemByName strIndex =
  Automation.function1 "ItemByName"
                       [Automation.inString strIndex]
                       Automation.outIDispatch

-- --------------------------------------------------
-- 
-- coclass OAdFolders
-- 
--   implements: IOAdFolders
-- --------------------------------------------------
clsidOAdFolders :: Com.CLSID
clsidOAdFolders =
  Com.mkCLSID "{AC15542A-5B43-4433-B5DE-DC29322376EA}"


